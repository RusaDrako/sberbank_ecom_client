openapi: 3.0.3
info:
  title: API платёжного шлюза Сбербанка
  version: 1.0.7

  description: |
    Настоящий документ описывает программные интерфейсы платёжного шлюза Сбербанка, который позволяет проводить платежи в интернет-эквайринге.

    По вопросам работы с API необходимо обращаться в Службу Поддержки (email: <a href="mailto:support@ecom.sberbank.ru">support@ecom.sberbank.ru</a>). При обращении желательно указывать, что вопрос по целевому шлюзу интернет-эквайринга.

    По вопросам получения доступов, операционой деятельности и прочим вопросам обслуживания необходимо обращаться к вашему менеджеру.

    ## История изменений
    |Дата       |Версия документа|Описание изменений
    |-----------|----------------|---------------------------------------------------------------------------------------------------------------
    |28.05.2024 |1.0.7           |Добавлена информация по работе с программой лояльности Спасибо
    |15.03.2024 |1.0.6           |Добавлена информация по сервисам смены пароля, POS-кредитования
    |15.12.2023 |1.0.5           |Добавлена информация по повышению конверсии платежей
    |03.10.2023 |1.0.4           |Добавлена документация по фискализации, СБП. Добавлено видео по работе в личном кабинете.
    |18.07.2023 |1.0.3           |Добавлена документация по работе со связками
    |18.07.2023 |1.0.2           |Добавлена документация по тестированию SberPay, внесены коррективы в описание сервисов. Добавлены тестовые карты
    |14.06.2023 |1.0.1           |Добавлено описание регистрации QR-ссылок. Добавлены примеры запросов и ответов для различных бизнес-сценариев
    |21.05.2023 |1.0.0           |Начальная версия openAPI

    # Общая информация

    ## Термины
    * __Платёжный шлюз (ПШ, Шлюз)__ — комплекс решений для осуществления процесса интернет-эквайринга с использованием различных платёжных средств.
    * __Клиент__ — система или лицо, которое взаимодействует с ПШ.
    * __Плательщик__ — физическое или юридическое лицо, совершающее платёж по своей карте за услуги мерчанта в ПШ.
    * __Заказ__ — элементарная сущность ПШ, описывающее заказ в некотором интернет-магазине или его аналоге.
    * __Одностадийный платёж__ — операция по оплате товаров/услуг, не требующая дополнительного подтверждения (Завершения), то есть блокирование и списание средств происходит в один этап. Этот вид платежей предпочтительней, если товар или услуга предоставляется сразу после оплаты.
    * __Двухстадийный платёж__ — операция по оплате товаров/услуг, требующая дополнительного подтверждения (Завершения), то есть оплата производится в два этапа. На первом этапе происходит проверка наличия и блокирование средств плательщика (предавторизация); далее, на втором этапе, компания либо подтверждает необходимость списания средств, либо отменяет блокировку средств. Сумма списания может отличаться от суммы блокировки в меньшую сторону.
    * __Холдирование (Блокировка средств)__ - Состояние суммы средств, предназначенных для возмещения по проведенной операции, с момента успешной авторизации до момента завершения расчетов между банками-участниками. На данном этапе средства еще находятся на счете Плательщика, но уже недоступны для использования на карте.
    * __Возврат средств (Refund)__ — частичный или полный возврат денежных средств Плательщика в случае его отказа от получения товара/услуг или его возврата. Возврат — это офлайн-операция, которая производится после списания денежных средств с Плательщика. Сроки возмещения, как правило, зависят от банка-эмитента и могут достигать 30 дней.
    * __Отмена операции оплаты (Reversal)__ — операция снятия (отмены) удержания денежных средств Плательщика. Отмена — это онлайн-операция, то есть эмитент карты сразу получает запрос на разблокировку суммы. Отмена может быть произведена до начала взаиморасчётов банков-участников, поэтому доступна ограниченное время.
    * __Связка__ — соответствие между Плательщиком и платёжными реквизитами карты (номер карты или токена и срок его действия).
    * __3-D Secure (3DS)__ — протокол дополнительной аутентификации Плательщика, основанный на концепции трёх доменов: эквайрера, эмитента и совместимости.
    * __Access Control Server (ACS)__ — элемент инфраструктуры 3-D Secure, обеспечивающий аутентификацию Плательщика на стороне банка-эмитента.
    * __MPI, 3DS Server__ — элемент инфраструктуры 3-D Secure на стороне банка-эквайрера или Клиента.
    * __Фискализация__ (__54-ФЗ__) - процедура формирования фискального чека по успешно оплаченному Заказу. В данное понятие входит как формирование чека по успешной оплате, так и формирование чека возврата, закрывающего чека и т.д.
    * __ФФД__ - Формат Фискальных Документов. Стандарт Федеральной Налоговой Службы, согласно которому формируются все фискальные чеки.

    ## Обработка сообщений
    * Координаты подключения. Информация о координатах подключения к тестовой среде также доступна в индивидуальном разделе для каждого сервиса (в правой части страницы).

    <span style="color:red;">__Внимание!__</span> Для корректного взаимодействия со шлюзом необходимо [установить сертификат НУЦ Минцифры](https://www.sberbank.com/ru/certificates).

    <span style="color:red;">__Внимание!__</span> На тестовом контуре предусмотрены технические окна: в будние дни зарезервированы временные интервалы 02:00 - 06:00, 09:00 - 10:00 и 18:00 - 20:00 (время Московское) в течение которых могут осуществляться работы по внедрению функционала на тестовый стенд. Стабильность работоспособности контура в это время не гарантируется.

    Тестовая среда: https://ecomtest.sberbank.ru/ecomm/gw/partner/api/v1/.

    Боевая среда: https://ecommerce.sberbank.ru/ecomm/gw/partner/api/v1/.
    * Платёжный шлюз представляет HTTP REST сервисы методом POST, с передачей в заголовках "Content-Type: application/json" и набором символов в кодировке UTF-8. Сообщения передаются в формате JSON (RFC 7159);
    * Наименования объектов в сервисах передаются с учетом регистра;
    * При взаимодействии используется протокол TLS версии 1.2 и 1.3;
    * После регистрации Клиента, предоставляются логин и пароль, который необходимо использовать при подключении к ПШ;
    * Для взаимодействия с сервисами ПШ требуется [установить сертификат НУЦ Минцифры](https://www.sberbank.com/ru/certificates).

    ## Сценарии проведения платежей

    ### Ввод реквизитов на стороне Клиента без 3DS на стороне Шлюза
    <a href='img/sequence_external_card_no_3DS.png' target='_blank'><img src='img/sequence_external_card_no_3DS.png'></a>

    ### Ввод реквизитов на стороне Клиента c 3DS на стороне Шлюза
    <a href='img/sequence_external_card_3DS.png' target='_blank'><img src='img/sequence_external_card_3DS.png'></a>

    ### Ввод реквизитов на стороне Клиента с упрощённым 3DS на стороне Шлюза
    <a href='img/sequence_external_card_simplified_3DS.png' target='_blank'><img src='img/sequence_external_card_simplified_3DS.png'></a>

    ### Ввод реквизитов на стороне Шлюза
    <a href='img/sequence_payment_page.png' target='_blank'><img src='img/sequence_payment_page.png'></a>

    ### Оплата с использованием связок

    Общий алгоритм проведения оплаты по связке.

    Сценарий разбит на два этапа:

    ##### 1. Создание связки.

     <a href='img/sequence_binding_create.png' target='_blank'><img src='img/sequence_binding_create.png'></a>

    Ниже приведено краткое описание алгоритма создания связки.


    1.1. После получения согласия со стороны Плательщика на дальнейшее использование данных карты для проведения оплат, Клиент регистрирует заказ с помощью registerPreAuth.do (register.do) с обязательной передачей параметра clientId.

    <span style="color:red;">__Внимание!__</span> В случае отсутствия указанного параметра в запросе связка не будет создана.
    Рекомендуется использовать registerPreAuth.do во избежание списания средств по заказу.
    В запросе так же может быть передан features=VERIFY. В этом случае сумма заказа должна составлять 0 рублей 0 копеек, средства с Плательщика не списываются. При этом сохраняется проведение всех необходимых проверок. Данный способ регистрации заказа является наиболее корректным для формирования связок.

    1.2. Плательщик оплачивает заказ со всеми аттрибутами: вводом карточных данных и 3DS или оплатой операции через SberPay.

    1.3. При успешной оплате заказа будет создана связка, идентификатор которой можно будет получить с помощью запросов getOrderStatusExtended.do и/или getBindings.do.

    1.4. Опциональный шаг. При необходимости возврата средств по заказу (при авторизации на сумму, отличную от 0 рублей 0 копеек) может быть направлен запрос reverse.do. Отмена требуется для предотвращения фактического списания средств в случае использования технической операции для привязки карты.

    ___Создание связки завершено.___

    ##### 2. Оплата с использованием связки

    <a href='img/sequence_binding_payment.png' target='_blank'><img src='img/sequence_binding_payment.png'></a>

    Ниже приведено краткое описание алгоритма проведения оплаты с использованием имеющейся связки.

    Доступно несколько путей оплаты, инициатором которой может выступать как Плательщик, так и Клиент.

    1. Инициатором выступает Клиент.

    Способ 1.

    1.1.1. Клиент отправляет запрос recurrentPayment.do.

    1.1.2. Платежный шлюз обогащает запрос данными карты, соответствующими полученному от Клиента bindingId.

    1.1.3. Проводится авторизация с использованием данных карт, заполненных в п. 1.1.2.

    1.1.4. Клиенту направляется результат авторизации.

    Способ 2.

    1.2.1. Клиент регистрирует заказ с помощью register.do / registerPreAuth.do с обязательной передачей параметра clientId.

    1.2.2. Инициируется оплата заказа с помощью paymentOrderBinding.do с передачей параметра bindingId.

    <span style="color:red;"> __Внимание!__ </span> Параметр bindingId должен соответствовать переданному при регистрации заказа clientId. В случае попытки оплаты связкой, созданной для другого clientId вернется ошибка "Заказ не может быть оплачен данной связкой"

    1.2.3. Платежный шлюз проверяет соответствие clientId и bindingId. При корректном результате проверки Платежный шлюз обогащает запрос данными карты, соответствующими переданному значению bindingId.

    1.2.4. Проводится авторизация с использованием данных карт, заполненных в п. 1.2.3.

    1.2.5. Клиенту направляется результат авторизации.

    2. Инициатором выступает Плательщик.

    2.1. Плательщик выбирает оплату сохраненной картой.

    2.2. Клиент регистрирует заказ с помощью register.do / registerPreAuth.do с обязательной передачей параметра clientId.

    2.3. Инициируется оплата заказа с помощью paymentOrderBinding.do с передачей параметра bindingId.

    <span style="color:red;"> __Внимание!__</span> Параметр bindingId должен соответствовать переданному при регистрации заказа clientId. В случае попытки оплаты связкой, созданной для другого clientId вернется ошибка "Заказ не может быть оплачен данной связкой"

    2.4. Платежный шлюз проверяет соответствие clientId и bindingId. При корректном результате проверки Платежный шлюз обогащает запрос данными карты, соответствующими переданному значению bindingId.

    2.5. Проводится авторизация с использованием данных карт, заполненных в п. 1.2.3.

    2.6. Клиенту направляется результат авторизации.

    2.7. Клиент оповещает Плательщика о результате авторизации.



    **Внимание!** При несоответствии clientId и bindingId Клиенту возвращается ошибка "Заказ не может быть оплачен данной связкой".

    ## Повышение конверсии платежей
    В сфере электронной коммерции конверсия является одним из важнейших показателей. При корректной интеграции и интуитивном клиентском пути одним из основных способов улучшения показателей является передача дополнительных параметров.

    Дополнительные параметры позволяют получить более полную информацию о клиентах и их платежных операциях, позволяя весомо снизить риски мошенничества и исключить избыточные блокировки операций со стороны Банка, НСПК и иных эмитентов. Передача дополнительных параметров доступна при регистрации заказа и в сервисах оплаты в блоках __jsonParams__ или __additionalParameters__ в соответствии с описанием сервиса в документации.

    __Передача корзины и идентификатора аккаунта плательщика__ партнера являются наиболее весомыми факторами, позволяющими повысить конверсию. Передача корзины заказа может использоваться без функционала фискализации.

    Дополнительные параметры могут пересекаться с параметрами 3DS и в большинстве случаев влияют на результат аутентификации плательщика, повышая вероятность работы по frictionless flow.

    ## Состояния заказа в Шлюзе
    <a href='img/state_orderStatus.png' target='_blank'><img src='img/state_orderStatus.png'></a>

    ## Описание кодов ответа Шлюза

    Каждый заказ имеет 3 попытки оплаты до истечения срока действия заказа (по умолчанию — 20 минут, значение может быть указано при регистрации заказа).
    |actionCode|actionCodeDescription                                                                                                              |Расшифровка кода ответа                                                                                                                                                                    |Рекомендация для Клиента/Плательщика
    |----------|-----------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------
    |-5031     |_Ошибка при оплате СБП_ Подписка клиента не найдена
    |-3101     |                                                                                                                                   |Плательщик запретил выполнение операций по данной связке                                                                                                                                   |Повторить оплату с использованием альтернативного инструмента платежа
    |-3100     |Связка деактивирована                                                                                                              |Повторить оплату с использованием альтернативного инструмента платежа
    |-2020     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Полученный в операции ECI не соответствует допустимым значениям для данной МПС                                                                                                             |Повторить оплату с использованием альтернативного инструмента платежа
    |-2019     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Получена ошибка в процессе обработки 3-D Secure сообщений                                                                                                                                  |Повторить оплату с использованием альтернативного инструмента платежа
    |-2018     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Недоступность Directory Server МПС                                                                                                                                                         |Повторить попытку позже (но в пределах лимита времени, отведенного на оплату заказа) или использовать альтернативный инструмент оплаты заказа
    |-2017     |Операция отклонена. Обратитесь в магазин                                                                                           |Плательщик не аутентифицирован (статус 3-D Secure не Y)                                                                                                                                    |Не пройдена 3ds-аутентификация держателя карты. Повторить оплату с использованием альтернативного инструмента платежа
    |-2016     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Невозможно провести аутентификацию Плательщика (статус 3-D Secure U)                                                                                                                       |Возникла ошибка во время проверки возможности проведения 3ds-аутентификация держателя карты в банке-эмитенте. Необходимо повторить попытку или использовать альтернативный инструмент оплаты заказа
    |-2015     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Получена ошибка в процессе обработки 3-D Secure сообщений                                                                                                                                  |Повторить оплату с использованием альтернативного инструмента платежа
    |-2013     |Исчерпаны попытки оплаты                                                                                                           |Исчерпаны попытки оплаты                                                                                                                                                                   |Для данного заказа превышено установленное количество попыток оплаты. Необходимо создать новый заказ
    |-2011     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Невозможно провести аутентификацию Плательщика (статус 3-D Secure U)                                                                                                                       |Возникла ошибка во время проверки возможности проведения 3ds-аутентификация держателя карты в банке-эмитенте. Необходимо повторить попытку или использовать альтернативный инструмент оплаты заказа
    |-2010     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Ошибка при валидации 3-D Secure сообщений (несовпадение XID)                                                                                                                               |Повторить оплату с использованием альтернативного инструмента платежа
    |-2007     |Истек срок ожидания ввода данных                                                                                                   |Истек срок, отведенный на оплату заказа с момента регистрации платежа (таймаут по умолчанию - 20 мин, продолжительность может быть указана при создании заказа)                        |Необходимо создать новый заказ
    |-2006     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Аутентификация Плательщика завершена неуспешно (статус 3-D Secure N)                                                                                                                       |Аутентификация держателя карты в банке-эмитенте прошла неуспешно. Необходимо повторить попытку или использовать альтернативный инструмент оплаты заказа
    |-2005     |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Ошибка при валидации 3-D Secure сообщений                                                                                                                                                  |Аутентификация держателя карты в банке-эмитенте прошла неуспешно. Необходимо повторить попытку или использовать альтернативный инструмент оплаты заказа
    |-100      |                                                                                                                                   |Не было попыток оплаты                                                                                                                                                                     |Необходимо оплатить заказ
    |-99       |_Ошибка при оплате СБП_ Операция в обработке. Для операций Оплата/возврат СБП, Оплата с прерыванием и отмены/возвраты по QR POS    |Транзакция в обработке                                                                                                                                                                     |Действий не требуется
    |0         |                                                                                                                                   |Платеж успешно прошел                                                                                                                                                                      |Действий не требуется
    |1         |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Для успешного завершения транзакции требуется подтверждение личности                                                                                                                       |Держателю карты необходимо обратиться в банк-эмитент для подтверждения операции
    |5         |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Отказ сети проводить транзакцию                                                                                                                                                            |Повторить оплату с использованием альтернативного инструмента платежа
    |7         |Операция отклонена. Обратитесь в магазин                                                                                           |Изъять карту. Мошенничество                                                                                                                                                                |Повторить оплату с использованием альтернативного инструмента платежа
    |12        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Предпринята попытка выполнить транзакцию на сумму, превышающую лимит, заданный банком-эмитентом                                                                                            |Отклонение запроса процессингом банка-эмитента по причине несоответствия суммы операции условиям ее проведения. Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |13        |Операция отклонена. Обратитесь в магазин                                                                                           |Неверно указана сумма транзакции                                                                                                                                                           |Повторить оплату с использованием альтернативного инструмента платежа
    |14        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Неверный номер карты                                                                                                                                                                       |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа. При получении ответа при оплате связкой — необходимо удалить связку
    |15        |Ошибка проведения платежа. Попробуйте позднее. Если данная ошибка возникла повторно, обратитесь в Ваш банк для разъяснения причин  |МПС не смогла определить эмитента карты                                                                                                                                                    |Повторить оплату с использованием альтернативного инструмента платежа
    |31        |Нет связи с банком. Повторите позже                                                                                                |Нет связи с банком, выпустившим карту                                                                                                                                                      |Повторить позже или использовать другой инструмент/метод оплаты
    |41        |Операция отклонена. Обратитесь в магазин                                                                                           |Изъять карту. Карта утеряна                                                                                                                                                                |В процессинге банка-эмитента карта помечена как утерянная. Следует использовать альтернативный инструмент платежа. При получении ответа при оплате связкой — необходимо удалить связку
    |43        |Операция отклонена. Обратитесь в магазин                                                                                           |Изъять карту. Карта украдена                                                                                                                                                               |В процессинге банка-эмитента карта помечена как украденная. Следует использовать альтернативный инструмент платежа. При получении ответа при оплате связкой — необходимо удалить связку
    |53        |Операция отклонена. Обратитесь в магазин                                                                                           |Карты не существует в системах процессинга                                                                                                                                                 |Отказ от процессинга банка-эмитента по причине закрытия счета или запроса или неверного типа счета. Оплату заказа можно повторить с использованием альтернативного инструмента платежа. При получении ответа при оплате связкой — необходимо удалить связку
    |61        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Предпринята попытка выполнить транзакцию на сумму, превышающую дневной лимит, заданный банком-эмитентом                                                                                    |Плательщику рекомендуется проверить установленные ограничения в банке-эмитенте или повторить оплату с использованием альтернативного инструмента платежа
    |62        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Карта заблокирована                                                                                                                                                                        |В процессинге банка-эмитента на карту наложены ограничения. Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |65        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Превышен лимит на число транзакций: клиент выполнил максимально разрешенное число транзакций в течение лимитного цикла и пытается провести еще одну, либо клиентом самостоятельно установлено ограничение на выполнение операций без 3DS аутентификации                                        |Плательщику рекомендуется проверить установленные ограничения в банке-эмитенте или повторить оплату с использованием альтернативного инструмента платежа
    |75        |Операция отклонена. Обратитесь в магазин                                                                                           |Превышено допустимое число попыток ввода ПИН. Вероятно карта временно заблокирована                                                                                                        |Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |76        |Операция отклонена. Обратитесь в магазин                                                                                           |Не найдена транзакция (в случае завершения, отмены или возврата)                                                                                                                           |Требуется создание нового заказа
    |81        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Отказ в проведении операции со стороны банка-эмитента                                                                                                                                      |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа
    |82        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Некорректный CVC                                                                                                                                                                           |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа
    |93        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Транзакция незаконна                                                                                                                                                                       |Попытка провести транзакцию, нарушающую требования законодательства. Клиенту рекомендуется сообщить об отказе в выполнении операции без детализации причины
    |94        |Операция отклонена. Обратитесь в магазин                                                                                           |Получен дубликат транзакции (в случае завершения или отмены)                                                                                                                               |Требуется уточнить статус обработки
    |96        |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Невозможно провести операцию                                                                                                                                                               |Повторить позже или использовать другой инструмент/метод оплаты
    |101       |Операция отклонена. Проверьте введенные данные, достаточность средств на карте и повторите операцию                                |Истек срок действия карты                                                                                                                                                                  |Рекомендовать держателю проверить корректность введенного срока действия карты и повторить оплату, либо использовать альтернативный инструмент оплаты заказа. При получении ответа при оплате связкой — необходимо удалить связку
    |103       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Нет связи с банком-бмитентом                                                                                                                                                               |Повторить попытку позже (но в пределах лимита времени, отведенного на оплату заказа) или использовать альтернативный инструмент оплаты заказа
    |104       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Попытка выполнения операции по счету, на использование которого наложены ограничения                                                                                                       |В процессинге банка-эмитента на карту наложены ограничения. Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |106       |Операция отклонена. Обратитесь в магазин                                                                                           |Некорректный ПИН. Вероятно карта временно заблокирована                                                                                                                                    |Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |107       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Следует обратиться к банку-эмитенту                                                                                                                                                        |Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |109       |Операция отклонена. Обратитесь в магазин / _Ошибка при оплате СБП_ Оплата в ТСТ приостановлена                                     |Неверно указан идентификатор мерчанта/терминала или АСС заблокирован на уровне процессинга                                                                                                 |Клиенту необходимо связаться с Банком для уточнения причин
    |110       |_Ошибка при оплате СБП_ Некорректный формат запроса или данные не найдены                                                          |Ошибка при формировании запроса                                                                                                                                                            |Клиенту необходимо проверить корректность использования параметров в запросе
    |111       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Неверный номер карты                                                                                                                                                                       |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа. При получении ответа при оплате связкой — необходимо удалить связку
    |116       |Операция отклонена. Проверьте введенные данные, достаточность средств на карте и повторите операцию                                |Сумма транзакции превышает доступный остаток средств на выбранном счете                                                                                                                    |Рекомендовать держателю карты проверить достаточность средств на счете используемой карты, повторить попытку
    |118       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Сервис не разрешён (отказ от банка-эмитента)                                                                                                                                               |В настоящее время данный код не используется
    |120       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Отказ в проведении операции - транзакция не разрешена эмитентом                                                                                                                            |Одна из возможных причин – установленное на уровне продукта ограничение в процессинге банка-эмитента. Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |125       |Операция отклонена. Проверьте введенные данные, достаточность средств на карте и повторите операцию                                |Неверный номер карты. Попытка возврата на сумму больше холда, попытка возврата нулевой суммы                                                                                               |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа
    |239       |Операция отклонена. По требованию банка, выпустившего карту, необходимо отменить подписку                                          |Банк, выпустивший карту, отклонил авторизацию и направил код ответа, подразумевающий отмену подписки, по которой направлялась авторизация                                                  |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа. При получении ответа при оплате связкой — необходимо удалить связку
    |258       |_Ошибка при оплате СБП_ ТСТ не найдено в системе                                                                                   |Неверно указан идентификатор терминала.                                                                                                                                                    |Клиенту необходимо связаться с Банком для уточнения причин
    |400       |                                                                                                                                   |Реверсал обработан                                                                                                                                                                         |Успешная отмена. Действий не требуется
    |902       |Операция отклонена. Обратитесь в банк, выпустивший карту  / _В случае операции по СБП_ Операция не была проведена успешно          |Ограничение по карте (владелец карты пытается выполнить транзакцию, которая для него не разрешена)                                                                                         |Ошибка при обработке транзакции в процессинге банка-эмитента. Оплату заказа можно повторить с использованием альтернативного инструмента платежа
    |904       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Ошибочный формат сообщения с точки зрения банка эмитента.                                                                                                                                  |Повторить оплату с использованием альтернативного инструмента платежа
    |909       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Невозможно провести операцию                                                                                                                                                               |Повторить позже или использовать другой инструмент/метод оплаты
    |910       |Нет связи с банком. Повторите позже                                                                                                |Банк-эмитент недоступен                                                                                                                                                                    |Повторить позже или использовать другой инструмент/метод оплаты
    |913       |Операция отклонена. Обратитесь в банк, выпустивший карту                                                                           |Неверный формат сообщения (Неправильный формат транзакции с точки зрения сети)                                                                                                             |При регистрации заказа был указан неверный код валюты. Необходимо создать новый заказ с корректной валютой.
    |914       |Операция отклонена. Обратитесь в магазин / _В случае операции по СБП_ Оригинальный заказ для отмены не найден                      |Не найдена транзакция (когда посылается завершение или отмена или возврат)                                                                                                                 |Требуется создание нового заказа
    |999       |Операция отклонена. Обратитесь в магазин / _В случае операции по СБП_ подозрительная операция                                      |Отсутствует начало авторизации транзакции. Отклонено по причине мошенничества или ошибка 3-D Secure                                                                                        |Возможная причина – превышена допустимая разница по времени проведения операции и ее отмены/завершения. Для возврата средств держателю карты необходимо использовать операцию возврата.
    |1001      |Не получен ответ от банка. Повторите позже                                                                                         |Пусто (Выставляется в момент регистрации транзакции, т.е. когда еще по транзакции не было введено данных карт)                                                                             |Использовать другой инструмент/метод оплаты
    |1004      |_Ошибка при оплате СБП_ Операция не разрешена партнеру                                                                             |Ошибка при проведении операции (наиболее вероятная причина - не установлены соответствующие разрешения на терминале)                                                                       |Клиенту необходимо связаться с Банком для уточнения причин
    |1014      |Операция отклонена. Обратитесь в магазин                                                                                           |Код отказа платёжного шлюза по умолчанию                                                                                                                                                   |Повторить позже или использовать другой инструмент/метод оплаты
    |1015      |Операция отклонена. Проверьте введенные данные, достаточность средств на карте и повторите операцию                                |Введены неправильные параметры карты                                                                                                                                                       |Проверить реквизиты карты или использовать другой инструмент для оплаты заказа
    |1018      |Не получен ответ от банка. Повторите позже                                                                                         |Таймаут в процессинге Не удалось отправить                                                                                                                                                 |Повторить позже или использовать другой инструмент/метод оплаты
    |1019      |Не получен ответ от банка. Повторите позже                                                                                         |Таймаут в процессинге Удалось отправить, но не получен ответ от банка                                                                                                                      |Повторить позже или использовать другой инструмент/метод оплаты
    |2002      |Операция отклонена. Обратитесь в магазин / _В случае операции по СБП_ Нарушена последовательность запросов                         |Неверная операция                                                                                                                                                                          |Попытка завершить оплату в двухстадийном сценарии при неуспешно обработанной предварительной авторизации. Необходимо создать новый заказ
    |2003      |Операция отклонена. Обратитесь в магазин                                                                                           |Операции без 3-D Secure запрещены Клиенту                                                                                                                                                  |Оплата без дополнительной аутентификации держателей карт (3ds) не разрешена для магазина и попытка аутентификации завершилась неуспешно. Рекомендуется использовать другой инструмент/метод оплаты
    |2004      |Операция отклонена. Обратитесь в магазин                                                                                           |Оплата через SSL без ввода CVС2 запрещена                                                                                                                                                  |Оплата без ввода проверочного кода с карты не разрешена для магазина. Повторить оплату заказа с обязательным вводом проверочного кода карты (CVC2/CVV2/CVP2) держателем
    |2005      |Операция отклонена. Обратитесь в магазин                                                                                           |Платеж не соответствует условиям проверки по 3-D Secure для Клиента                                                                                                                        |Использовать другой инструмент/метод оплаты
    |2007      |Операция отклонена. Обратитесь в магазин                                                                                           |Заказ уже оплачен                                                                                                                                                                          |Заказ был оплачен ранее. Действий не требуется
    |2009      |Операция отклонена. Обратитесь в магазин _В случае операции по СБП_ Сумма отмены/возврата больше суммы оригинальной транзакции     |Сумма возврата превышает сумму оплаты                                                                                                                                                      |Проверить сумму операции, скорректировать при необходимости и повторить возврат или завершение
    |2014      |Операция отклонена. Обратитесь в магазин                                                                                           |Ошибка выполнения 3DS правила                                                                                                                                                              |Попытка провести операцию при настроенных на данном терминале ограничениях, соответствующую условиям ограничений
    |2016      |Операция отклонена. Обратитесь в магазин                                                                                           |Мерчант не имеет разрешения на 3-D Secure, необходимое для проведения платежа                                                                                                              |Попытка провести операцию с 3ds-аутентификацией держателя карты в магазине, который не имеет установленного разрешения на это. Необходимо создать новый заказ


    ## Описание кодов ошибок Шлюза
    |errorCode|errorMessage
    |---------|------------------------------------------------------------------------------------------------------------------------------
    |0        |Обработка запроса прошла без системных ошибок
    |0        |Запрос принят в обработку
    |1        |Заказ с таким номером уже обработан
    |1        |Заказ не может быть оплачен данной связкой
    |1        |Неверный номер карты
    |1        |Срок действия карты неверен
    |1        |Создание связок по данной карте недоступно
    |1        |Связка не найдена
    |2        |Связка неактивна
    |2        |Связка уже создана
    |2        |Неверное состояние связки
    |3        |Не найдена валюта с кодом:
    |4        |В запросе не передан обязательный параметр или передан некорректный обязательный параметр
    |4        |Username не соответствует значению при регистрации заказа
    |4        |Номер заказа не может быть пуст
    |5        |Неверный параметр операции
    |5        |Доступ запрещен
    |5        |Операция запрещена
    |5        |Мерчант не найден в системе
    |5        |Терминал не найден в системе
    |5        |Заказ не найден
    |5        |Срок жизни заказа истек
    |5        |Неверный статус заказа
    |5        |Неверная сумма
    |5        |Нельзя провести частичную отмену более одного раза
    |5        |Сумма завершения превышает сумму холдирования
    |5        |Общая сумма возвратов превышает сумму заказа
    |5        |Ошибка валидации данных запроса
    |5        |Ошибка при проведении операции
    |5        |Ошибка при выполнении запроса
    |5        |При отсутствующем orderId не заполнен OrderNumber
    |5        |Превышено допустимое количество попыток оплаты
    |5        |Error, value of the request parameter
    |5        |Невозможно оплатить заказ - заблокирован другим действием
    |5        |Невозможно завершить оплату заказа - заблокирован другим действием
    |5        |Невозможно отменить заказ - заблокирован другим действием
    |5        |Операция отклонена. Проверьте введенные данные, достаточность средств на карте и повторите операцию. Происходит переадресация
    |5        |Ошибка при проведении платежа
    |6        |Неверныий номер заказа
    |7        |Не найдена успешная предавторизация
    |7        |Общая сумма возвратов превышает сумму заказа
    |7        |Не найдена успешная платежная операция
    |7        |Не найдена операция валидации
    |7        |Системная ошибка
    |7        |System error
    |8        |Валюта в Корзине не совпадает с валютой заказа
    |8        |Сумма товарных позиций в Корзине не совпадает с общей суммой заказа
    |8        |Неверный формат корзины
    |9        |Ошибка валидации данных
    |9        |Превышено кол-во попыток отправки уведомлений
    |9        |Некорректный номер телефона
    |9        |Заказ не найден
    |9        |Клиент не найден
    |9        |Клиент не верифицирован
    |9        |Недостаточно данных по клиенту
    |9        |Клиент неактивен
    |9        |Недостаточно данных по клиенту
    |9        |У найденного клиента есть отметка о смерти
    |9        |Неклассифицированный профиль клиента
    |9        |Найдено несколько клиентов
    |14       |Features указаны некорректно
    |15       |Связка деактивирована клиентом

    ## Тестовые карты
    |PAN карты              |Срок действия  |CVC/CVV  |Код ACS     |Комментарий                                                              |
    |-----------------------|---------------|---------|------------|-------------------------------------------------------------------------|
    |2202 2050 0001 2424    |05/28          |649      |-//-        |МИР 3DS 2.0 Frictionless, Authenticated                                  |
    |2202 2053 0006 8092    |05/26          |583      |111111      |МИР 3DS 2.0 Challenge, Authenticated. Фиксированный остаток - 100 рублей |
    |4006 8009 0096 2514    |05/26          |941      |111111      |VISA 3DS 1.0                                                             |
    |5469 9801 0004 8525    |05/26          |041      |111111      |MasterCard 3DS 1.0                                                       |
    |2202 2061 0004 0083    |05/26          |061      |-//-        |МИР, карта не вовлечена в 3DS                                            |
    |2202 2060 0027 0541    |05/28          |123      |111111      |МИР, корпоративная карта                                                 |
    |2202 2050 0006 0910    |06/28          |810      |111111      |МИР, карта для воспроизведения 116 ошибки (недостаточно средств)         |
    |2202 2021 0759 3166    |06/22          |123      |111111      |МИР, карта для воспроизведения 101 ошибки (карта просрочена)             |


    # Оплата с помощью SberPay
    При взаимодействии с Платежным шлюзом Клиенту доступен функционал оплаты с помощью SberPay в мобильном приложении "Сбербанк-Онлайн".
    Имплементация функционала для достижения наилучших возможных показателей конверсии предусматривает соответствие платежного опыта Клиента с требованиями Банка,
    описание функционала и примеры имплементации доступны в [ознакомительных материалах](promo/sponline.pdf).

    ## Сценарий оплаты c помощью мобильного приложения "Сбербанк-Онлайн"
    __Обратите внимание!__ Работа с функционалом оплаты с помощью SberPay доступна в рамках сервисов, описанных в документации, но может быть
    интегрирована Клиентом отдельно от других способов оплаты. При работе с функционалом SberPay использование блока "sberbankOnlineAttributes" в теле
    запроса в jsonParams является __обязательным__ при регистрации заказа в сервисах register/registerPreAuth.

    <a href='img/sequence_sberpay.png' target='_blank'><img src='img/sequence_sberpay.png'></a>

    При интеграции сценария mweb2app на устройствах apple необходимо реализовывать процедуру перебора диплинков. Это связано с различными версиями приложений, установленных на устройствах пользователей. Подробная инструкция по реализации процедуры доступна в [документе](promo/deeplink_select_mWeb2app_3.pdf).

    Описание требований к клиентскому опыту при реализации функционала SberPay в приложенном [документе](promo/Sberpay_expirience.pdf).

    Описание интеграции функционала SberPay в приложенном [документе](promo/Sberpay_integration.pdf).

    Руководство по логотипам для SberbankOnline в приложенном [документе](promo/Sberpay_logo.pdf).

    Обработка операций и ответы Шлюза соответствуют описанию, размещенному в разделах [Описание кодов ответа Шлюза](doc#section/Obshaya-informaciya/Opisanie-kodov-otveta-Shlyuza)
    и [Описание кодов ошибок Шлюза](doc#section/Obshaya-informaciya/Opisanie-kodov-oshibok-Shlyuza).

    Пример оплаты с использованием SDK SberPay можно увидеть по [ссылке](https://rutube.ru/video/private/870dc0daa27c0808dfb5fc595f85387b/?p=G9FAeSseAPEUiyJ4B0fzLw)

    ## Тестирование оплаты с помощью SberPay
    Дополнительно ознакомиться с процедурой тестирования SberPay можно в [документации](promo/sberpay_tfaq.pdf).

    # Фискализация (54-ФЗ)

    В соответствии с Федеральным законом РФ №54-ФЗ c 01.07.2017 при осуществлении онлайн продаж, Продавец (в данной документации - Клиент), с помощью онлайн-кассы, обязан формировать кассовый чек и направлять его в ФНС и покупателю. В целях исполнения данного требования ПАО Сбербанк разработан механизм интеграции с онлайн-кассами, позволяющий упростить для Клиента данную процедуру. На текущий момент Платежным шлюзом поддерживаются только кассы "АТОЛ Онлайн" и “Цифровая касса ЭВОТОР” (в тестовом режиме) с версиями ФФД 1.05 и 1.2.

    ## Доступный функционал

    - Отправка данных онлайн-кассе для формирования чеков в форматах ФФД 1.05 и 1.2;
    - Формирование чеков прихода, возврата прихода (в том числе - частичного);
    - Возможность переотправки неуспешного чека с изменением корзины;
    - Переотправка чека в случае возникновения ошибки кассы или при таймауте отправки;
    - Создание чека отдельно от финансовой операции (закрывающий чек);
    - Возможность разделения чека на несколько, в случае превышения максимального размера;
    - Получение статуса чека отдельным API запросом.

    ## Условия формирования чеков
    Для успешной регистрации кассового чека необходимо выполнение следующих условий:
      - В запросах register, registerPreAuth, deposit, reverse, refund должна содержаться корзина (блок orderBundle), с обязательным присутствием параметров ffdVersion и receiptType;
      - Функционал фискализации заказов подключен и успешно настроен для мерчанта: учетные данные для подключения онлайн-кассы корректны и внесены в настройки.

    ## Подключение кассы
    Для подключения кассы необходимо:
    1. Зарегистрироваться в сервисе ["АТОЛ Онлайн"](https://sberbank.atol.ru/);
    2. Самостоятельно, в соответствии с [инструкцией](https://atol.online/upload/iblock/83b/0s367ftz1ydlc8cf1v55vljqt3cr16t2/Atol_Pamyatka_APRIL_22.pdf) или с помощью сотрудников АТОЛ Онлайн зарегистрируйте кассу в Федеральной Налоговой Службе (ФНС) и у Оператора Фискальных Данных (ОФД);
    3. В личном кабинете АТОЛ Онлайн получите учетные данные кассы (логин, пароль, код группы ККТ);
    4. Для настройки интеграции направьте запрос в службу технической поддержки интернет-эквайринга Сбербанка. В запросе следует указать учетные данные кассы и используемую версию ФФД.

    ## Сценарии работы с чеками
    <a href='img/ofd.png' target='_blank'><img src='img/ofd.png'></a>

    # Программа лояльности Спасибо

    <span style="color:red;">__Функционал находится в разработке__</span>

    «Спасибо» - это бонусная программа лояльности от ПАО «Сбербанк» для своих клиентов.

    На специальный бонусный счет Плательщика, начисляется процент от суммы покупки, которую Плательщик совершает по карте.

    Для того, чтобы на бонусный счёт Плательщика начислялись баллы при оплате картой, магазину, подключённому к Платёжному шлюзу, не требуется выполнять дополнительных вызовов на своей стороне.

    Накопленными бонусами (1 балл равен 1 рублю) можно оплачивать товары в магазинах-партнёрах программы. Предоставление возможности оплачивать товары/услуги бонусными баллами возможно по нескольких схемам.

    ## Схемы интеграции при оплате бонусами
    ### Оплата с использованием бонусов Спасибо на платёжной странице ПШ
    <a href='img/sequence_loyalty_payment_page.png' target='_blank'><img src='img/sequence_loyalty_payment_page.png'></a>

    ### Оплата с использованием бонусов Спасибо в SberPay
    <a href='img/sequence_loyalty_sberpay.png' target='_blank'><img src='img/sequence_loyalty_sberpay.png'></a>

    ### Оплата с использованием бонусов Спасибо по связке
    <a href='img/sequence_loyalty_binding_payment.png' target='_blank'><img src='img/sequence_loyalty_binding_payment.png'></a>

    ## Ограничения при работе с программой лояльности Спасибо

    * Заказ должен быть оформлен в рублях РФ
    * Доступна только полная отмена заказа (частичная отмена заказа недоступна)
    * Вместо стандартных сервисов завершения двухстадийного сценария `deposit` и возврата сердств Плательщика `refund` необходимо использоать аналогичные сервисы `autoCompletion` и `autoRefund` с указанием общей суммы операции в рублях и бонусах
    * В случае завершения двухстадийного сценария или возврата на частичную сумму Платежный шлюз произведёт перерасчёт пропорции бонусов и рублей
    * При работе с товарной корзиной осуществляются дополнительные проверки на содержание корзины:
      * Для каждой товарной позиции произведение стоимости единицы товара `itemPrice` на количество товарных позиций `quantity.value` должно строго равняться итоговой стоимости товарной позиции `itemAmount`
      * Сумма стоимостей всех товарных позиций `itemAmount` должна равняться иоговой сумме чека `total` и сумме операции в запросе `amount`/`compositeAmount`
      * Для связанных операций __в рамках одного заказа__ (завершение двухстадийного сценария, отмена, возврат) необходимо:
        * Обеспечить неизменность уникальных идентификаторов товарных позиций внутри Корзины `positionId` и `itemCode`
        * Передавать стоимости товаров `itemPrice` и `itemAmount` до вычета бонусов Спасибо
      * Уникальный идентификатор товарной позиции внутри Корзины (`positionId`) должен быть больше или равен 1
      * Доступен возврат только товарных позиций, участвовавших в оплате при одностадийном сценарии (переданных в запросе `register`) или в завершении платежа при двухстадийном сценарии (переданных в запросе `autoCompletion`)
      * За распределение скидки по товарной корзине при оплате бонусами Спасибо отвечает процессинг лояльности Спасибо
      * В случае использования функционала фискализации:
        * Платежный шлюз вычитает применённую скидку бонусами Спасибо из стоимости товарной позиции. Вычитание скидки за счет бонусов Спасибо не распространяется на сервис создания нового чека `doReceipt`
        * В случае, если после применения скидки бонусами Спасибо невозможно корректно расчитать цену за единицу товара, производится разделение одной товарной позиции на две товарные позиции с разными ценами за единицу товара с сохранением общей стоимости товарных позиций
    * Данные о состоянии бонусных баллов по программам лояльности в заказе доступны в ответе на сервис получения информации о заказе `getOrderStatusExtended`

    # Личный кабинет

    Ознакомиться с инструкциями по работе в личном кабинете Сбербанк Бизнес Онлайн вы сможете на [сайте Сбербанка](https://www.sberbank.ru/help/business/sbbol). Ниже приведены наиболее востребованные ссылка на разделы по работе с заказами интернет-эквайринга.

    * [Создание ссылки на оплату](https://www.sberbank.ru/help/business/sbbol/100673)
    * [Завершение двухстадийных заказов](https://www.sberbank.ru/help/business/sbbol/100670)
    * [Отмена по заказам (одно- и двухстадийных)](https://www.sberbank.ru/help/business/sbbol/100671)
    * [Сброс пароля от шлюза и генерация API-key](https://www.sberbank.ru/help/business/sbbol/100667)
    * [Формирование отчетности](https://www.sberbank.ru/help/business/sbbol/100674)
    * [Оформление возврата (в том числе частичного) по заказу](https://www.sberbank.ru/help/business/sbbol/100672)
    * [Поиск заказ](https://www.sberbank.ru/help/business/sbbol/100669)

  x-logo:
      url: img/sberlogo.png
      altText: Sber Acquiring
tags:
  - name: basicServices
    x-displayName: Сервисы для работы с заказом
    description: Методы API для создания заказа, отмены заказа, получения статуса заказа, осуществления возврата средств по заказу.
  - name: paymentServices
    x-displayName: Сервисы проведения оплаты
    description: Методы API для проведения оплаты заказа
  - name: bindingServices
    x-displayName: Сервисы для работы со связками
    description: Методы API для создания, получения информации, активации, деактивации, проведения платежей по связкам
  - name: mirPayServices
    x-displayName: Сервисы MirPay
    description: Методы API для работы с платежами MirPay
  - name: additionalThreeDSServices
    x-displayName: Сервисы 3-D Secure
    description: Методы API для завершения 3-D Secure аутентификаций, прововдимых на стороне Клиента
  - name: callbackServices
    x-displayName: Callback-уведомления
    description: Методы API для отправки уведомлений по операциям и событиям по связкам
  - name: fiscalizationServices
    x-displayName: Сервисы фискализации
    description: |
      Методы API для формирования чеков

      <span style="color:red;">__Обратите внимание на используемый ендпойнт при отправке запроса.__</span>
  - name: loyaltyServices
    x-displayName: Сервисы программы лояльности Спасибо
    description: |
      <span style="color:red;">__Внимание! Функционал находится в разработке.__</span>

      Методы API для работы с программой лояльности Спасибо
  - name: changePasswordServices
    x-displayName: Сервисы работы с учетной записью
    description: |
      Методы установки постоянного пароля и генерации apikey

      <span style="color:red;">__Обратите внимание на используемый ендпойнт при отправке запроса.__</span>

servers:
  - url: 'https://ecomtest.sberbank.ru'
    description: Тестовая среда
paths:
  /ecomm/gw/partner/api/v1/register.do:
    post:
      tags:
        - basicServices
      summary: Регистрация заказа [register]
      operationId: register
      description: |
        Запрос предназначен для регистрации (создания) заказа в Шлюзе. При успешной обработке запроса заказу присваивается номер (идентификатор), уникальный в рамках Шлюза. Метод используется для регистрации заказа с последующией оплатой любым способом:
          - оплата картой
          - оплата SberPay: подробное описание в разделе [Оплата с помощью SberPay](doc#section/Oplata-s-pomoshyu-SberPay)
          - оплата СБП: [подробное описание в документации](promo/SBP_integration.pdf)
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос регистрации заказа по одностадийному сценарию
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerRequest'
            examples:
              cardNo3ds:
                summary: Платёж без 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  features: FORCE_SSL
              cardInternal3ds:
                summary: С атрибутами для 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    destPhoneNum: "+79011234567"
                    billAddrCountry: "643"
                    billAddrCity: Москва
                    billAddrLine1: ул. Вавилова, д. 19
                    chAccAgeInd: "05"
                    threeDSReqAuthMethod: "02"
                    threeDSReqAuthTimestamp: "202306121459"
                    acctId: email@example.com
                  features: FORCE_TDS
              sberPayApp2app:
                summary: С атрибутами для SberPay app2app
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    app2app: true
                    app.deepLink: android-app://ru.testbankmobile/main
              sberPayWeb2app:
                summary: С атрибутами для SberPay web2app
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    web2app: true
                    sberpay.backurl: https://paymentgateway.ru?state=@{BankResultState}
              sberPaymWeb2app:
                summary: С атрибутами для SberPay mweb2app
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    sberpay.backurl: https://paymentgateway.ru?state=@{BankResultState}
              sberpayC2BSBP:
                summary: С атрибутами для привязки C2B СБП
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    qrType: DYNAMIC_QR_SBP
                    sbp.scenario: C2B_SUBSCRIPTION_WITH_PAYMENT
                    sbp.subscriptionPurpose: "Привязка счета для оплаты подписки"
              sberpayC2BSBPsubscript:
                summary: С атрибутами для C2B СБП (в том числе для оплаты подписок)
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  description: "Поле обязательно при оплате с привязанного счета"
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    qrType: DYNAMIC_QR_SBP
                    sbp.scenario: C2B
              sberpayPlatiQR:
                summary: С атрибутами для Плати QR от Сбербанка
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    sberpay.qr.c2b: true
              fiscalization:
                summary: С корзиной для фискализации
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 24600
                  returnUrl: https://testmerchant.ru/return
                  email: customer@testmail.ru
                  orderBundle:
                    ffdVersion: "1.2"
                    receiptType: sell
                    ismOptional: true
                    company:
                      email: email@testshop.ru
                      sno: osn
                      inn: "5027119066"
                      paymentAddress: http://testshop.ru
                    payments: [{type: 1, sum: 24600}]
                    total: 24600
                    cartItems:
                      items: [{positionId: "1", itemCode: "51", name: Сырок творожный со сгущенкой, quantity: {value: 1, measure: "0"}, markCode: {gs1m: MDEwNDYwNTg2NTQ4NzE2MjIxbj1ZR3lJbUhVOmlNWh05MUVFMDYdOTJYNE1sVzk2R1o2ZmV2RGhnUjJhaHNKNUltTmtVZUsyMkdGeEpVMmxjREpRPQ==}, itemPrice: 4700, itemAmount: 4700, paymentMethod: full_payment, paymentObject: "33", tax: {taxType: 2}},                      {positionId: "2", itemCode: "124", name: Виноград без косточек, quantity: {value: 0.4, measure: "11"}, itemPrice: 25000, itemAmount: 10000, paymentMethod: full_payment, paymentObject: "1", tax: {taxType: 4}},                       {positionId: "3", itemCode: "341", name: Услуга доставки, quantity: {value: 1, measure: "0"}, itemPrice: 9900, itemAmount: 9900, paymentMethod: full_payment, paymentObject: "4", tax: {taxType: 4}}]
              POSCred:
                summary: С кредитной корзиной (без фискализации)
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 24600
                  returnUrl: https://testmerchant.ru/return
                  email: customer@testmail.ru
                  orderBundle:
                    orderCreationDate: 2024-02-29T23:59:59,
                    installments: {productType: "INSTALLMENT", productID: "10", rightTerms: [6,12]}
                    cartItems:
                      items: [{positionId: "1", itemCode: "123456", name: "Название товара", quantity: {value: 1, measure: "шт"}, itemPrice: 500000, itemAmount: 500000, itemCurrency: "643"}]

        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerResponse'
              examples:
                basicOrder:
                  summary: Создан обычный заказ
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    externalParams:
                      sbolDeepLink: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
                app2appOrder:
                  summary: Создан заказ для сценария app2app
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    externalParams:
                      sbolDeepLink: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
                      sbolBankInvoiceId: a67b0cedc9a44cfbbce3b9595afaafc1
                creditOrder:
                  summary: Создан кредитный заказ
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/credits/pay_ru?orderId=8fdc9be2-9616-49b4-84ce-dc6d08a9e0b8
                orderSbpQR:
                  summary: Создан заказ с платёжной ссылкой СБП (в том числе при подписке)
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    externalParams:
                      sbolDeepLink: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
                      qrcId: AD10006MNS72CPM49QGO1NIUBH13VD8H
                      sbpPayload: https://qr.nspk.ru/AD10006MNS72CPM49QGO1NIUBH13VD8H?type=02&bank=100000000111&sum=19900&cur=RUB&crc=6CB3
                orderSberQR:
                  summary: Создан заказ с ссылкой плати QR
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    externalParams:
                      sbolDeepLink: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
                      sbolBankInvoiceId: a67b0cedc9a44cfbbce3b9595afaafc1
                      sberPayload: https://platiqr.ru/?dynamicQr=d2b3ea93c92246468bade81e3cc1fb30
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/registerPreAuth.do:
    post:
      tags:
        - basicServices
      summary: Регистрация заказа для двухстадийного сценария [registerPreAuth]
      operationId: registerPreAuth
      description: Запрос предназначен для регистрации (создания) заказа в Шлюзе, дальнейшая обработка (оплата) которого требует дополнительного подтверждения. При успешной обработке запроса заказу присваивается номер (идентификатор), уникальный в рамках Шлюза.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос регистрации заказа по двухстадийному сценарию
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerPreAuthRequest'
            examples:
              cardNo3ds:
                summary: Платёж без 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  features: FORCE_SSL
              cardInternal3ds:
                summary: С атрибутами для 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    destPhoneNum: "+79011234567"
                    billAddrCountry: "643"
                    billAddrCity: Москва
                    billAddrLine1: ул. Вавилова, д. 19
                    chAccAgeInd: "05"
                    threeDSReqAuthMethod: "02"
                    threeDSReqAuthTimestamp: "202306121459"
                    acctId: email@example.com
                  features: FORCE_TDS
              sberPayApp2app:
                summary: С атрибутами для SberPay app2app
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    app2app: true
                    app.deepLink: android-app://ru.testbankmobile/main
              sberPayWeb2app:
                summary: С атрибутами для SberPay web2app
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 19900
                  returnUrl: https://testmerchant.ru/return
                  jsonParams:
                    web2app: true
                    sberpay.backurl: https://paymentgateway.ru?state=@{BankResultState}
              fiscalization:
                summary: С корзиной для фискализации
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  amount: 24600
                  returnUrl: https://testmerchant.ru/return
                  email: customer@testmail.ru
                  orderBundle:
                    ffdVersion: "1.2"
                    receiptType: sell
                    company:
                      email: email@testshop.ru
                      sno: osn
                      inn: "5027119066"
                      paymentAddress: http://testshop.ru
                    payments: [{type: 1, sum: 24600}]
                    total: 24600
                    cartItems:
                      items: [{positionId: "1", itemCode: "51", name: Сырок творожный со сгущенкой, quantity: {value: 1, measure: "0"}, itemPrice: 4700, itemAmount: 4700, paymentMethod: full_prepayment, paymentObject: "10", tax: {taxType: 2}},{positionId: "2", itemCode: "124", name: Виноград без косточек, quantity: {value: 0.4, measure: "11"}, itemPrice: 25000, itemAmount: 10000, paymentMethod: full_prepayment, paymentObject: "10", tax: {taxType: 4}}, {positionId: "3", itemCode: "341", name: Услуга доставки, quantity: {value: 1, measure: "0"}, itemPrice: 9900, itemAmount: 9900, paymentMethod: full_prepayment, paymentObject: "10", tax: {taxType: 4}}]
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerResponse'
              examples:
                success:
                  summary: Заказ создан
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    formUrl: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    externalParams:
                      sbolDeepLink: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
                      sbolBankInvoiceId: a67b0cedc9a44cfbbce3b9595afaafc1
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/deposit.do:
    post:
      tags:
        - basicServices
      summary: Завершение двухстадийного сценария [deposit]
      operationId: deposit
      description: Запрос предназначен для выполнения дополнительного подтверждения оплаты двухстадийного платежа. При успешной обработке подтверждается списание средств со счета Плательщика.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос завершения двухстадийного сценария
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/depositRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              amount: 14900
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/depositResponse'
              examples:
                success:
                  summary: Заказ подтвержден
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/reverse.do:
    post:
      tags:
        - basicServices
      summary: Отмена заказа [reverse]
      operationId: reverse
      description: Запрос предназначен для снятия блокировки средств по операции оплаты. Может быть осуществлена до момента начала взаиморасчетов банков-участников. При оплате Одностадийного платежа может быть выполнена в течение банковского дня совершения операции (~ до 23:59 МСК). При оплате по Двухстадийному сценарию может быть выполнена только до операции завершения двухстадийного сценария.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос отмены заказа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reverseRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reverseResponse'
              examples:
                success:
                  summary: Заказ отменен
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/refund.do:
    post:
      tags:
        - basicServices
      summary: Возврат средств Плательщика [refund]
      operationId: refund
      description: Запрос предназначен для выполнения частичного или полного возврата средств Плательщика, после выполнения взаиморасчетов банков-участников по операции оплаты.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос возврата средств Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refundRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              amount: 14900
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
              examples:
                success:
                  summary: Средства возвращены
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/getOrderStatusExtended.do:
    post:
      tags:
        - basicServices
      summary: Получение информации о заказе [getOrderStatusExtended]
      operationId: getOrderStatusExtended
      description: Запрос предназначен для получения полных данных по ранее зарегистрированному заказу независимо от его статуса.
      requestBody:
        description: Запрос получения информации о заказе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getOrderStatusExtendedRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderStatusExtendedResponse'
              examples:


                success:
                  summary: Заказ найден
                  value:
                    errorCode: "0"
                    merchantOrderParams: [
                      {name: parameter1, value: test1},
                      {name: parameter2, value: test2}]
                    cardAuthInfo:
                      secureAuthInfo:
                        threeDSInfo:
                          cavv: AAABCUKCEQAAAAADIIIRAbpUtuo=
                          xid: 82dfc393-af33-4d8f-819e-e286d565d8a9
                        eci: 2
                      maskedPan: 220138*******0047
                      expiration: "202512"
                      cardHolderName: PETR IVANOV
                      approvalCode: "433187"
                      paymentSystem: MIR
                      paymentWay: CARD
                    bindingInfo:
                      clientId: M79011234567
                      bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                    paymentAmountInfo:
                      approvedAmount: 19900
                      depositedAmount: 19900
                      refundedAmount: 0
                      paymentState: DEPOSITED
                    bankInfo: {}
                    payerData:
                      {email: test@test.com}
                    transactionAttributes: [{name: SbolBankInvoiceId, value: a67b0cedc9a44cfbbce3b9595afaafc1}]
                    attributes: [{name: mdOrder, value: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1}]
                    operations: [
                      {
                      "date": 1675169010957,
                      "type": "AUTHORIZATION",
                      "amount": 19900,
                      "referenceNumber": "303112098637",
                      "approvalCode": "433187",
                      "actionCode": 0}
                      ]
                    orderNumber: e2574f1785324f1592d9029cb05adbbd
                    orderStatus: 2
                    actionCode: 0
                    errorMessage: Обработка запроса прошла без системных ошибок
                    amount: 19900
                    currency: "643"
                    date: 1675169008805
                    depositedDate: 1675169010957
                    orderDescription: Описание заказа
                    ip: "192.168.0.1"
                    authRefNum: "303112098637"
                    authDateTime: 1675169010957
                    terminalId: "20235777"



                loyalty:
                  summary: Заказ с оплатой бонусами Спасибо
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    actionCode: 0
                    amount: 19900
                    attributes: [{name: mdOrder, value: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1}]
                    authDateTime: 1675169010957
                    ip: "192.168.0.1"
                    authRefNum: "303112098637"
                    bankInfo: {}
                    bindingInfo:
                      bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                      clientId: M79011234567
                    cardAuthInfo:
                      approvalCode: "433187"
                      cardHolderName: PETR IVANOV
                      expiration: "202512"
                      maskedPan: 220138*******0047
                      paymentSystem: MIR
                      paymentWay: CARD
                      secureAuthInfo:
                        eci: 2
                        threeDSInfo:
                          cavv: AAABCUKCEQAAAAADIIIRAbpUtuo=
                          xid: 82dfc393-af33-4d8f-819e-e286d565d8a9
                      currency: "643"
                      date: 1675169008805
                      depositedDate: 1675169010957
                    orderNumber: e2574f1785324f1592d9029cb05adbbd
                    orderStatus: 2
                    paymentAmountInfo:
                      approvedAmount: 12200
                      depositedAmount: 12200
                      paymentState: DEPOSITED
                      refundedAmount: 0
                    terminalId: "20235777"
                    transactionAttributes: [{name: SbolBankInvoiceId, value: a67b0cedc9a44cfbbce3b9595afaafc1}]
                    loyaltyInfo:
                      receiptId: "123394343"
                      loyaltyName: sbrf_spasibo
                      paymentBonus:
                        approvedAmountBonus: 7700
                        depositedAmountBonus: 7700
                        refundedAmountBonus: 0
                SBPSubscriptionSuccess:
                  summary: Успешно создана QR подписка
                  value:
                    errorCode: "0"
                    merchantOrderParams: [
                      {name: phone, value: 89123452211},
                      {name: orderId, value: e9eebe9f-9d5d-4e6f-98c3-55ff17e42668},
                      {name: productID, value: "10"},
                      {name: productType, value: INSTALLMENT},
                      {name: term, value: "12"},
                      {name: initialAmount, value: 500000}]
                    cardAuthInfo:
                      secureAuthInfo:
                        threeDSInfo:
                          cavv: AAABCUKCEQAAAAADIIIRAbpUtuo=
                          xid: 82dfc393-af33-4d8f-819e-e286d565d8a9
                        eci: 2
                      maskedPan: 220138*******0047
                      expiration: "202512"
                      cardHolderName: PETR IVANOV
                      approvalCode: "433187"
                      paymentSystem: MIR
                      paymentWay: CARD
                    bindingInfo:
                      clientId: M79011234567
                      bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                    paymentAmountInfo:
                      approvedAmount: 19900
                      depositedAmount: 19900
                      refundedAmount: 0
                      paymentState: DEPOSITED
                    bankInfo: {}
                    payerData: {email: test@ru.com}
                    transactionAttributes: [{name: SbolBankInvoiceId, value: a67b0cedc9a44cfbbce3b9595afaafc1}]
                    attributes: [{name: mdOrder, value: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1},{name: qrcId, value: AB1S0000MJOSCN0N8F7970IVESQM7JMO},{name: subscriptionId, value: 54c0ff476f4b4765a44c87864edcfb03},{name: memberId, value: 100000000111}]
                    orderNumber: e2574f1785324f1592d9029cb05adbbd
                    orderStatus: 2
                    actionCode: 0
                    errorMessage: Обработка запроса прошла без системных ошибок
                    amount: 19900
                    currency: "643"
                    date: 1675169008805
                    depositedDate: 1675169010957
                    authDateTime: 1675169010957
                    authRefNum: "303112098637"
                    terminalId: "20235777"
                orderCreated:
                  summary: Заказ (в примере - кредитный) создан, но попыток оплаты не было
                  value:
                    orderNumber: 111_10
                    orderStatus: 0
                    actionCode: -100
                    actionCodeDescription: Не было попыток оплаты
                    errorCode: 0
                    errorMessage: Обработка запроса прошла без системных ошибок
                    amount: 500000
                    currency: 643
                    date: 1709187696246
                    orderDescription: Описание заказа
                    merchantOrderParams: [{name: phone, value: 89123452211}, {name: orderId, value: 8fdc9be2-9616-49b4-84ce-dc6d08a9e0b8}, {name: productID, value: 10}, {name: productType, value: INSTALLMENT}, {name: rightTerms, value: "6,12"}]
                    terminalId: 20157880
                    payerData: {email: test@ru.com}
                    attributes: [{name: mdOrder, value: 8fdc9be2-9616-49b4-84ce-dc6d08a9e0b8}]
                    orderBundle:
                      cartItems:
                        items: [{positionId: "1", name: Название товара, itemAmount: 500000,
                          itemPrice: 500000, itemCode: "123456", quantity: {measure: "шт", value: 1}, itemCurrency: 643, sectoralItemProps: []}]
                      installments:
                        productType: "INSTALLMENT"
                        productID: "10"
                        rightTerms: [6,12]
                      payments: []
                      vats: []
                      sectoralCheckProps: []
                creditOrderPayed:
                  summary: Заказ (в примере - кредитный) оплачен
                  value:
                    orderNumber: "012"
                    orderStatus: 2
                    actionCode: 0
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    amount: 475000
                    currency: 643
                    date: 1710406607164
                    depositedDate: 1710406899202
                    orderDescription: Описание заказа
                    cardAuthInfo: {
                      paymentSystem: UNDEFINED,
                      paymentWay: IPOS}
                    authDateTime: 1710406899202
                    terminalId: 20157880
                    paymentAmountInfo:
                      approvedAmount: 475000
                      depositedAmount: 475000
                      refundedAmount: 0
                      paymentState: DEPOSITED}
                    bankInfo: {}
                    attributes: [{name: mdOrder, value: "e9eebe9f-9d5d-4e6f-98c3-55ff17e42668"}]
                    orderBundle:
                      cartItems:
                        items: [{positionId: "1", name: Название товара, itemAmount: 500000, itemPrice: 500000, itemCode: "123456", quantity: {measure: "шт", value: 1}, itemCurrency: 643}]
                      payments: []
                      vats: []
                      sectoralCheckProps: []
                      installments:
                        productType: "INSTALLMENT"
                        productID: "10"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/decline.do:
    post:
      tags:
        - basicServices
      summary: Отмена заказа до начала платежа [decline]
      operationId: decline
      description: Запрос предназначен для отмены заказа до момента начала его оплаты Плательщиком (до ввода данных карты).
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос отмены заказа до начала платежа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/declineRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/declineResponse'
              examples:
                success:
                  summary: Заказ отменен
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/paymentOrder.do:
    post:
      tags:
        - paymentServices
      summary: Проведение оплаты по карте [paymentOrder]
      operationId: paymentOrder
      description: Запрос предназначен для блокировки средств на карте Плательщика для проведения дальнейших расчетов между банками-участниками. Доступен при наличии соответствующих разрешений.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос проведения оплаты по карте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentOrderRequest'
            examples:
              cardNo3ds:
                summary: Оплата без 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  MDORDER: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  $PAN: "2201382000000047"
                  $CVC: "123"
                  YYYY: "2025"
                  MM: "12"
              cardInternal3dsBRW:
                summary: Оплата c 3DS в браузере
                value:
                  userName: testUserName
                  password: testPassword
                  MDORDER: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  $PAN: "2201382000000047"
                  $CVC: "123"
                  YYYY: "2025"
                  MM: "12"
                  jsonParams:
                    browserAcceptHeader: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                    browserColorDepth: "48"
                    browserIP: 127.0.0.1
                    browserJavaEnabled: true
                    browserJavascriptEnabled: true
                    browserLanguage: ru
                    browserScreenHeight: "1440"
                    browserScreenWidth: "2560"
                    browserTZ: "180"
                    browserUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0
                    challengeWindowSize: "02"
                  termUrl: https://testmerchant.ru/3DSPayment
                  threeDSMethodNotificationUrl: https://testmerchant.ru/3DSMethod
              cardExternal3ds:
                summary: Оплата с результатом внешнего 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  MDORDER: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  $PAN: "2201382000000047"
                  $CVC: "123"
                  YYYY: "2025"
                  MM: "12"
                  jsonParams:
                    eci: "02"
                    xid: 82dfc393-af33-4d8f-819e-e286d565d8a9
                    cavv: AAABCUKCEQAAAAADIIIRAbpUtuo=
                    paymentSystem: MIR
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentOrderResponse'
              examples:
                finished:
                  summary: Оплата завершена
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                requested3dsProcessForm:
                  summary: Запрошена 3DS аутентификация по упрощённой схеме
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    formUrl: https://ecomtest.sberbank.ru/process_form/start?mdOrder=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                requested3dsMethod:
                  summary: Запрошен 3DS Method
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    threeDSMethodData: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJodHRwczovL3Rlc3RtZXJjaGFudC5ydS90aHJlZURTTWV0aG9kIn0
                    threeDSMethodNotificationUrl: https://testmerchant.ru/3DSMethod
                    threeDSMethodURL: https://ds.vendorcert.mirconnect.ru/ma
                    threeDSServerTransId: 93045e61-d783-40f1-8934-33fd59387ca6
                requested3ds1Challenge:
                  summary: Запрошен Challenge 3DS 1.0.2
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    acsUrl: https://acs.vendorcert.mirconnect.ru/mdpayacs/pareq
                    paReq: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4NeJxVUl1zojAU/SsM70tCYCg613RY6VbqaK3Sdu1LJyZR2ArYAPXj129icbt9u+fmzrnnnhO4PhRb60OqOq/Kge062LZkySuRl5uB/Zj++hHaVt2wUrBtVcqBfZS1fU0hzZSU8ULyVkkKE1nXbCOtXGgKT66Y4MF6JUKfkF7IQn/t+T2OMVuFgtsUZtFcvlPotlK91CGALlCzKZ6xsqHA+PvPZEp9chVgDKiDUEiVxLReSfVaKP7qAvrsQMkKSdP74WgcWXG0GCXWLFlE85un+ztA50fgVVs26kgD3wN0AdCqLc2aZlf3Edrv90719lY5vCoAmRdAX5JmralqzXTIBV2ShExub06T54f98vSSvcTLwzTeeMs0GQAyEyBYIynBxMOuG1ou6WPSJ3r3uQ+sMBIodrC+ogOwMzuiT6Db/0PQhisd0OWACwJ52Ol89IR28l8N6EvucGT85I32KVpf3f6ZtWgiUnRid8F8zIPe72OwzsZD4/J5yDDm2hviG2kdAGRoUBcg6nLX1bf/8BcC+cTR2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=
                    termUrl: https://testmerchant.ru/threeDSPayment
                requested3ds2Challenge:
                  summary: Запрошен Challenge 3DS 2.x.x через браузер
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    acsUrl: https://acs.vendorcert.mirconnect.ru/mdpayacs/creq
                    cReq: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=
                    termUrl: https://testmerchant.ru/threeDSPayment
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    error: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/paymentSberPay.do:
    post:
      tags:
        - paymentServices
      summary: Проведение оплаты через мобильное приложение "Сбербанк-Онлайн" [paymentSberPay]
      operationId: paymentSberPay
      description: Запрос предназначен для выполнения оплаты посредством функционала SberPay, доступного в мобильном приложении "Сбербанк-Онлайн".
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос проведения оплаты через мобильное приложение "Сбербанк-Онлайн"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentSberPayRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              phone: "79011234567"
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentSberPayResponse'
              examples:
                success:
                  summary: Запрос на оплату SberPay направлен Плательщику
                  value:
                    errorCode: "0"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/paymentOrderBySubscription:
    post:
      tags:
        - paymentServices
      summary: Проведение оплаты по подписке СБП [paymentOrderBySubscription]
      operationId: paymentOrderBySubscription
      description: Запрос предназначен для выполнения оплаты по подписке СБП.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос проведения оплаты по подписке СБП
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentOrderBySubscriptionRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              subscriptionId: c9403ef2f9254736a5af837238ce05b1
              memberId: "100000000111"
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentOrderBySubscriptionResponse'
              examples:
                success:
                  summary: Запрос на оплату по подписке СБП направлен Плательщику
                  value:
                    errorCode: "0"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/paymentOrderBinding.do:
    post:
      tags:
        - bindingServices
      summary: Проведение оплаты по связке [paymentOrderBinding]
      operationId: paymentOrderBinding
      description: Запрос предназначен для совершения оплаты (блокировки средств) по ранее сохраненной связке.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос проведения оплаты по связке
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentOrderBindingRequest'
            examples:
              cardNo3ds:
                summary: Оплата без 3DS
                value:
                  userName: testUserName
                  password: testPassword
                  mdOrder: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                  ip: 127.0.0.1
              cardInternal3dsBRW:
                summary: Оплата c 3DS в браузере
                value:
                  userName: testUserName
                  password: testPassword
                  mdOrder: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                  ip: 127.0.0.1
                  jsonParams:
                    browserAcceptHeader: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                    browserColorDepth: "48"
                    browserIP: 127.0.0.1
                    browserJavaEnabled: true
                    browserJavascriptEnabled: true
                    browserLanguage: ru
                    browserScreenHeight: "1440"
                    browserScreenWidth: "2560"
                    browserTZ: "180"
                    browserUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0
                    challengeWindowSize: "02"
                  termUrl: https://testmerchant.ru/3DSPayment
                  threeDSMethodNotificationUrl: https://testmerchant.ru/3DSMethod
              cardLoyalty:
                summary: Оплата c передачей бонусов Спасибо к списанию
                value:
                  userName: testUserName
                  password: testPassword
                  mdOrder: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                  ip: 127.0.0.1
                  jsonParams:
                    sbrf_spasibo:amount_bonus: 7700
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentOrderBindingResponse'
              examples:
                finished:
                  summary: Оплата завершена
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                requested3dsProcessForm:
                  summary: Проведение 3DS аутентификации по упрощённой схеме
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    formUrl: https://ecomtest.sberbank.ru/process_form/start?mdOrder=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                requested3dsMethod:
                  summary: Запрошен 3DS Method
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    threeDSMethodData: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJodHRwczovL3Rlc3RtZXJjaGFudC5ydS90aHJlZURTTWV0aG9kIn0
                    threeDSMethodNotificationUrl: https://testmerchant.ru/3DSMethod
                    threeDSMethodURL: https://ds.vendorcert.mirconnect.ru/ma
                    threeDSServerTransId: 93045e61-d783-40f1-8934-33fd59387ca6
                requested3ds2Challenge:
                  summary: Запрошен Challenge 3DS 2.x.x через браузер
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    acsUrl: https://acs.vendorcert.mirconnect.ru/mdpayacs/creq
                    cReq: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=
                    termUrl: https://testmerchant.ru/threeDSPayment
                requested3ds1Challenge:
                  summary: Запрошен Challenge 3DS 1.0.2
                  value:
                    errorCode: "0"
                    error: Обработка запроса прошла без системных ошибок
                    acsUrl: https://acs.vendorcert.mirconnect.ru/mdpayacs/pareq
                    paReq: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4NeJxVUl1zojAU/SsM70tCYCg613RY6VbqaK3Sdu1LJyZR2ArYAPXj129icbt9u+fmzrnnnhO4PhRb60OqOq/Kge062LZkySuRl5uB/Zj++hHaVt2wUrBtVcqBfZS1fU0hzZSU8ULyVkkKE1nXbCOtXGgKT66Y4MF6JUKfkF7IQn/t+T2OMVuFgtsUZtFcvlPotlK91CGALlCzKZ6xsqHA+PvPZEp9chVgDKiDUEiVxLReSfVaKP7qAvrsQMkKSdP74WgcWXG0GCXWLFlE85un+ztA50fgVVs26kgD3wN0AdCqLc2aZlf3Edrv90719lY5vCoAmRdAX5JmralqzXTIBV2ShExub06T54f98vSSvcTLwzTeeMs0GQAyEyBYIynBxMOuG1ou6WPSJ3r3uQ+sMBIodrC+ogOwMzuiT6Db/0PQhisd0OWACwJ52Ol89IR28l8N6EvucGT85I32KVpf3f6ZtWgiUnRid8F8zIPe72OwzsZD4/J5yDDm2hviG2kdAGRoUBcg6nLX1bf/8BcC+cTR2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=
                    termUrl: https://testmerchant.ru/threeDSPayment
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/unbindCard.do:
    post:
      tags:
        - bindingServices
      summary: Деактивация связки Плательщика [unbindCard]
      operationId: unBindCard
      description: Запрос предназначен для деактивации ранее сохраненной связки.
      requestBody:
        description: Запрос деактивации связки Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unBindCardRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unBindCardResponse'
              examples:
                success:
                  summary: Связка деактивирована
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/getBindings.do:
    post:
      tags:
        - bindingServices
      summary: Получение связок по идентификатору Плательщика [getBindings]
      operationId: getBindings
      description: Запрос предназначен для получения списка связок, привязанных к конкретному идентификатору Плательщика.
      requestBody:
        description: Запрос получения связок по идентификатору Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getBindingsRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBindingsResponse'
              examples:
                success:
                  summary: Связки получены
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    bindings: [{bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce, maskedPan: 220138******0047, expiryDate: "202512", bindingStatus: "0", paymentWay: CARD, paymentSystem: MIR}]
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/getBindingsByCardOrId.do:
    post:
      tags:
        - bindingServices
      summary: Получение связок по номеру карты или идентификатору связки Плательщика [getBindingsByCardOrId]
      operationId: getBindingsByCardOrId
      description: Запрос предназначен для получения списка связок, привязанных к конкретному идентификатору Плательщика на основании переданной связки данного идентификатора Плательщика или полного номера карты. Для работы с полным номером карты необходимы дополнительные настройки учетной записи.
      requestBody:
        description: Запрос получения связок по номеру карты или идентификатору связки Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getBindingsByCardOrIdRequest'
            example:
              userName: testUserName
              password: testPassword
              bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
              showExpired: true
              showInactive: true
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBindingsByCardOrIdResponse'
              examples:
                success:
                  summary: Связки получены
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    bindings: [{bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce, maskedPan: 220138******0047, expiryDate: "202512", clientId: M79011234567, bindingStatus: "0", paymentWay: CARD, paymentSystem: MIR}]
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/bindCard.do:
    post:
      tags:
        - bindingServices
      summary: Активация связки Плательщика [bindCard]
      operationId: bindCard
      description: Запрос предназначен для активации ранее дективированной связки (при условии актуальности ее срока действия).
      requestBody:
        description: Запрос активации связки Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bindCardRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bindCardResponse'
              examples:
                success:
                  summary: Связка активирована
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/recurrentPayment.do:
    post:
      tags:
        - bindingServices
      summary: Проведение периодического платежа [recurrentPayment]
      operationId: recurrentPayment
      description: 'Запрос предназначен для одновременной регистрации заказа и его оплаты с использованием связки. Совмещает в себе два действия: register.do и paymentOrderBinding.do'
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос проведения периодического платежа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recurrentPaymentRequest'
            examples:
              binding:
                summary: Периодический платёж по связке
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                  amount: 19900
              bindingLoyalty:
                summary: Периодический платёж c передачей бонусов Спасибо к списанию
                value:
                  userName: testUserName
                  password: testPassword
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
                  amount: 19900
                  jsonParams:
                    sbrf_spasibo:amount_bonus: 7700
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurrentPaymentResponse'
              examples:
                success:
                  summary: Периодический платеж проведен
                  value:
                    success: true
                    data:
                      orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                      orderNumber: e2574f1785324f1592d9029cb05adbbd
                    orderStatus:
                      actionCode: 0
                      amount: 19900
                      approvalCode: "433187"
                      authDateTime: 1675169010957
                      authRefNum: "303112098637"
                      bankInfo: {}
                      cardAuthInfo:
                        expiration: "202512"
                        pan: 220138******0047
                        paymentSystem: MIR
                      currency: "643"
                      date: 1675169008805
                      orderStatus: 2
                      paymentAmountInfo:
                        approvedAmount: 19900
                        depositedAmount: 19900
                        paymentState: DEPOSITED
                        refundedAmount: 0
                      terminalId: "20184020"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    success: false
                    error:
                      code: "5"
                      description: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/mir/paymentDirect.do:
    post:
      tags:
        - mirPayServices
      summary: Проведение платежа с использованием прямого взаимодействия Клиента с MirPay [paymentDirectMirPay]
      operationId: paymentDirect
      description: Сервис проведения оплаты с использованием приложения MirPay (In-application) с интеграцией Клиента по схеме агрегатора и расшифровкой платёжных данных на стороне Клиента. Может выполняться как с предварительной регистрацией заказа (логины, сумма, идентифкатор заказа и сценарий проведения платежа в запросах должны совпадать), так и без неё
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос роведения платежа с использованием прямого взаимодействия Клиента с MirPay
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentDirectRequest'
            example:
              userName: testUserName
              password: testPassword
              amount: 10000
              orderNumber: e2574f1785324f1592d9029cb05adbbd
              paymentToken: eyJ0YW4iOiIyMjAwMTIqKioqKioqKiozNDg2IiwiY2F2IjoiM0Q2RkM4MjZBMDhDODJCODk3ODAwMjlGNjk2NzBGRERDRjI5OUIiLCJ0ZXkiOjI5LCJ0ZW0iOjMsInRyYW5zSWQiOiI1YWI1MjQ4Ny0xNzdmLTQ2NGItYjY5NS0yOTU0ZmZjNDRhMTMiLCJtSWQiOiIwMDAwMDAwMDAwMDAwMDEiLCJteDVjIjoiTUlJRWpEQ0NBM1NnQXdJQkFnSURFaUVETUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdGTVFzd0NRWURWUVFHRXdKU1ZURVpNQmNHQTFVRUNBd1FVMkZwYm5RdFVHVjBaWEp6WW5WeVp6RVhNQlVHQTFVRUNnd09WbTlrYTJFZ1FtRnVheUJLVTBNeER6QU5CZ05WQkFzTUJrSXdNREF3TVRFUE1BMEdBMVVFQXd3R1FqQXdNREF4TVNBd0hnWUpLb1pJaHZjTkFRa0JGaEY2YjNKeWIwQmxhMkZ6YzJseUxtTnZiVEFlRncweU1qRXhNRGt4TXpNMU5UTmFGdzB5TXpFeE1Ua3hNek0xTlROYU1JRzNNUXN3Q1FZRFZRUUdFd0pTVlRFWk1CY0dBMVVFQ0F3UVUyRnBiblF0VUdWMFpYSnpZblZ5WnpFWk1CY0dBMVVFQnd3UVUyRnBiblF0VUdWMFpYSnpZblZ5WnpFYU1CZ0dBMVVFQ2d3UlVHRnlZWE5sYm1ObElFeHBiV2wwWldReEdUQVhCZ05WQkFzTUVFMHdNREF3TURBd01EQXdNREF3TURFeEdUQVhCZ05WQkFNTUVFMHdNREF3TURBd01EQXdNREF3TURFeElEQWVCZ2txaGtpRzl3MEJDUUVXRVhwdmNuSnZRR1ZyWVhOemFYSXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1TzFteGU2Mk5kVzdLTTUwRlZ3Y29qNDVRSjNYVms4QWg2UkN4Q1IzdHZydXM3bm9OV2FLajljM2VEeDQ3V3N3MFZROUpiUVRPdFRqaSsrRFkwOEJ2WGtWK1J1SXNlekdnVzR4S1RJK3lwSGN4OHZJSU5oS0JLMmZZdTVJRFZkejRaYml1R3IySW13eHVPL3VYRW5iNXhDTS9wK01tTDBwZmpjaE9LWkZMVW1Xdm44clMxUGc5NzRRSjJiODl0TDlKSmR3K3NhMDlXWkpoQWZGYVNaRk9LM0dwQkc5azVmZEhvTXNKY2RJRmxOMzFIMFF2OFMvOEZVbGdqVVFCdW9TbmdneXJ6aUR6RXFWM1BIcXcwZURjOTc5WE1hYTZvWFJLYk1UaXFrR01qN0h4N2dVanFzRStPZ29EcFdDSlpWVGMzNWkrajJGTEVpRDZ4NHpBR2FjZndJREFRQUJvNEhRTUlITk1Ba0dBMVVkRXdRQ01BQXdFUVlKWUlaSUFZYjRRZ0VCQkFRREFnV2dNRE1HQ1dDR1NBR0crRUlCRFFRbUZpUlBjR1Z1VTFOTUlFZGxibVZ5WVhSbFpDQkRiR2xsYm5RZ1EyVnlkR2xtYVdOaGRHVXdIUVlEVlIwT0JCWUVGQnRrWDUvemNnSlpSYitHZUpKYUVZZytWVE9UTUI4R0ExVWRJd1FZTUJhQUZMWE9JclFpZHNuZ0J4cXhBQ3FtbURmajJTM0tNQTRHQTFVZER3RUIvd1FFQXdJRThEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBZ1lJS3dZQkJRVUhBd1F3Q1FZRFZSMFNCQUl3QURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1EN3FITEVKakdEcyt2ZEQwTklKWnhzVVpITjBXVTdPMm83TUxkVE96bkRqQ0RaV0thNzBHQlRsUm5vNTU2ejQ0a2VxajVWWnRIOVhWZ1A0U3pwOEMyZnppT0F1alNyS1Z3MGxoN2lEUmNiMU9ESEx5U0IzMDRHOXpnZE0rRFBLeW9za3pxcC9KNGl5VWFGLzZyNVlqLzVxVmZ0d0xSQlRJbld0OGgycFdxU29aaE5xaFY1SmRVK1dtQ0Nzd0RLZzQzSTJTSC9sUHZVaXFkRFFYK2xscDZYVHVJNm83aUdQRmRQZ2tOWFVOVUVIL3NNTUNOU2xOQmNQUFhGeSs1SHhFYkFmS242WmJZN2xYTDZSbzJuSzRERFJSbENYMGJmT1BKWFBMK290dncrVXZuSXIyOGNpc0VTdzB5OWxYbTlOWmhhQnhEVEZWREFSTWZUT1lxdFJDdz09Iiwib3JkZXJJZCI6IjEyMzQ1NiIsInN1bSI6MTAwMDAsImN1ciI6NjQzLCJtZWRpYSI6IklTREsifQ
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentDirectResponse'
              examples:
                success:
                  summary: Платеж успешен
                  value:
                    success: true
                    data:
                      orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                      orderNumber: e2574f1785324f1592d9029cb05adbbd
                    orderStatus:
                      actionCode: 0
                      amount: 10000
                      approvalCode: "433187"
                      authDateTime: 1675169010957
                      authRefNum: "303112098637"
                      bankInfo: {}
                      cardAuthInfo:
                        expiration: "202903"
                        pan: 220012*********3486
                        paymentSystem: MIR
                      currency: "643"
                      date: 1675169008805
                      orderStatus: 2
                      paymentAmountInfo:
                        approvedAmount: 10000
                        depositedAmount: 10000
                        paymentState: DEPOSITED
                        refundedAmount: 0
                      terminalId: "20184020"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    success: false
                    error:
                      code: "5"
                      description: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/finish3dsMethod.do:
    post:
      tags:
        - additionalThreeDSServices
      summary: Завершение 3DS Method [finish3dsMethod]
      operationId: finish3dsMethod
      description: |
        Запрос предназначен для завершения 3DS аутентификации Плательщика при проведении операции оплаты.
        Последовательность обработки запроса:
        * создать заказ через сервисы `register` или `registerPreAuth`, в зависимости от сценария платежа;
        * провести оплату через сервисы, указанные в `paymentOrder` или `paymentOrderBinding` с получением в ответе требований проведения 3DS Method (threeDSMethodURL). Значение threeDSMethodData возвращается, если в запросе был передан threeDSMethodNotificationUrl, в противном случае Клиент самостоятельно формирует объект threeDSMethodData= base64url({"threeDSServerTransID":"value","threeDSMethodNotificationURL":"value"});
        * визуализировать скрытый iframe в браузере Плательщика с отправкой HTML формы с threeDSMethodData через HTTP POST на threeDSMethodURL;
        * получить обратный вызов на threeDSMethodNotificationURL по результату обработки запроса 3DS Method с получением threeDSMethodData = base64url({"threeDSServerTransID":"value"} в течение таймаута 10 секунд;
        * вызвать сервис завершения 3DS аутентификации `finish3dsMethod`.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос завершения 3DS Method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/finish3dsMethodRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/finish3dsMethodResponse'
              examples:
                finished:
                  summary: Оплата завершена
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                requested3ds2Challenge:
                  summary: Запрошен Challenge 3DS 2.x.x через браузер
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    acsUrl: https://acs.vendorcert.mirconnect.ru/mdpayacs/creq
                    cReq: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=
                    termUrl: https://testmerchant.ru/threeDSPayment
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/finish3dsPayment.do:
    post:
      tags:
        - additionalThreeDSServices
      summary: Завершение аутентификации 3-D Secure [finish3dsPayment]
      operationId: finish3dsPayment
      description: |
        Запрос предназначен для передачи результата 3DS аутентификации Плательщиа при прямом взаимодействии с сервером ACS.
        Последовательность обрабтки запроса:
        * создать заказ через сервисы, указанные в `register` или `registerPreAuth`, в зависимости от сценария платежа;
        * провести оплату через сервисы, указанные в `paymentOrder`, `paymentOrderBinding` или `finish3dsMethod` с получением в ответе требований проведения 3-D Secure аутентификации (paReq или cReq);
        * перенаправить Плательщика на ACS по адресу, указанному в параметре acsUrl;
        * получить обратное перенаправление Плательщика в магазин от ACS с сообщением PARes или CRes на адрес termUrl;
        * вызвать сервис завершения 3DS аутентификации `finish3dsPayment`.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос завершения аутентификация 3-D Secure
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/finish3dsPaymentRequest'
            examples:
              finish3ds2:
                summary: Завершение аутентификации 3DS 2.x.x
                value:
                  userName: testUserName
                  password: testPassword
                  mdOrder: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  cRes: eyJhY3NUcmFuc0lEIjogIjllNWUxMWViLTY1OTYtNDMyMi04NjU4LTJkNDY0MDUwMGYyZSIsICJ0cmFuc1N0YXR1cyI6ICJZIiwgIm1lc3NhZ2VWZXJzaW9uIjogIjIuMS4wIiwgIm1lc3NhZ2VUeXBlIjogIkNSZXMiLCAidGhyZWVEU1NlcnZlclRyYW5zSUQiOiAiOTMwNDVlNjEtZDc4My00MGYxLTg5MzQtMzNmZDU5Mzg3Y2E2In0=
              finish3ds1:
                summary: Завершение аутентификации 3DS 1.0.2
                value:
                  userName: testUserName
                  password: testPassword
                  mdOrder: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  paRes: "eJylWmmzoziW/SsV1RHzxdE ... vX568v1vkv4HCWzUfw=="
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/finish3dsPaymentResponse'
              examples:
                success:
                  summary: Оплата завершена
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    info: Ваш платёж обработан, происходит переадресация
                    redirect: https://testmerchant.ru/return
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /callbackUrl:
    post:
      tags:
        - callbackServices
      summary: Уведомление о проведении платежа [callback]
      operationId: callback
      description: Функционал предназначен для отправки callback уведомления при изменении статуса заказа. Callback уведомление представляет собой POST запрос, направляемый со стороны платежного шлюза на URL, указанный в настройках учетной записи.
        Осуществляется 3 попытки доставки уведомления с интервалом 60 секунд между попытками
      requestBody:
        description: Запрос уведомления о проведении платежа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callbackRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
        default:
          description: Ошибка обработки запроса

  /bindingCallbackUrl:
    post:
      tags:
        - callbackServices
      summary: Уведомление о событии со связкой [bindingCallback]
      operationId: bindingCallback
      description: Функционал предназначен для отправки callback уведомления при изменении статуса связки. Callback уведомление представляет собой POST запрос, направляемый со стороны платежного шлюза на URL, указанный в настройках учетной записи.
        На текущий момент сервис отправки уведомлений доступен только для связок, созданных при проведении платежей через мобильное приложение "Сбербанк-Онлайн".
        Осуществляется 3 попытки доставки уведомления с интервалом 60 секунд между попытками
      requestBody:
        description: Запрос уведомления о событии со связкой
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bindingCallbackRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
        default:
          description: Ошибка обработки запроса

  /receiptStatusCallbackUrl:
    post:
      tags:
        - callbackServices
      summary: Уведомление о результате обработки чека [receiptStatusCallback]
      operationId: receiptStatusCallback
      description: |
        <span style="color:red;">__Функционал уведомления о результате обработки чека находится в разработке__</span>

        Функционал предназначен для отправки callback уведомления при изменении статуса обработки чека. Callback уведомление представляет собой POST запрос, направляемый со стороны платежного шлюза на URL, указанный в корзине при регистрации заказа.
        Осуществляется 3 попытки доставки уведомления с интервалом 60 секунд между попытками
      requestBody:
        description: Запрос уведомления о результате обарботки чека
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getReceiptStatusResponse'
            examples:
              successfulReceipt:
                summary: Чек обработак успешно
                value:
                  orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  receipts: [{receiptId: 822c6862-634c-11ee-8c99-0242ac120002, operationId: 0ad563f9-c7ec-49ba-9062-a04de55b6f3f, operationType: AUTHORIZATION, receiptType: sell, receiptStatus: 3, origReceiptId: 23d72f20-a770-4548-9bcc-1d1a8567e071, timestamp: 11.10.2023 13:24:59, groupCode: group_code_4612, daemonCode: quasar, deviceCode: KKT068508, payload: {fiscalReceiptNumber: 10, shiftNumber: 188, receiptDatetime: 09.10.2023 15:08:00, total: 24600, fnNumber: "9999078902013948", ecrRegistrationNumber: "0000000005035122", fiscalDocumentNumber: 783, fiscalDocumentAttribute: 1837776948, fnsSite: www.nalog.ru, ofdInn: "7709364346", ofdReceiptUrl: https://consumer.1-ofd-test.ru/v1?fn=9999078902013948&fp=1837776948&i=783&t=20231009T150800&s=88990&n=1}}]
                  #, marksResult: [{position: 0, markCode: MDEwNDYwNTg2NTQ4NzE2MjIxbj1ZR3lJbUhVOmlNWh05MUVFMDYdOTJYNE1sVzk2R1o2ZmV2RGhnUjJhaHNKNUltTmtVZUsyMkdGeEpVMmxjREpRPQ==, result: 15}]
              failedReceipt:
                summary: Ошибка обработки чека
                value:
                  orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                  orderNumber: e2574f1785324f1592d9029cb05adbbd
                  receipts: [{receiptId: 822c6862-634c-11ee-8c99-0242ac120002, operationId: 0ad563f9-c7ec-49ba-9062-a04de55b6f3f, operationType: AUTHORIZATION, receiptType: sell, receiptStatus: 4, origReceiptId: 23d72f20-a770-4548-9bcc-1d1a8567e071, timestamp: 11.10.2023 13:24:59, groupCode: group_code_4612, error: {code: 1, text: Возникла ошибка. Обратитесь в поддержку кассового сервиса., type: timeout, recommendation: 3}}]
        required: true
      responses:
        '200':
          description: Запрос обработан
        default:
          description: Ошибка обработки запроса

  /ecomm/gw/partner/api/accounts/v1/set-permanent-password:
    post:
      tags:
        - changePasswordServices
      summary: Установка постоянного пароля [setPermanentPassword]
      operationId: setPermanentPassword
      description: Сервис для смены временного пароля на постоянный
      requestBody:
        description: Запрос предназначен для изменение временного пароля, выданного при регистрации Клиента на ПШ на постоянный пароль на стороне Клиента.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setPermanentPasswordRequest'
            example:
              login: testUserName
              tmpPassword: testPassword
              password: NewPassword
        required: true
      responses:
        '200':
          description: Пароль установлен успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setPermanentPasswordResponse'
              examples:
                success:
                  summary: Пароль установлен
                  value:
                    "login:": testUserName
                    "password": NewPassword
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "7"
                    description: "SystemError"
        '404':
          description: Некорректный адрес запроса
          content:
            test/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от клиента
          content:
            test/html:
              example:
                ''


  /ecomm/gw/partner/api/accounts/v1/apikey/generate:
    post:
      tags:
        - changePasswordServices
      summary: Генерация ключа Клиента для работы с сервисами платежного шлюза через SDK [generateApiKey]
      operationId: generate
      description: Сервис для генерации ключа Клиента для работы с сервисами платежного шлюза через SDK. Может быть создано не более 5 активных ключей.
      requestBody:
        decription: Запрос предназначен для генерации ключа Клиента для работы с сервисами платежного шлюза через SDK.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateApikeyRequest'
            example:
              userName: testUserName
              password: testPassword
              description: testDescription
              merchantLogin: merchantLogin
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generateApikeyResponse'
              examples:
                success:
                  summary: Apikey сгенерирован
                  value:
                    "id": "2f852119-0rhfdd-сe7a-b421-22be01a44311"
                    "apikey": "AC+FIRkBJk56sCFSvgGkQzMAAAAAAbqrr3ybcZc/7i33plZ0IWbgQ/MaADTsnGBy+TsRUImIs0EaJyQe1ObbTLgsbOQ63TWysFwWduamtmO "
                    "message": "Api-key успешно создан"
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, valueof the request parameter
        '400':
          description: Превышено количество активных ключей
          content:
            application/json:
              example:
                value:
                  "message": "Превышено количество активных ключей"
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от клиента
          content:
            test/html:
              example:
                ''


  /ecomm/gw/partner/api/ofd/v1/getReceiptStatus:
    post:
      tags:
        - fiscalizationServices
      summary: Получение информации о результате обработки чека [getReceiptStatus]
      operationId: getReceiptStatus
      description: Сервис для получения информации о результате обработки чека или чеков.
      requestBody:
        description: 'Запрос статуса обработки чека.
          При передаче `orderId` или `orderNumber` отражаются все сформированные чеки по Заказу, при передаче `receiptId` - конкретный чек.
          Дополнительно доступен поиск по статусу чека. Рекомендуем запрашивать статус чека не ранее чем через 6 минут после проведения операции.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getReceiptStatusRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReceiptStatusResponse'
              examples:
                successfulReceipt:
                  summary: Чек обработак успешно
                  value:
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    orderNumber: e2574f1785324f1592d9029cb05adbbd
                    receipts: [{receiptId: 822c6862-634c-11ee-8c99-0242ac120002, operationId: 0ad563f9-c7ec-49ba-9062-a04de55b6f3f, operationType: AUTHORIZATION, receiptType: sell, receiptStatus: 3, origReceiptId: 23d72f20-a770-4548-9bcc-1d1a8567e071, timestamp: 11.10.2023 13:24:59, groupCode: group_code_4612, daemonCode: quasar, deviceCode: KKT068508, payload: {fiscalReceiptNumber: 10, shiftNumber: 188, receiptDatetime: 09.10.2023 15:08:00, total: 24600, fnNumber: "9999078902013948", ecrRegistrationNumber: "0000000005035122", fiscalDocumentNumber: 783, fiscalDocumentAttribute: 1837776948, fnsSite: www.nalog.ru, ofdInn: "7709364346", ofdReceiptUrl: https://consumer.1-ofd-test.ru/v1?fn=9999078902013948&fp=1837776948&i=783&t=20231009T150800&s=88990&n=1}}]
                    #, marksResult: [{position: 0, markCode: MDEwNDYwNTg2NTQ4NzE2MjIxbj1ZR3lJbUhVOmlNWh05MUVFMDYdOTJYNE1sVzk2R1o2ZmV2RGhnUjJhaHNKNUltTmtVZUsyMkdGeEpVMmxjREpRPQ==, result: 15}]
                failedReceipt:
                  summary: Ошибка обработки чека
                  value:
                    orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
                    orderNumber: e2574f1785324f1592d9029cb05adbbd
                    receipts: [{receiptId: 822c6862-634c-11ee-8c99-0242ac120002, operationId: 0ad563f9-c7ec-49ba-9062-a04de55b6f3f, operationType: AUTHORIZATION, receiptType: sell, receiptStatus: 4, origReceiptId: 23d72f20-a770-4548-9bcc-1d1a8567e071, timestamp: 11.10.2023 13:24:59, groupCode: group_code_4612, error: {code: 1, text: Возникла ошибка. Обратитесь в поддержку кассового сервиса., type: timeout, recommendation: 3}}]
        '400':
          description: Ошибка формата
          content:
            application/json:
              example:
                message: Ошибка формата
            text/html:
               example:
                ''
        '404':
          description: Не найден
          content:
            application/json:
              example:
                message: Чек не найден
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''
        '451':
          description: Ошибка валидации запроса
          content:
            application/json:
              example:
                message: Error, value of the request parameter
            text/html:
               example:
                ''
        '500':
          description: Внутренняя ошибка сервиса
          content:
            application/json:
              example:
                message: Внутренняя ошибка сервиса
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/ofd/v1/retryReceipt:
    post:
      tags:
        - fiscalizationServices
      summary: Переотправка чека без изменения Корзины [retryReceipt]
      operationId: retryReceipt
      description: |
        Сервис позволяет сформировать повторный запрос на создание чека с Корзиной, идентичной первому чеку. Сервис используется только для переотправки неуспешных чеков.
        Последовательность обработки запроса:
        * Дождаться результата обработки чека в `callback` или запросить статус через `getReceiptStatus`.
        * Получить один из двух статусов, при котором возможна переотправка: Ошибка обработки чека (receiptStatus=4) или Ошибка отправки чека (исчерпаны попытки отправки) (receiptStatus=5).
        * Использовать `retryReceipt` с включением receiptId чека, который нужно переотправить. Возможна отправка массива receiptId, если необходимо переотправить несколько чеков.
        * На этапе получения статуса регистрации, при получении кода ошибки 1 с типом ошибки “timeout” происходит несколько автоматических попыток повторной регистрации чека. В связи с этим рекомендуется использовать сервис `retryReceipt` после исчерпания всех попыток регистрации, не ранее 15 часов после создания начального чека.
        * При использовании сервиса обратите внимание на сроки предоставления чека согласно 54-ФЗ.
      requestBody:
        description: Запрос переотправки чека.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/retryReceiptRequest'
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retryReceiptResponse'
        '400':
          description: Ошибка формата
          content:
            application/json:
              example:
                message: Ошибка формата
            text/html:
               example:
                ''
        '404':
          description: Не найден
          content:
            application/json:
              example:
                message: Чек не найден
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''
        '451':
          description: Ошибка валидации запроса
          content:
            application/json:
              example:
                message: Error, value of the request parameter
            text/html:
               example:
                ''
        '500':
          description: Внутренняя ошибка сервиса
          content:
            application/json:
              example:
                message: Внутренняя ошибка сервиса
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/ofd/v1/doReceipt:
    post:
      tags:
        - fiscalizationServices
      summary: Создание чека [doReceipt]
      operationId: doReceipt
      description: |
        Сервис позволяет сформировать новый чек или изменить корзину в неуспешном чеке с использованием новой Корзины для повторной переотправки.

        __Создание нового чека__

        Сервис `doReceipt` используется для создания чека полного расчета, чека возврата предоплаты или аванса на холдирование отдельно от финансовой операции.
        Для создания чека необходимо передать контакт Покупателя __email/phone__ и Корзину __orderBundle__. Если ранее был создан чек на Предоплату или Аванс, рекомендуется перед формированием чека полного расчета убедиться в успешном создании чека Предоплаты через `getReceiptStatus` или получив `callback`.

        __Переотправка неуспешного чека с новой Корзиной__

        В некоторых случаях кассовый сервис не может зарегистрировать чек из-за некорректных данных в Корзине, ошибок в работе ККТ или по иным причинам.
        Сервис запроса статуса `getReceiptStatus` сообщит об этом в блоке error, предоставив код и описание ошибки. Поле __recommendation__ позволяет определить, есть ли необходимость в корректировке корзины и повторной отправке чека.
        Для попытки переотправки чека с новой корзиной необходимо:
        * Дождаться результата обработки чека в `callback` или запросить статус через `getReceiptStatus`;
        * Получить статус Ошибка обработки чека (receiptStatus=4) или Попытки отправки чека исчерпаны (receiptStatus=5) со значением recommendation 2 или 3;
        * Изучить текст ошибки, внести изменения в запрос;
        * Отправить запрос `doReceipt` с указанием __receiptid__ исправляемого чека и контактами Покупателя __email/phone__.
      requestBody:
        description: Запрос создания чека
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/doReceiptRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              email: customer@testmail.ru
              orderBundle:
                ffdVersion: "1.2"
                receiptType: sell
                company:
                  email: email@testshop.ru
                  sno: osn
                  inn: "5027119066"
                  paymentAddress: http://testshop.ru
                payments: [{type: 1, sum: 24600}]
                total: 24600
                cartItems:
                  items: [{positionId: "1", itemCode: "51", name: Сырок творожный со сгущенкой, quantity: {value: 1, measure: "0"}, markCode: {gs1m: MDEwNDYwNTg2NTQ4NzE2MjIxbj1ZR3lJbUhVOmlNWh05MUVFMDYdOTJYNE1sVzk2R1o2ZmV2RGhnUjJhaHNKNUltTmtVZUsyMkdGeEpVMmxjREpRPQ==}, itemPrice: 4700, itemAmount: 4700, paymentMethod: full_payment, paymentObject: "33", tax: {taxType: 2}},{positionId: "2", itemCode: "124", name: Виноград без косточек, quantity: {value: 0.4, measure: "11"}, itemPrice: 25000, itemAmount: 10000, paymentMethod: full_payment, paymentObject: "1", tax: {taxType: 4}}, {positionId: "3", itemCode: "341", name: Услуга доставки, quantity: {value: 1, measure: "0"}, itemPrice: 9900, itemAmount: 9900, paymentMethod: full_payment, paymentObject: "4", tax: {taxType: 4}}]
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/doReceiptResponse'
              example:
                message: Успешно
                orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        '400':
          description: Ошибка формата
          content:
            application/json:
              example:
                message: Ошибка формата
            text/html:
               example:
                ''
        '404':
          description: Не найден
          content:
            application/json:
              example:
                message: Чек не найден
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''
        '451':
          description: Ошибка валидации запроса
          content:
            application/json:
              example:
                message: Error, value of the request parameter
            text/html:
               example:
                ''
        '500':
          description: Внутренняя ошибка сервиса
          content:
            application/json:
              example:
                message: Внутренняя ошибка сервиса
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/getLoyaltyBalance:
    post:
      tags:
        - loyaltyServices
      summary: Получение баланса бонусов Спасибо [getLoyaltyBalance]
      operationId: getBindingsByCardOrId
      description: Запрос для получения бонусного баланса Спасибо по связке Плательщика
      requestBody:
        description: Запрос для получения бонусного баланса Спасибо по идентификатору связки Плательщика. Для работы с данным сервисом необходимы дополнительные настройки учетной записи.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getLoyaltyBalanceRequest'
            example:
              userName: testUserName
              password: testPassword
              bindingId: fdbbc879-c171-4cff-b636-ceab16fd6fce
        required: true
      responses:
        '200':
          description: Запрос обработан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLoyaltyBalanceResponse'
              examples:
                success:
                  summary: Баланс получен
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                    loyaltyOperations: [{serviceName: sbrf_spasibo, bonusBalance: 77700}]
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/autoCompletion:
    post:
      tags:
        - loyaltyServices
      summary: Завершение двухстадийного сценария [autoCompletion]
      operationId: autoCompletion
      description: Запрос предназначен для выполнения дополнительного подтверждения оплаты двухстадийного платежа. При успешной обработке подтверждается списание средств со счета Плательщика.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос завершения двухстадийного сценария
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/autoCompletionRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              compositeAmount: 14900
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autoCompletionResponse'
              examples:
                success:
                  summary: Заказ подтвержден
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''

  /ecomm/gw/partner/api/v1/autoRefund:
    post:
      tags:
        - loyaltyServices
      summary: Возврат средств Плательщика [autoRefund]
      operationId: autoRefund
      description: Запрос предназначен для выполнения частичного или полного возврата средств Плательщика, после выполнения взаиморасчетов банков-участников по операции оплаты.
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        description: Запрос возврата средств Плательщика
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/autoRefundRequest'
            example:
              userName: testUserName
              password: testPassword
              orderId: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
              compositeAmount: 14900
        required: true
      responses:
        '200':
          description: Запрос обработан
          headers:
            x-idempotencyKey:
              $ref: '#/components/headers/idempotencyKey'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autoRefundResponse'
              examples:
                success:
                  summary: Средства возвращены
                  value:
                    errorCode: "0"
                    errorMessage: Обработка запроса прошла без системных ошибок
                error:
                  summary: Ошибка обработки запроса
                  value:
                    errorCode: "5"
                    errorMessage: Error, value of the request parameter
        '404':
          description: Некорректный адрес запроса
          content:
            text/html:
              example:
                ''
        '405':
          description: Неподдерживаемый метод
          content:
            text/html:
              example:
                ''
        '429':
          description: Превышен порог запросов от Клиента
          content:
            text/html:
              example:
                ''


components:
  headers:
    idempotencyKey:
      description: |
        <span style="color:red;">__Функционал обработки ключа идемпотентности находится в разработке__</span>

        Ключ идемпотентности
      required: true
      schema:
        type: string
        maxLength: 255
        minLength: 1
        pattern: ^[0-9a-zA-Z-_#]*$
      example: 779165e0-1905-4edd-89fa-be46497b5044

  parameters:
    idempotencyKey:
      name: x-idempotencyKey
      description: |
        <span style="color:red;">__Функционал обработки ключа идемпотентности находится в разработке__</span>

        Ключ идемпотентности запроса. Повторный вызов с тем же ключом вернет результат выполнения предыдущего запроса и не приведет к выполнению нового. Срок хранения ключей - 24 часа.
      in: header
      schema:
        type: string
        maxLength: 255
        minLength: 1
        pattern: ^[0-9a-zA-Z-_#]*$
      example: 779165e0-1905-4edd-89fa-be46497b5044

  schemas:
    userName:
      name: userName
      description: Логин Клиента, полученный при подключении к ПШ
      type: string
      maxLength: 30
      minLength: 1
      pattern: ^[A-Za-z0-9-_ ]+$
      example: testUserName

    password:
      name: password
      description: Пароль Клиента, полученный при подключении к ПШ
      type: string
      maxLength: 30
      minLength: 1
      pattern: ^[ -~]+$
      example: testPassword

    orderNumber:
      name: orderNumber
      description: Уникальный номер (идентификатор) заказа в системе Клиента. Обязателен, если в запросе отсутствует orderId.
      type: string
      maxLength: 36
      minLength: 1
      pattern: &#91;\w^"\/|#$%;'<>=*&#93;
      example: e2574f1785324f1592d9029cb05adbbd

    amount:
      name: amount
      description: Сумма операции в минимальных единицах валюты
      type: integer
      maximum: 999999999999
      minimum: 0
      example: 19900

    compositeAmount:
      name: compositeAmount
      description: Сумма операции в минимальных единицах валюты, состоящая из суммы в деньгах и суммы бонусов. Может быть меньше или равна остатку в заказе
      type: integer
      maximum: 999999999999
      minimum: 0
      example: 19900

    currency:
      name: currency
      description: Цифровой код валюты операции ISO-4217
      type: string
      maxLength: 3
      minLength: 3
      pattern: ^\d{3}$
      example: "643"

    returnUrl:
      name: returnUrl
      description: Адрес, на который требуется перенаправить Плательщика в случае успешной оплаты, когда Клиент использует платёжную страницу ПШ
      type: string
      maxLength: 2048
      minLength: 12
      pattern: ^[ -~]*$
      example: https://testmerchant.ru/return

    failUrl:
      name: failUrl
      description: Адрес, на который требуется перенаправить Плательщика в случае неуспешной оплаты, когда Клиент использует платёжную страницу ПШ. Если не указан, используется returnUrl
      type: string
      maxLength: 2048
      minLength: 12
      pattern: ^[ -~]*$
      example: https://testmerchant.ru/fail

    description:
      name: description
      description: Описание заказа в свободной форме на стороне Клиента. Рекомендуемая длина до 99 символов
      type: string
      maxLength: 512
      minLength: 1
      pattern: ^[ -~А-Яа-яЁё№«»]*$
      example: Тестовый заказ

    language:
      name: language
      description: Язык в кодировке ISO 639-1 (ru, en). Если не указан, будет использовано значение по умолчанию, указанное в настройках Клиента
      type: string
      maxLength: 2
      minLength: 2
      pattern: ^[a-z]+$
      example: ru

    #pageView:
    #  name: pageView
    #  description: |
    #    Форма отображения платёжной страницы ПШ для Плательщика:
    #      * `DESKTOP` = интерфейс для отображения на ПК;
    #      * `MOBILE` = интерфейс для отображения на мобильных устройствах.
    #  enum:
    #    - DESKTOP
    #    - MOBILE
    #  type: string
    #  maxLength: 20
    #  minLength: 1
    #  pattern: ^[ -~]+$
    #  example: DESKTOP

    clientId:
      name: clientId
      description: Номер (идентификатор) Плательщика в системе Клиента. Используется для реализации функционала Связок
      type: string
      maxLength: 255
      minLength: 1
      pattern: ^[ -~]+$
      example: M79011234567

    merchantLogin:
      name: merchantLogin
      description: Логин дочернего Клиента (если используется)
      type: string
      maxLength: 30
      minLength: 1
      pattern: ^[A-Za-z0-9-_ ]+$
      example: testMerchantLogin

    sessionTimeoutSecs:
      name: sessionTimeoutSecs
      description: |
        Продолжительность жизни заказа в секундах. В случае если параметр не задан, будет использовано значение, указанное в настройках Клиента или время по умолчанию. Если в запросе присутствует параметр expirationDate, то значение параметра sessionTimeoutSecs не учитывается
      type: integer
      maximum: 999999999
      minimum: 0
      example: 600

    expirationDate:
      name: expirationDate
      description: |
        Дата и время окончания жизни заказа на стороне ПШ в формате yyyy-MM-ddTHH:mm:ss. Если этот параметр не передаётся в запросе, то для определения времени окончания жизни заказа используется sessionTimeoutSecs
      type: string
      format: date-time
      example: 2027-12-31T23:59:59

    autocompletionDate:
      name: autocompletionDate
      description: |
        Дата и время автоматического подтверждения заказа в формате yyyy-MM-ddTHH:mm:ss. Если передан параметр, то вызов метода deposit не требуется.
      type: string
      format: date-time
      example: 2023-09-13T16:05:00

    bindingId:
      name: bindingId
      description: Идентификатор Связки, созданной ранее. Может использоваться, только если у магазина есть разрешение на работу со связками
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[a-f0-9\-]+$
      example: fdbbc879-c171-4cff-b636-ceab16fd6fce

    features:
      name: features
      description: |
        Дополнительные параметры управления сценариями при использовании платёжных реквизитов (можно указать несколько через разделитель ";"):
          * `VERIFY` = Происходит верификация Плательщика без списания средств с его счёта, поэтому в запросе можно передавать нулевую сумму. Даже если сумма платежа будет передана в запросе, она не будет списана со счёта покупателя. После успешной верификации заказ сразу переводится в статус REVERSED (отменён);
          * `AUTO_PAYMENT` = Платёж проводится без проверки подлинности владельца карты (без CVC и 3-D Secure). Чтобы проводить подобные платежи и продавца должны быть соответствующие разрешения;
          * `FORCE_SSL` = Принудительное проведение платежа без использования 3-D Secure;
          * `FORCE_TDS` = Принудительное проведение платежа с использованием 3-D Secure. Если карта не поддерживает 3-D Secure, операция будет отклонена;
          * `FORCE_FULL_TDS` = Принудительное проведение платежа только с успешной аутентификацией плательщика 3-D Secure (Y). В противном случае операция будет отклонена.
      type: string
      maxLength: 255
      minLength: 1
      pattern: ^[ -~]*$
      example: FORCE_TDS

    featuresVerify:
      name: features
      description: |
        Дополнительные параметры управления сценариями при использовании платёжных реквизитов:
          * `VERIFY` = Происходит верификация Плательщика без списания средств с его счёта, поэтому в запросе можно передавать нулевую сумму. Даже если сумма платежа будет передана в запросе, она не будет списана со счёта покупателя. После успешной верификации заказ сразу переводится в статус REVERSED (отменён);
      type: string
      maxLength: 255
      minLength: 1
      pattern: ^[ -~]*$
      example: VERIFY

    phone:
      name: phone
      description: Номер телефона Плательщика. Если в телефон включён код страны, номер должен начинаться со знака плюс («+»). Если телефон передаётся без знака плюс («+»), то код страны указывать не следует. В случае использования фискализации обязателен для передачи в формате +79998887700, при отсутствии номера телефона обязателен email.
      type: string
      maxLength: 16
      minLength: 1
      pattern: ^(\+?)\d{7,15}$
      example: "+79998887766"

    email:
      name: email
      description: Адрес электронной почты Плательщика. В случае использования фискализации обязателен, при отсутствии phone.
      type: string
      maxLength: 128
      minLength: 3
      pattern: ^[ -~]+$
      example: email@example.com

    federalId:
      description: __Тег ФФД 1262.__ Идентификатор ФОИВ. __Правила формирования реквизита указаны в Приложении №2 к приказу ФНС России от 14.09.2020 № ЕД-7-20/662 (Таблица 149)__
      type: string
      maxLength: 3
      minLength: 3
      pattern: ^[ -~А-Яа-яЁё№]*$

    orderBundle:
      name: orderBundle
      description: Блок, необходимый для формирования фискальных чеков. Содержит данные фискализации и корзину заказа. Обязателен в случае отправки запросов POS-кредитования
      type: object
      required:
        - cartItems
      properties:
        orderCreationDate:
          description: Дата создания заказа
          type: string
          format: YYYY-MM-DDTHH:mm:ss
          example: 2027-12-31T23:59:59

        installments:
          description: Блок, в котором указаны параметры типа и срока интернет-кредитования
          type: object
          properties:
            productType:
              description: |
                Признак покупки в кредит. Возможны следующие значения:
                  * `CREDIT` = кредит;
                  * `INSTALLMENT` = рассрочка.
              maxLength: 11
              minLength: 1
              enum:
                - CREDIT
                - INSTALLMENT
              type: string
              example: INSTALLMENT
            productID:
              description: Реквизит для старой совместимости
              type: string
              maxLength: 12
              minLength: 1
            rightTerms:
              description: |
                Желаемый срок кредитования в месяцах. Возможна передача нескольких значений через запятую. Атрибут передается, если выбран productType=INSTALLMENT.
                  * Если параметр заполнен, то клиенту будут доступны только указанные в параметре сроки оплаты. Например, если "rightTerms":[3,6,9], то клиенту будут доступны для выбора сроки 3, 6 или 9 месяцев.
                  * Если параметр не заполнен, то клиенту будут доступны все ранее утвержденные с банком сроки.
              type: array
              items:
                type: integer
              example: [3, 6, 9]
          example: {}
        ffdVersion:
          name: ffdVersion
          description: |
            Версия ФФД кассы (уточняется у Вашего кассового сервиса). <span style="color:red;">Параметр обязателен при необходимости формирования фискального чека.</span> Может принимать значения:
              * `1.2` = Версия ФФД 1.2;
              * `1.05` = Версия ФФД 1.05.
          enum:
            - 1.05
            - 1.2
          type: string
          example: "1.2"

        receiptType:
          name: receiptType
          description: |
            Тип формируемого чека. <span style="color:red;">Параметр обязателен при необходимости формирования фискального чека.</span> Может принимать следующие значения:
              * `sell` = Чек "Приход". Данный чек формируется в том числе при проведении частичного полного расчета.
              * `sell_refund` = Чек "Возврат прихода".
          enum:
            - sell
            - sell_refund
          type: string
          example: "sell"
        ismOptional:
          name: ismOptional
          description: |
            Параметр указывает необходимость регистрации чека, в случае недоступности системы маркировки (ИСМ). Используется только для ФФД 1.2 и касс АТОЛ Онлайн. Может принимать значения:
              * `true` - Чек будет зарегистрирован даже в случае, если "Честный знак" не ответил за установленное время. В результате проверки сведений о товаре укажется значение "0"
              * `false` (значение по умолчанию) - Чек не будет зарегистрирован при недоступности "Честный знак". Вернется ошибка 421 (Истек таймаут проверки КМ)
          type: boolean
          example: true

        #callbackUrl:
        #  name: callbackUrl
        #  description: URL-адрес, на который отправляется callback с результатами фискализации чека
        #  type: string
        #  maxLength: 256
        #  minLength: 12
        #        pattern: ^[ -~]*$
        #  example: "https://testmerchant.ru/receipt"
        company:
          name: company
          description: Информация о компании. Обязателен при использовании фискализации
          type: object
          required:
          - email
          - sno
          - inn
          - paymentAddress
          properties:
            email:
              name: email
              description: __Тег ФФД 1117.__ Адрес электронной почты компании. Отражается в чеке, который получит покупатель
              type: string
              maxLength: 64
              minLength: 3
              pattern: ^[ -~]+$
              example: "email@company.ru"
            sno:
              name: sno
              description: |
                __Тег ФФД 1055.__ Система налогообложения. Может принимать следующие значения:
                  * `osn` - Общая система налогообложения
                  * `usn_income` - Упрощенная система налогообложения (доходы)
                  * `usn_income_outcome` - Упрощенная система налогообложения (доходы минус расходы)
                  * `esn` - Единый сельскохозяйственный налог
                  * `patent` - Патентная система налогообложения
              enum:
                - osn
                - usn_income
                - usn_income_outcome
                - esn
                - patent
              type: string
              example: "usn_income"
            inn:
              name: inn
              description: __Тег ФФД 1018.__ ИНН компании
              type: string
              maxLength: 12
              minLength: 10
              pattern: ([0-9])
              example: 123456789012
            paymentAddress:
              name: paymentAddress
              description: __Тег ФФД 1187.__ Адрес сайта, на котором производится расчет с покупателем
              type: string
              maxLength: 256
              pattern: ^[ -~]*$
              example: "https://merchant.com"
          example: {}
          additionalProperties: false
        customerDetails:
          $ref: '#/components/schemas/customerDetails'
        cartItems:
          $ref: '#/components/schemas/cartItems'
        payments:
          description: Виды оплаты. Обязателен при использовании фискализации.
          type: array
          items:
            type: object
            required:
              - type
              - sum
            properties:
              type:
                description: |
                    __Тег ФФД 1081.__ Вид оплаты. Может принимать следующие значения
                    * `1` - Безналичные (Тег ФФД 1081)
                    * `2` - Предоплата (зачет предоплаты или аванса в чеке полного расчета. Тег ФФД 1215)
                    * `3` - Постоплата (кредит. Тег ФФД 1216)
                    * `4` - Встречное представление (тег ФФД 1217)
                type: number
                minimum: 1
                maximum: 4
                example: 2
              sum:
                description: Сумма к оплате в минимальных единицах валюты
                type: number
                maximum: 4294967200
                minimum: 0
                example: 100
            additionalProperties: false
        total:
          type: number
          description: __Тег ФФД 1020.__ Итоговая сумма чека в минимальных единицах валюты. Должна соответствовать сумме всех значений поля itemAmount. Обязательно при использовании фискализации.
          maximum: 4294967200
          minimum: 0
        additionalUserProps:
          type: object
          description: __Тег ФФД 1084.__ Дополнительные реквизиты пользователя
          required:
            - name
            - value
          properties:
            name:
              type: string
              description: __Тег ФФД 1085.__ Название дополнительного реквизита
              maxLength: 64
              minLength: 1
              pattern: ^[ -~А-Яа-яЁё№]*$
            value:
              type: string
              description: __Тег ФФД 1086.__ Значение дополнительного реквизита пользователя
              minLength: 1
              maxLength: 256
              pattern: ^[ -~А-Яа-яЁё№]*$
          additionalProperties: false
          example: {}
        additionalCheckProps:
          type: string
          description: __Тег ФФД 1192.__ Дополнительный реквизит чека
          minLength: 1
          maxLength: 16
          pattern: ^[ -~А-Яа-яЁё№]*$
        operatingCheckProps:
          type: object
          description: __Тег ФФД 1270.__ Операционный реквизит чека. Только для ФФД 1.2.
          required:
            - name
            - value
            - timestamp
          properties:
            name:
              type: string
              description: __Тег ФФД 1271.__ Идентификатор операции. Принимает значение "0" до определения значения ФНС России
              minLength: 0
              maxLength: 40
              pattern: ^[ -~А-Яа-яЁё№]*$
              example: 0
            value:
              type: string
              description: __Тег ФФД 1272.__ Данные операции
              minLength: 1
              maxLength: 64
              pattern: ^[ -~А-Яа-яЁё№]*$
            timestamp:
              type: string
              description: __Тег ФФД 1273.__ Время и дата операции в формате "dd.mm.yyyy HH:MM:SS"
              minLength: 20
              maxLength: 20
          additionalProperties: false
          example: {}
        sectoralCheckProps:
          type: array
          description: __Тег ФФД 1261.__ Отраслевой реквизит чека. Передается, если в чеке есть маркированные товары и включение указанного реквизита предусмотрено нормативными актами для этой товарной группы. Только для ФФД 1.2.
          items:
            required:
              - federalId
              - date
              - number
              - value
            properties:
              federalId:
                $ref: '#/components/schemas/federalId'
              date:
                type: string
                description: __Тег ФФД 1263.__ Дата нормативного акта, регламентирующего заполнение реквизита
                maxLength: 10
                minLength: 1
                format: date-time
              number:
                type: string
                description: __Тег ФФД 1264.__ Номер нормативного акта, регламентирующего заполнение реквизита
                maxLength: 32
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$
              value:
                type: string
                description: __Тег ФФД 1265.__ Значение отраслевого реквизита
                maxLength: 256
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$
            additionalProperties: false
            example: {}
      additionalProperties: false
      example: {}

    additionalOfdParams:
      name: additionalOfdParams
      description: Блок, содержащий список параметров для ОФД
      type: object
      example: {"name1":"value1", "name2":"value2"}

    orderId:
      name: orderId
      description: Уникальный номер заказа в Платёжном шлюзе.
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[a-f0-9\-]+$
      example: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1

    formUrl:
      name: formUrl
      description: URL-адрес страницы, на который должен быть перенаправлен браузер Плательщика для дальнейшего проведения операции
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^[ -~]*$
      example: https://ecomtest.sberbank.ru/pp/pay_ru?orderId=a67b0ced-c9a4-4cfb-bce3-b9595afaafc1

    externalParams:
      name: externalParams
      description: Блок дополнительных параметров, который возвращается Клиенту для специфичных сценариев
      type: object
      properties:
        sbolDeepLink:
          description: Ссылка на переход в мобильное приложение "Сбербанк-Онлайн" для завершения оплаты
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^[ -~]*$
          example: sberpay://invoicing/v2?bankInvoiceId=a67b0cedc9a44cfbbce3b9595afaafc1&operationType=Web2App&option=Connect
        sbolBankInvoiceId:
          description: Уникальный идентификатор заказа, сгенерированный ПШ
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^[ -~]*$
          example: a67b0cedc9a44cfbbce3b9595afaafc1
        sbpPayload:
          description: |
            Зарегистрированная Платежная или Информационная ссылка СБП актуальной версии формата двухмерного QR-кода (ISO/IEC 18004-2015), представляемая в виде URLBased.

            Не возвращается если:
            * Отсутствует соответствующее разрешение.
            * Заказ не зарегистрировался
            * Отсутствует информация от НСПК, получаемая любым путем
          type: string
          maxLength: 999
          minLength: 1
          pattern: ^[ -~]*$
          example: https://qr.nspk.ru/AD10006MNS72CPM49QGO1NIUBH13VD8H?type=02&bank=100000000111&sum=19900&cur=RUB&crc=6CB3
        sbpDeeplink:
          description: Зарезервировано
          type: string
          maxLength: 999
          minLength: 1
          pattern: ^[ -~]*$
        sberPayload:
          description: |
            Зарегистрированная ссылка Плати QR от Сбербанка формата двухмерного QR-кода (ISO/IEC 18004-2015), представляемая в виде URL-Based.

            Не возвращается если:
            * Отсутствует соответствующее разрешение
            * Заказ не зарегистрировался
            * Отсутствует информация от смежного модуля, который обрабатывает Плати QR от Сбербанка
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ -~]*$
          example: https://platiqr.ru/?dynamicQr=d2b3ea93c92246468bade81e3cc1fb30
        qrcId:
          description: Идентификатор Функциональной ссылки СБП
          type: string
          maxLength: 32
          minLength: 32
          pattern: /[A-Z0-9]+
          example: AD10001RQ10OT70E8LEOT61G16J41I09
      additinalProperties: true

    pan:
      name: pan
      description: Номер Карты Плательщика
      type: string
      maxLength: 19
      minLength: 13
      pattern: ^\d+$
      example: 2201382000000047

    cvc:
      name: cvc
      description: Проверочный код Карты Плательщика (обычно с обратной стороны Карты)
      type: string
      maxLength: 3
      minLength: 3
      pattern: ^\d+$
      example: "123"

    expiryYear:
      name: expiryYear
      description: Год окончания срока действия Карты
      type: string
      maxLength: 4
      minLength: 4
      pattern: ^\d{4}$
      example: "2027"

    expiryMonth:
      name: expiryMonth
      description: Месяц окончания срока действия Карты
      type: string
      maxLength: 2
      minLength: 2
      pattern: ^\d{2}$
      example: "01"

    cardholderName:
      description: Текст, изображенный на Карте Плательщика в ISO 8859-1. Допустимы Имя, Фамилия, инициалы или любые комбинации специальных символов ASCII, кроме кириллицы
      type: string
      maxLength: 200
      minLength: 1
      pattern: ^[ -~]+$
      example: "PETR IVANOV"

    ip:
      name: ip
      description: IP-адрес Плательщика
      type: string
      maxLength: 39
      minLength: 1
      pattern: ^[ -~]*$
      example: 127.0.0.1

    threeDSMethodNotificationUrl:
      name: threeDSMethodNotificationUrl
      description: URL адрес Клиента для получения уведомления о завершении вызова 3DS Method (3DS Method Notification URL)
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^https?:\/\/(.*)$
      example: https://testmerchant.ru/3DSMethod

    termUrl:
      name: termUrl
      description: URL адрес Клиента для возврата после проведения 3-D Secure аутентификации Плательщика. Обязателен, если используется платёжная страница на стороне Клиента и 3DS Server Банка
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^https?:\/\/(.*)$
      example: https://testmerchant.ru/3DSPayment

    bindingNotNeeded:
      name: bindingNotNeeded
      description: |
        Признак отказа от создания Связки Плательщиком.
          * `true` = истина, создание Связки после платежа не происходит, а идентификатор Плательщика (clientId), переданный при регистрации заказа, после совершения платежа будет удалён или не будет сгенерирован автоматически;
          * `false` = ложь (по умолчанию), после успешного проведения платежа и выполнения ряда дополнительных условий - происходит создание Связки.
      type: boolean
      example: true

    errorCode:
      name: errorCode
      description: Код ошибки
      type: string
      maxLength: 3
      minLength: 1
      pattern: ^\d{1,3}$
      example: "0"

    errorMessage:
      name: errorMessage
      description: Описание ошибки на языке, переданном в параметре language в запросе
      type: string
      maxLength: 512
      minLength: 0
      pattern: ^[ -~А-Яа-яЁё№]*$
      example: Обработка запроса прошла без системных ошибок

    info:
      name: info
      description: Сообщение для отображения Плательщику
      type: string
      maxLength: 512
      minLength: 0
      pattern: ^[ -~А-Яа-яЁё№]*$
      example: Ваш платёж обработан, происходит переадресация

    redirect:
      name: redirect
      description: Адрес возврата после совершения оплаты - returnUrl или failUrl (в зависиомсти от результата)
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^[ -~]*$
      example: https://testmerchant.ru/return

    acsUrl:
      name: acsUrl
      description: Адрес ACS Банка-эмитента для проведения 3-D Secure аутентификации Карты Плательщика. Не используется при платежах, не требующих дополнительной аутентификации на ACS Банка-эмитента.
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^[ -~]*$
      example: https://acs.vendorcert.mirconnect.ru/mdpayacs/creq

    paReq:
      name: paReq
      description: Сообщение Payer Authentication Request для проведения 3-D Secure аутентификации Карты Плательщика по протоколу 3-D Secure 1.0.2. Не используется при платежах, не требующих дополнительной аутентификации на ACS Банка-эмитента.
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^[ -~]*$
      example: eJxVUl1zojAU/SsM70tCYCg613RY6VbqaK3Sdu1LJyZR2ArYAPXj129icbt9u+fmzrnnnhO4PhRb60OqOq/Kge062LZkySuRl5uB/Zj++hHaVt2wUrBtVcqBfZS1fU0hzZSU8ULyVkkKE1nXbCOtXGgKT66Y4MF6JUKfkF7IQn/t+T2OMVuFgtsUZtFcvlPotlK91CGALlCzKZ6xsqHA+PvPZEp9chVgDKiDUEiVxLReSfVaKP7qAvrsQMkKSdP74WgcWXG0GCXWLFlE85un+ztA50fgVVs26kgD3wN0AdCqLc2aZlf3Edrv90719lY5vCoAmRdAX5JmralqzXTIBV2ShExub06T54f98vSSvcTLwzTeeMs0GQAyEyBYIynBxMOuG1ou6WPSJ3r3uQ+sMBIodrC+ogOwMzuiT6Db/0PQhisd0OWACwJ52Ol89IR28l8N6EvucGT85I32KVpf3f6ZtWgiUnRid8F8zIPe72OwzsZD4/J5yDDm2hviG2kdAGRoUBcg6nLX1bf/8BcC+cTR

    cReq:
      name: cReq
      description: Сообщение Challenge Request для проведения 3-D Secure аутентификации Карты Плательщика по протоколу 3-D Secure 2.x.x. Не используется при платежах, не требующих дополнительной аутентификации на ACS Банка-эмитента.
      type: string
      maxLength: 4096
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsImFjc1RyYW5zSUQiOiJjODk2ZThlMS03YWU0LTQ4NjctYTQxMS00YTE5NjM0MTUwMWUiLCJjaGFsbGVuZ2VXaW5kb3dTaXplIjoiMDIiLCJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIn0=

    threeDSMethodUrl:
      name: threeDSMethodURL
      description: URL адрес для отправки запроса 3DS Method Data, если карта поддерживает вызов 3DS Method
      type: string
      maxLength: 2048
      minLength: 1
      pattern: ^[ -~]*$
      example: https://ds.vendorcert.mirconnect.ru/ma

    threeDSServerTransId:
      name: threeDSServerTransId
      description: Идентификатор 3DS Server Transaction ID
      type: string
      maxLength: 36
      minLength: 1
      pattern: ^[ -~]*$
      example: 93045e61-d783-40f1-8934-33fd59387ca6

    threeDSMethodData:
      name: threeDSMethodData
      description: Значение объекта 3DS Method Data в кодировке base64url, если карта поддерживает 3DS Method и threeDSMNotificationUrl был передан в запросе
      type: string
      maxLength: 4096
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjkzMDQ1ZTYxLWQ3ODMtNDBmMS04OTM0LTMzZmQ1OTM4N2NhNiIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJodHRwczovL3Rlc3RtZXJjaGFudC5ydS90aHJlZURTTWV0aG9kIn0

    threeDSCompInd:
      name: threeDSCompInd
      description: |
        Статус завершения вызова 3DS Method:
          * `Y` = завершен успешно (получен 3DS Method Notification)
          * `N` = не завершен успешно (3DS Method Notification не получен в течение таймаута 10 сек)
      type: string
      maxLength: 1
      enum:
        - Y
        - N
      example: Y

    paRes:
      name: paRes
      description: Сообщение Payer Authentication Response, полученное в ответе на запрос аутентификации Плательщика. Обязательно при использовании версии 3-D Secure 1.0.2
      type: string
      maxLength: 8192
      minLength: 1
      pattern: ^[ -~]*$
      example: "eJylWmmzoziW/SsV1RHzxdE ... vX568v1vkv4HCWzUfw=="

    cRes:
      name: cRes
      description: Сообщение Challenge Response, полученное в ответе на запрос проведения Challenge с Плательщиком. Обязательно при использовании версии 3-D Secure 2.х.х
      type: string
      maxLength: 4096
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJhY3NUcmFuc0lEIjogIjllNWUxMWViLTY1OTYtNDMyMi04NjU4LTJkNDY0MDUwMGYyZSIsICJ0cmFuc1N0YXR1cyI6ICJZIiwgIm1lc3NhZ2VWZXJzaW9uIjogIjIuMS4wIiwgIm1lc3NhZ2VUeXBlIjogIkNSZXMiLCAidGhyZWVEU1NlcnZlclRyYW5zSUQiOiAiOTMwNDVlNjEtZDc4My00MGYxLTg5MzQtMzNmZDU5Mzg3Y2E2In0=

    showExpired:
      name: showExpired
      description: |
        Признак необходимости отображать Связки с истёкшим сроком действия Карты. Возможны следующие значения:
          * `true` = истина;
          * `false` = ложь (по умолчанию).
      type: boolean
      example: true

    showInactive:
      name: showInactive
      description: |
        Признак необходимости отображать Связки с неактивным статусом. Возможны следующие значения:
          * `true` = истина;
          * `false` = ложь (по умолчанию).
      type: boolean
      example: true

    sberpay.backurl:
      name: sberpay.backurl
      description: |
        Адрес для возврата Плательщика после оплаты в приложении "Сбербанк-Онлайн", обязательно в случае, если Плательщик будет перенаправлен в приложение "Сбербанк-Онлайн" из браузера, который находится на одном устройстве с приложением "Сбербанк-Онлайн".
        Возможно получение статуса оплаты. Для этого в конце ссылки указывается параметр @{BankResultState}. При переходе по ссылке в нее будет добавлен параметр с результатом оплаты.
        Возможные значения параметра:
        значение    | расшифровка
        ------------|-------------------------------------------------------------
        success     | оплата успешно прошла, требуется отправить на успешный экран
        return      | в сценарии оплаты произошла ошибка, требуется отправить на неуспешный экран
        cancel      | Клиент нажал отмену в СБОЛ (отказался оплачивать заказ), либо предлагаем перейти в Приложение СБОЛ и оплатить повторно, либо предлагаем вернуться в приложение Партнера. 0При переадресации пользователя из приложения Сбербанк Онлайн, он будет перенаправлен на одну из указанных страниц.
      type: string
      maxLength: 255
      minLength: 1
      pattern: ^[ -~]*$

    bindingStatus:
      name: bindingStatus
      description: |
        Статус Связки. Возможны следующие значения:
          * `0` = Неактивная;
          * `1` = Активная.
      type: string
      maxLength: 1
      minLength: 1
      pattern: ^\d+$
      example: "0"

    bindings:
      description:  Дополнительная информации о Связках Плательщика
      type: array
      items:
        type: object
        required:
          - bindingId
          - maskedPan
        properties:
          bindingId:
            $ref: '#/components/schemas/bindingId'
          maskedPan:
            $ref: '#/components/schemas/maskedPan'
          expiryDate:
            $ref: '#/components/schemas/expiration'
          clientId:
            $ref: '#/components/schemas/clientId'
          bindingStatus:
            $ref: '#/components/schemas/bindingStatus'
          paymentWay:
            $ref: '#/components/schemas/paymentWay'
          paymentSystem:
            $ref: '#/components/schemas/paymentSystem'
        additionalProperties: false
      maxItems: 100

    paymentTokenDecrypted:
      name: paymentTokenDecrypted
      description: |
        Закодированный в base64url JSON-объект с платёжными данными полученными и расшифрованными на стороне Клиента из JWT Payload (Claim) от MirPay. Состав JSON-объекта:
          Объект  |Тип     |Обязательно|Описание
          --------|--------|-----------|-------------------------------------
          tan     |string  |да         |Номер Токена (TAN)
          cav     |string  |да/нет     |Authentication Value (NSPK-InApp криптограмма). Может отсутствовать для операций по сохраненным реквизитам
          tey     |integer |да         |Последние две цифры года срока окончания действия токена. Возможные значения: 18-99
          tem     |integer |да         |Порядковый номер месяца в году срока окончания действия токена. Возможные значения: 1-12
          transId |string  |да/нет     |Уникальный идентификатор In-App операции в формате UUID. Может отсутствовать для операций по сохраненным реквизитам
          mId     |string  |да/нет     |Идентификатор ТСП (Merchant ID).Может отсутствовать для операций по сохраненным реквизитам
          mx5c    |string  |да/нет     |Cертификат X.509 в Base64 открытого ключа ТСП. Может отсутствовать для операций по сохраненным реквизитам
          orderId |string  |да/нет     |Уникальный идентификатор заказа/транзакции на стороне ТСП. Может отсутствовать для операций по сохраненным реквизитам
          sum     |integer |да/нет     |Сумма платежа в минимальных единицах валюты. Должна совпадать с суммой заказа. Может отсутствовать для операций по сохраненным реквизитам
          cur     |integer |да/нет     |Цифровой код валюты по ISO 4217. Может отсутствовать для операций по сохраненным реквизитам
          media   |string  |да/нет     |Тип источника, через который инициирована In-App операция. `ISDK` = In-Application SDK, `DL` = Deep link, `UL` = Universal link, `TR` = In-Application Mir HCE SDK
      type: string
      maxLength: 8192
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJ0YW4iOiIyMjAwMTIqKioqKioqKiozNDg2IiwiY2F2IjoiM0Q2RkM4MjZBMDhDODJCODk3ODAwMjlGNjk2NzBGRERDRjI5OUIiLCJ0ZXkiOjI5LCJ0ZW0iOjMsInRyYW5zSWQiOiI1YWI1MjQ4Ny0xNzdmLTQ2NGItYjY5NS0yOTU0ZmZjNDRhMTMiLCJtSWQiOiIwMDAwMDAwMDAwMDAwMDEiLCJteDVjIjoiTUlJRWpEQ0NBM1NnQXdJQkFnSURFaUVETUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdGTVFzd0NRWURWUVFHRXdKU1ZURVpNQmNHQTFVRUNBd1FVMkZwYm5RdFVHVjBaWEp6WW5WeVp6RVhNQlVHQTFVRUNnd09WbTlrYTJFZ1FtRnVheUJLVTBNeER6QU5CZ05WQkFzTUJrSXdNREF3TVRFUE1BMEdBMVVFQXd3R1FqQXdNREF4TVNBd0hnWUpLb1pJaHZjTkFRa0JGaEY2YjNKeWIwQmxhMkZ6YzJseUxtTnZiVEFlRncweU1qRXhNRGt4TXpNMU5UTmFGdzB5TXpFeE1Ua3hNek0xTlROYU1JRzNNUXN3Q1FZRFZRUUdFd0pTVlRFWk1CY0dBMVVFQ0F3UVUyRnBiblF0VUdWMFpYSnpZblZ5WnpFWk1CY0dBMVVFQnd3UVUyRnBiblF0VUdWMFpYSnpZblZ5WnpFYU1CZ0dBMVVFQ2d3UlVHRnlZWE5sYm1ObElFeHBiV2wwWldReEdUQVhCZ05WQkFzTUVFMHdNREF3TURBd01EQXdNREF3TURFeEdUQVhCZ05WQkFNTUVFMHdNREF3TURBd01EQXdNREF3TURFeElEQWVCZ2txaGtpRzl3MEJDUUVXRVhwdmNuSnZRR1ZyWVhOemFYSXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1TzFteGU2Mk5kVzdLTTUwRlZ3Y29qNDVRSjNYVms4QWg2UkN4Q1IzdHZydXM3bm9OV2FLajljM2VEeDQ3V3N3MFZROUpiUVRPdFRqaSsrRFkwOEJ2WGtWK1J1SXNlekdnVzR4S1RJK3lwSGN4OHZJSU5oS0JLMmZZdTVJRFZkejRaYml1R3IySW13eHVPL3VYRW5iNXhDTS9wK01tTDBwZmpjaE9LWkZMVW1Xdm44clMxUGc5NzRRSjJiODl0TDlKSmR3K3NhMDlXWkpoQWZGYVNaRk9LM0dwQkc5azVmZEhvTXNKY2RJRmxOMzFIMFF2OFMvOEZVbGdqVVFCdW9TbmdneXJ6aUR6RXFWM1BIcXcwZURjOTc5WE1hYTZvWFJLYk1UaXFrR01qN0h4N2dVanFzRStPZ29EcFdDSlpWVGMzNWkrajJGTEVpRDZ4NHpBR2FjZndJREFRQUJvNEhRTUlITk1Ba0dBMVVkRXdRQ01BQXdFUVlKWUlaSUFZYjRRZ0VCQkFRREFnV2dNRE1HQ1dDR1NBR0crRUlCRFFRbUZpUlBjR1Z1VTFOTUlFZGxibVZ5WVhSbFpDQkRiR2xsYm5RZ1EyVnlkR2xtYVdOaGRHVXdIUVlEVlIwT0JCWUVGQnRrWDUvemNnSlpSYitHZUpKYUVZZytWVE9UTUI4R0ExVWRJd1FZTUJhQUZMWE9JclFpZHNuZ0J4cXhBQ3FtbURmajJTM0tNQTRHQTFVZER3RUIvd1FFQXdJRThEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBZ1lJS3dZQkJRVUhBd1F3Q1FZRFZSMFNCQUl3QURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1EN3FITEVKakdEcyt2ZEQwTklKWnhzVVpITjBXVTdPMm83TUxkVE96bkRqQ0RaV0thNzBHQlRsUm5vNTU2ejQ0a2VxajVWWnRIOVhWZ1A0U3pwOEMyZnppT0F1alNyS1Z3MGxoN2lEUmNiMU9ESEx5U0IzMDRHOXpnZE0rRFBLeW9za3pxcC9KNGl5VWFGLzZyNVlqLzVxVmZ0d0xSQlRJbld0OGgycFdxU29aaE5xaFY1SmRVK1dtQ0Nzd0RLZzQzSTJTSC9sUHZVaXFkRFFYK2xscDZYVHVJNm83aUdQRmRQZ2tOWFVOVUVIL3NNTUNOU2xOQmNQUFhGeSs1SHhFYkFmS242WmJZN2xYTDZSbzJuSzRERFJSbENYMGJmT1BKWFBMK290dncrVXZuSXIyOGNpc0VTdzB5OWxYbTlOWmhhQnhEVEZWREFSTWZUT1lxdFJDdz09Iiwib3JkZXJJZCI6IjEyMzQ1NiIsInN1bSI6MTAwMDAsImN1ciI6NjQzLCJtZWRpYSI6IklTREsifQ

    preAuth:
      name: preAuth
      description: |
        Признак предварительной авторизации. Возможны следующие значения:
          * `true` = истина, платёж обрабатывается по двухстадийному сценарию;
          * `false` = ложь (по умолчанию), платёж обрабатывается по одностадийному сценарию.
      type: boolean
      example: false

    success:
      name: success
      description: |
        Признак, определяющий результат выполнения запроса. Возможны следующие значения:
          * `true` = истина;
          * `false` = ложь.
      type: boolean
      example: true

    acsRenderingType:
      name: acsRenderingType
      description: Шаблон UI, выбранный ACS из поддерживаемых SDK для проведения Challenge с Плательщиком в сценарии Application-based. Передается в кодировке base64
      type: string
      maxLength: 256
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJhY3NSZW5kZXJpbmdUeXBlIjp7ImFjc0ludGVyZmFjZSI6IjAyIiwiYWNzVWlUZW1wbGF0ZSI6IjAzIn19

    acsSignedContent:
      name: acsSignedContent
      description: Параметры ACS для проведения Challenge с Плательщиком в сценарии Application-based
      type: string
      maxLength: 64000
      minLength: 1
      pattern: ^[ -~]*$
      example: eyJ4NWM ... 6iijPAIqV-aoEeIg

    acsDecoupleIndicator:
      name: acsDecoupleIndicator
      description: |
        Признак обработки операции оплаты по сценарию отложенной аутентификации. Допустимые значения:
          * `Y` = используется отложенная аутентификация
      type: string
      maxLength: 1
      minLength: 1
      enum:
        - Y
      pattern: ^[ -~]*$
      example: Y

    orderStatus:
      name: orderStatus
      description: |
        По значению этого параметра определяется состояние заказа в платёжном шлюзе. Отсутствует, если заказ не был найден. Возможны следующие значения:
          * `0` = заказ зарегистрирован, но не оплачен;
          * `1` = сумма захолдирована (для двухстадийного сценария);
          * `2` = проведена полная авторизация суммы заказа / создана подписка СБП;
          * `3` = авторизация отменена;
          * `4` = по заказу была проведена операция возврата;
          * `5` = инициирована аутентификация через ACS Банка-эмитента;
          * `6` = авторизация отклонена.
      type: integer
      minimum: 0
      maximum: 9
      example: 2

    actionCode:
      name: actionCode
      description: Код ответа платёжного шлюза - цифровое обозначение результата, к которому привело обращение со стороны Клиента
      type: integer
      minimum: -9999999
      maximum: 9999999
      example: 0

    actionCodeDescription:
      name: actionCodeDescription
      description: Расшифровка кода ответа на языке, переданном в параметре запроса language
      type: string
      maxLength: 512
      minLength: 0
      pattern: ^[ -~А-Яа-яЁё№]*$
      example: ""

    date:
      name: date
      description: Дата и время регистрации заказа в формате UNIX-времени (POSIX-времени)
      type: number
      minimum: 0
      maximum: 999999999999999
      example: 1636985192232

    depositedDate:
      name: date
      description: Дата и время оплаты/завершения оплаты заказа в формате UNIX-времени (POSIX-времени)
      type: number
      minimum: 0
      maximum: 999999999999999
      example: 1636985192232

    authRefNum:
      name: authRefNum
      description: Ссылочный номер авторизации платежа, который присваивается при регистрации платежа на стороне платёжной системы
      type: string
      maxLength: 24
      minLength: 0
      pattern: ^[A-Za-z0-9]+$
      example: "303112098637"

    refundedDate:
      name: refundedDate
      description: Дата и время возврата средств.
      type: string
      format: date-time
      example: 2022-12-31T23:59:59

    transactionAttributes:
      name: transactionAttributes
      description: Дополнительные параметры деталей заказа. Элемент присутствует в ответе, если при формировании ответа на создание заказа содержатся дополнительные параметры блока jsonParams которые могут использоваться в различных сценариях, каждый возвращаемый параметр представлен в отдельном блоке transactionAttributes
      type: array
      items:
        type: object
        properties:
          name:
            description: Имя передаваемого параметра для различных свойств заказа
            type: string
            maxLength: 20
            minLength: 1
            pattern: ^[A-Za-z0-9]*$
            example: merchantIp
          value:
            description: Значение передаваемого параметра для различных свойств заказа
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^[A-Za-z0-9]*$
            example: 194.54.15.41
        additinalProperties: false

    attributes:
      name: attributes
      description: Дополнительные параметры заказа со стороны ПШ. Элемент присутствует в ответе, если заказ успешно создался
      type: array
      items:
        type: object
        properties:
          name:
            description: Имя передаваемого параметра для различных свойств заказа
            type: string
            maxLength: 20
            minLength: 1
            pattern: ^[A-Za-z]*$
            example: mdOrder
          value:
            description: Значение передаваемого параметра для различных свойств заказа
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^[ -~]*$
            example: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1
        additinalProperties: false

    SBPSubscriptionResponse:
      type: object
      properties:
        mdOrder:
          $ref: '#/components/schemas/orderId'
        qrcId:
          description: Идентификатор функциональной ссылки
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[A-Za-z0-9]+$
        subscriptionId:
          description: Идентификатор сохраненной подписки.
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[a-f0-9]+$
          example: "c9403ef2f9254736a5af837238ce05b1"
        memberId:
          name: memberId
          description: Идентификатор банка отправителя
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d{12}$

    merchantOrderParams:
      name: merchantOrderParams
      description: Дополнительные параметры заказа со стороны Клиента. Элемент присутствует в ответе, если при создании заказа содержатся дополнительные параметры блока jsonParams, каждый возвращаемый параметр представлен в отдельном блоке merchantOrderParams
      type: array
      items:
        type: object
        properties:
          name:
            description: Имя передаваемого параметра для различных сценариев
            type: string
            maxLength: 20
            minLength: 1
            pattern: ^[A-Za-z0-9]*$
            example: name1
          value:
            description: Значение передаваемого параметра для различных сценариев
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^[A-Za-z0-9]*$
            example: value1
        additinalProperties: false

    maskedPan:
      name: maskedPan
      description: Маскированный номер Карты, Токена или Счёта Плательщика
      type: string
      maxLength: 20
      minLength: 1
      pattern: ^[0-9*]+$
      example: 220138*******0047

    expiration:
      name: expiration
      description: Год и месяц истечения срока действия Карты (YYYYMM)
      type: string
      maxLength: 8
      minLength: 1
      pattern: ^\d+$
      example: "202512"

    paymentSystem:
      description: |
        Наименование платёжной системы. Возможны следующие варианты:
          * `VISA`;
          * `MASTERCARD`;
          * `AMEX`;
          * `JCB`;
          * `CUP`;
          * `MIR`;
          * `Undefined`- передается в случае, если оплата выполнялась с использованием Счёта.
      type: string
      maxLength: 10
      minLength: 1
      pattern: ^\w+$
      example: MIR

    approvalCode:
      description: Код авторизации платежа
      type: string
      maxLength: 6
      minLength: 1
      pattern: ^\w+$
      example: "433187"

    cavv:
      name: cavv
      description: Криптограмма с результатом аутентификации Плательщика по протоколу 3-D Secure
      type: string
      maxLength: 28
      minLength: 28
      pattern: ^[ -~]+$
      example: AAABCUKCEQAAAAADIIIRAbpUtuo=

    xid:
      name: xid
      description: Уникальный идентификатор 3-D Secure аутентификации (xid или dsTransId)
      type: string
      maxLength: 36
      minLength: 28
      pattern: ^[ -~]+$
      example: 82dfc393-af33-4d8f-819e-e286d565d8a9

    product:
      name: product
      description: Дополнительные сведения о карте Плательщика
      type: string
      maxLength: 255
      minLength: 0
      pattern: ^[A-Za-z0-9]*$
      example: ""

    paymentWay:
      name: paymentWay
      description: Способ совершения платежа
      type: string
      maxLength: 64
      minLength: 1
      pattern: ^[ -~]*$
      example: CARD

    cardAuthInfo:
      name: cardAuthInfo
      description: Блок информации о Карте
      type: object
      properties:
        maskedPan:
          $ref: '#/components/schemas/maskedPan'
        expiration:
          $ref: '#/components/schemas/expiration'
        cardHolderName:
           $ref: '#/components/schemas/cardholderName'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        chargeback:
          description: Признак были ли средства принудительно возвращены Клиенту Банком
          type: boolean
          example: false
        paymentSystem:
          $ref: '#/components/schemas/paymentSystem'
        product:
          $ref: '#/components/schemas/product'
        paymentWay:
          $ref: '#/components/schemas/paymentWay'
        pan:
          $ref: '#/components/schemas/maskedPan'
        secureAuthInfo:
          description: Блок информации о проведении 3-D Secure
          type: object
          properties:
              eci:
                description: Индикатор проведения 3-D Secure
                type: integer
                minimum: 0
                maximum: 9999
                example: 2
              threeDSInfo:
                description: Блок параметров об аутентификации 3-D Secure
                type: object
                properties:
                  cavv:
                    $ref: '#/components/schemas/cavv'
                  xid:
                    $ref: '#/components/schemas/xid'
                additinalProperties: false
          additinalProperties: false
        secureCardInfo:
          description: Блок защищенной информации о Карте
          type: object
          properties:
            sessionKey:
              description: Сессионный ключ. Обязателен, если передается параметр критичных данных "secureData"
              type: string
              maxLength: 512
              minLength: 1
              pattern: ^[ -~]*$
            secureData:
              description: Строка зашифрованных критичных данных. При передаче обязательна передача "sessionKey".
              type: string
              maxLength: 4096
              minLength: 1
              pattern: ^[ -~]*$
          example: {}
          additinalProperties: false
        isCorp:
          name: isCorp
          description: Признак корпоративной карты. Принимает значение true или false.
          type: string
          example: ""
      additinalProperties: false

    additionalParams:
      name: additionalParams
      description: Дополнительные параметры операции. Используется при создании подписки СБП.
      type: object
      properties:
        phone:
          description: Маскированный Номер телефона Плательщика в формате ***********XXXX
          type: string
          maxLength: 15
          minLength: 13
          pattern: ^\d{13,15}$
          example: "***********1232"
        subscriptionId:
          description: Идентификатор сохраненной подписки для Агента
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[A-Za-z0-9]+$
        memberId:
          description: Идентификатор Банка отправителя, где сохранена подписка для Агента
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d{12}$
        extTransactionId:
          description: Идентификатор Операции СБП C2B
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[A-Za-z0-9]+$
        qrcId:
          description: Идентификатор функциональной ссылки
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[A-Za-z0-9]+$
      example: {}
      additinalProperties: false
    additionalProperties: false

    orderOperation:
      name: orderOperation
      description: |
        Тип операции, о которой формируется уведомление. Возможны следующие значения:
          * `created` = заказ создан;
          * `approved` = операция удержания (холдирования) суммы;
          * `deposited` = операция завершения;
          * `reversed` = операция отмены;
          * `refunded` = операция возврата;
          * `declinedByTimeout` = истекло время, отведенное на оплату заказа;
          * `subscriptionCreated` = подписка была создана Плательщиком.
      type: string
      maxLength: 20
      minLength: 1
      pattern: ^[A-Za-z0-9]*$
      example: deposited

    bindingOperation:
      name: bindingOperation
      description: |
        Тип операции, о которой формируется уведомление. Возможны следующие значения:
          * `bindingCreated` = данные связки были изменены Плательщиком.
          * `bindingDeactivated` = связка была деактивирована Плательщиком.
      type: string
      maxLength: 20
      minLength: 1
      pattern: ^[A-Za-z0-9]*$
      example: bindingCreated

    status:
      name: status
      description: |
        Индикатор успешности операции о которой формируется уведомление. Возможны следующие значения:
          * `1` = операция прошла успешно;
          * `0` = операция завершилась ошибкой;
      type: integer
      maximum: 1
      minimum: 0
      example: 1

    #checksum:
      #name: checksum
      #description: Аутентификационный код или контрольная сумма, полученная из набора параметров, подтверждающая уведомление
      #type: string
      #maxLength: 1024
      #minLength: 1
      #pattern: ^[ -~]*$
      #example: asdqwerty1234567zxcvbnm

    authDateTime:
      name: authDateTime
      description: Дата и время авторизации в Банке-эквайрере в формате UNIX-времени (POSIX-времени)
      type: number
      minimum: 0
      maximum: 999999999999999
      example: 1636985192232

    terminalId:
      name: terminalId
      description: Идентификатор терминала в платёжном шлюзе Банка-эквайрера, через который осуществлялась оплата
      type: string
      maxLength: 10
      minLength: 1
      pattern: ^\w+$
      example: "20235777"

    paymentAmountInfo:
      name: paymentAmountInfo
      description: Блок информации о суммах, участвующих в цикле платежа
      type: object
      properties:
        approvedAmount:
          description: Сумма холдирования для двухстадийного платежа или подтвержденная сумма списания для одностадийного платежа
          type: integer
          maximum: 999999999999
          minimum: 0
          example: 19900
        depositedAmount:
          description: Сумма завершения оплаты для двухстадийного сценария платежа
          type: integer
          maximum: 999999999999
          minimum: 0
          example: 14900
        refundedAmount:
          description: Сумма возвращенных средств
          type: integer
          maximum: 999999999999
          minimum: 0
          example: 0
        feeAmount:
          description: Сумма комиссии в минимальных единицах валюты
          type: integer
          maximum: 999999999999
          minimum: 0
          example: 0
        paymentState:
          description: |
            Состояние платежа. Возможны следующие варианты:
              * `CREATED`
              * `APPROVED`
              * `DEPOSITED`
              * `REVERSED`
              * `REFUNDED`
              * `DECLINED`
          type: string
          maxLength: 10
          minLength: 1
          pattern: ^[A-Za-z]*$
          example: DEPOSITED
      additinalProperties: false

    bankInfo:
      name: bankInfo
      description: Блок информации о Банке-эмитенте
      type: object
      properties:
        bankName:
          description: Наименование Банка-эмитента Карты Плательщика
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~]*$
          example: ПАО Сбербанк
        bankCountryCode:
          description: Код страны Банка-эмитента
          type: string
          maxLength: 4
          minLength: 1
          pattern: ^\w+$
          example: "643"
        bankCountryName:
          description: Наименование страны банка-эмитента на языке, переданном в параметре language в запросе или если не указан, будет использован язык по умолчанию, указанный в настройках Клиента
          type: string
          maxLength: 160
          minLength: 1
          pattern: ^[А-Яа-яЁё\w\s]+$
          example: Россия
      example: {}
      additinalProperties: false

    payerData:
      name: payerData
      description: Блок информации о Плательщике
      type: object
      properties:
        email:
          $ref: '#/components/schemas/email'
      additinalProperties: false

    bindingInfo:
      name: bindingInfo
      description: Блок информации о связке
      type: object
      properties:
        clientId:
          $ref: '#/components/schemas/clientId'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        spasiboAllowed:
          description: Признак наличия Спасибо на связке. Возвращается при создании связки SberPay, при условии подтверждения списание боунсов Спасибо Плательщиком
          type: boolean
          example: true
      additinalProperties: false

    operationType:
      name: operationType
      description: |
        Тип платёжной операции. Возможные значения:
          * `AUTHORIZATION`
          * `PREAUTHORIZATION`
          * `COMPLETION`
          * `REVERSAL`
          * `REFUND`
      type: string
      maxLength: 20
      minLength: 1
      pattern: ^[ -~]*$
      example: AUTHORIZATION

    operations:
      name: operations
      description: Массив объектов, содержащий информацию по всем платёжным операциям в рамках заказа. Возвращается в ответе, если Клиенту разрешено использование данного функционала
      type: array
      items:
        type: object
        properties:
          date:
            $ref: '#/components/schemas/date'
          type:
            $ref: '#/components/schemas/operationType'
          amount:
            $ref: '#/components/schemas/amount'
          referenceNumber:
            $ref: '#/components/schemas/authRefNum'
          externalRefundId:
            $ref: '#/components/schemas/externalRefundId/properties/externalRefundId'
          approvalCode:
            $ref: '#/components/schemas/approvalCode'
          actionCode:
            $ref: '#/components/schemas/actionCode'
          amountBonus:
            description: Сумма операции в минорных единицах бонусов Спасибо (бонусных копейках). Возвращается в случае проведения операции с участием бонусов Спасибо.
            type: integer
            maximum: 999999999999
            minimum: 0
            example: 7700
        additinalProperties: false
      example: []

    loyaltyInfo:
      name: loyaltyInfo
      description: Объект, содержащий данные о состоянии бонусных баллов по программам лояльности в заказе
      type: object
      properties:
        receiptId:
          description: Идентификатор чека в процессинге лояльности
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[ -~]*$
          example: "123394343"
        loyaltyName:
          $ref: '#/components/schemas/loyaltyName'
        paymentBonus:
          name: paymentBonus
          description: Объект, содержащий данные о состоянии использованных баллов для списания при оплате заказа
          type: object
          properties:
            approvedAmountBonus:
              description: Сумма баллов к списанию при оплате заказа
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 7700
            depositedAmountBonus:
              description: Подтвержденная сумма в баллах для списания на момент запроса
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 7700
            refundedAmountBonus:
              description: Бонусы, зачисленные за чек при возврате в ПЦ Лояльности (ранее были списаны при покупке товара)
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 0
        awardBonus:
          name: awardBonus
          description: Объект, содержащий данные о состоянии средств, использованных для начисления баллов при оплате заказа
          type: object
          properties:
            approvedAmountBonus:
              description: Первоначальная сумма, на которую было произведено начисление бонусных баллов
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 0
            depositedAmountBonus:
              description: Подтверждённая сумма заказа на которую произведено начисление бонусных баллов
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 0
            refundedAmountBonus:
              description: Бонусы, списанные за чек при возврате в ПЦ Лояльности (ранее были начислены при покупке товара)
              type: integer
              maximum: 999999999999
              minimum: 0
              example: 0
      additinalProperties: false

    customerDetails:
      description: Блок для передачи параметров с данными о Покупателе
      type: object
      properties:
        deliveryInfo:
          description: Блок для передачи параметров адреса Покупателя для доставки
          type: object
          properties:
            deliveryType:
              description: Тип доставки
              type: string
              maxLength: 20
              minLength: 0
              pattern: ^[ -~А-Яа-яЁё№]*$
              example: Курьер
            country:
              description: Страна доставки
              type: string
              maxLength: 3
              minLength: 3
              pattern: ^[A-Za-z]*$
              example: RUS
            city:
              description: Город доставки
              type: string
              maxLength: 40
              minLength: 1
              pattern: ^[ -~А-Яа-яЁё№]*$
              example: Москва
            postAddress:
              description: Адрес для доставки
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[ -~А-Яа-яЁё№]*$
              example: ул. Вавилова, д. 19
          example: {}
          additinalProperties: false
        fullName:
          description: __Тег ФФД 1227.__ Наименование организации, для физ. лица или ИП - ФИО. В ФФД 1.2 рекомендовано при передаче данного поля заполнить тег 1228 или теги 1243, 1245, 1246.
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
          example: ООО Ромашка
        inn:
          description: __Тег ФФД 1228.__ ИНН Юрлица или ИП (если покупатель Юрлицо или ИП) или физ. лица (если покупатель физ. лицо).
          type: string
          maxLength: 12
          minLength: 10
          pattern: ^\d+$
          example: 123456788990
        address:
          description: __Тег ФФД 1254.__ Адрес Юрлица или ИП. Параметр передается только в случае, если покупатель Юрлицо или ИП. Только для ФФД 1.2. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$ 256
          example: "Москва, ул.Ленина, 1"
        birthdate:
          description: __Тег ФФД 1243.__ Дата рождения покупателя. Только для ФФД 1.2. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
          type: string
          maxLength: 10
          minLength: 10
          format: date
          example: "01.01.2001"
        citizenship:
          description: __Тег ФФД 1244.__ Код страны, гражданином которой является покупатель. Указывается в соответствии с ОКСМ. Используется только в случае, если покупатель - иностранный гражданин. Только для ФФД 1.2. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
          type: string
          maxLength: 3
          minLength: 3
          pattern: ^\d+$
        documentType:
          description: |
            __Тег ФФД 1245.__ Код документа, удостверяющего личность. Допустимо указывать одно из значений справочника. Только для ФФД 1.2. Не поддерживается сервисом "Цифровая касса ЭВОТОР"

            Значение | Наименование
            ---------|---------------------------------
            21       | Паспорт гражданина Российской Федерации
            22       | Паспорт гражданина Российской Федерации, дипломатический паспорт, служебный паспорт, удостоверяющие личность гражданина Российской Федерации за пределами Российской Федерации
            26       | Временное удостоверение личности гражданина Российской Федерации, выдаваемое на период оформления паспорта гражданина Российской Федерации
            27       | Свидетельство о рождении гражданина Российской Федерации (для граждан Российской Федерации в возрасте до 14 лет)
            28       | Иные документы, признаваемые документами, удостоверяющими личность гражданина Российской Федерации в соответствии с законодательством Российской Федерации
            31       | Паспорт иностранного гражданина
            32       | Иные документы, признаваемые документами, удостоверяющими личность иностранного гражданина в соответствии с законодательством Российской Федерации и международным договором Российской Федерации
            33       | Документ, выданный иностранным государством и признаваемый в соответствии с международным договором Российской Федерации в качестве документа, удостоверяющего личность лица без гражданства.
            34       | Вид на жительство (для лиц без гражданства)
            35       | Разрешение на временное проживание (для лиц без гражданства)
            36       | Свидетельство о рассмотрении ходатайства о признании лица без гражданства беженцем на территории Российской Федерации по существу
            37       | Удостоверение беженца
            38       | Иные документы, признаваемые документами, удостоверяющими личность лиц без гражданства в соответствии с законодательством Российской Федерации и международным договором Российской Федерации
            40       | Документ, удостоверяющий личность лица, не имеющего действительного документа, удостоверяющего личность, на период рассмотрения заявления о признании гражданином Российской Федерации или о приеме в гражданство Российской Федерации
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        documentNo:
          description: __Тег ФФД 1246.__ Номер документа, удостоверяющего личность. Только для ФФД 1.2. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[A-Za-z0-9]*$
      additinalProperties: false

    taxSystem:
      description: |
        Система налогообложения:
          * `0` = общая;
          * `1` = упрощённая, доход;
          * `2` = упрощённая, доход минус расход;
          * `3` = единый налог на вменённый доход;
          * `4` = единый сельскохозяйственный налог;
          * `5` = патентная система налогообложения.
      type: string
      maxLength: 2
      minLength: 1
      pattern: ^\d+$
      example: "0"

    taxType:
      description: |
        __Тэг ФФД 1199.__ Тип НДС:
          * `0` = без НДС;
          * `1` = НДС по ставке 0%;
          * `2` = НДС чека по ставке 10%;
          * `4` = НДС чека по расчётной ставке 10/110;
          * `6` = НДС чека по ставке 20%;
          * `7` = НДС чека по расчётной ставке 20/120.
      type: integer
      minimum: 0
      maximum: 7
      example: 0

    cartItems:
      description: Блок для передачи параметров товарных позиций Корзины
      type: object
      required:
        - items
        - payments
      properties:
        items:
          description: Массив с атрибутами товарных позиций в Корзине
          type: array
          items:
            type: object
            description: Элемент массива с атрибутами товарной позиции в Корзине
            required:
              - positionId
              - name
              - quantity
              - itemAmount
              - itemCode
              - itemPrice
              - paymentMethod
              - paymentObject
              - tax
            properties:
              positionId:
                description: Уникальный идентификатор товарной позиции внутри Корзины
                type: string
                maxLength: 12
                minLength: 1
                pattern: ^[0-9]*$
                example: "1"
              itemCode:
                description: Номер (идентификатор) товарной позиции в системе Клиента. Параметр должен быть уникальным в рамках запроса
                type: string
                maxLength: 100
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$
                example: "NM-15"
              discount:
                description: |
                  Блок для передачи параметров скидки для товарной позиции

                  В случае применения скидки за счет списания бонусов Спасибо возвращается
                  discountType|discountValue
                  ------------|-------------
                  sbrf_spasibo|Размер скидки на товарную позицию при списании бонусов Спасибо
                type: object
                required:
                  - discountType
                  - discountValue
                properties:
                  discountType:
                    description: Тип скидки на товарную позицию
                    type: string
                    maxLength: 20
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                    example: percent
                  discountValue:
                    description: Значение скидки на товарную позицию
                    type: string
                    maxLength: 20
                    minLength: 1
                    pattern: ^\d+$
                    example: "50"
                example: {}
                additinalProperties: false
              agentInterest:
                description: Блок для передачи параметров агентской комиссии за продажу товара
                type: object
                required:
                  - interestType
                  - interestValue
                properties:
                  interestType:
                    description: Тип агентской комиссии за продажу товара
                    type: string
                    maxLength: 20
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                    example: agentPercent
                  interestValue:
                    description: Значение агентской комиссии за продажу товара
                    type: string
                    maxLength: 20
                    minLength: 1
                    pattern: ^\d+$
                    example: "5"
                example: {}
                additinalProperties: false
              name:
                description: __Тег ФФД 1030.__ Наименование или описание товарной позиции Корзины в свободной форме
                type: string
                maxLength: 100
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$
                example: Metzeler Enduro 3 Sahara
              quantity:
                description: Блок для передачи общего количество товарных позиций одного positionId и их меру измерения
                type: object
                required:
                  - value
                properties:
                  value:
                    description: __Тег ФФД 1023.__ Количество товарных позиций данного positionId. Шаг измерения - 0.001, максимальная величина 99999.999
                    type: number
                    maximum: 99999.999
                    minimum: 0
                    example: 1.0
                  measure:
                    description: |
                      __Тег ФФД 2108.__ Мера измерения количества товарной позиции. Параметр передается только при использовании ФФД версии 1.2 и имеет только числовое значение:
                        * 0 - Для товаров, реализуемых поштучно или единицами.
                        * 10 - Грамм
                        * 11 - Килограмм
                        * 12 - Тонна
                        * 20 - Сантиметр
                        * 21 - Дециметр
                        * 22 - Метр
                        * 30 - Квадратный сантиметр
                        * 31 - Квадратный дециметр
                        * 32 - Квадратный метр
                        * 40 - Милилитр
                        * 41 - Литр
                        * 42 - Кубический метр
                        * 50 - Киловатт-час
                        * 51 - Гигакалория
                        * 70 - Сутки (День)
                        * 71 - Час
                        * 72 - Минута
                        * 73 - Секунда
                        * 80 - Килобайт
                        * 81 - Мегабайт
                        * 82 - Гигабайт
                        * 83 - Терабайт
                        * 255 - Применяется при использовании иных единиц измерения
                    enum:
                      - 0
                      - 10
                      - 11
                      - 12
                      - 20
                      - 21
                      - 22
                      - 30
                      - 31
                      - 32
                      - 40
                      - 41
                      - 42
                      - 50
                      - 51
                      - 70
                      - 71
                      - 72
                      - 73
                      - 80
                      - 81
                      - 82
                      - 83
                      - 255
                    type: string
                    example: "10"
                example: {}
                additinalProperties: false
              measurementUnit:
                description: __Тег ФФД 1197.__ Единица измерения предмета расчета. Передается только при использовании ФФД версии 1.05.
                type: string
                maxLength: 16
                minLength: 1
                example: "килограмм"
              itemPrice:
                description: __Тег ФФД 1079.__ Стоимость единицы товара/услуги в минимальных единицах валюты, с учетом скидок, баллов, бонусов и т.п. Обязателен для фискализации.
                type: integer
                maximum: 4294967200
                minimum: 0
                example: 14900
              itemAmount:
                description: __Тег ФФД 1043.__ Итоговая стоимость позиции с учетом скидок, баллов, бонусов в минимальных единицах валюты. Должна соответствовать произведению количества товара в позиции и стоимости единицы товара. Обязательно для фискализации. Сумма всех товарных позиций Корзины должна быть равна сумме Заказа
                type: integer
                maximum: 4294967200
                minimum: 0
                example: 19900
              itemCurrency:
                description: Код валюты товарной позиции ISO 4217. Если не указан, считается равным валюте заказа. Все товарные позиции Корзины должны быть выражены в одной и той же валюте и должны совпадать с валютой оригинального Заказа
                type: number
                maxLength: 3
                minLength: 1
                pattern: ^[ -~]+$
                example: "643"
              itemDetails:
                description: Блок для передачи параметров дополнительного описания товарной позиции Корзины
                type: object
                properties:
                  itemDetailsParams:
                    description: |
                      Массив с атрибутами дополнительного описания товарной позиции Корзины

                      Зарезервированные названия атрибутов

                        name            |value
                        ----------------|----------------------
                        minPrice        |Минимальная ожидаемая цена за единицу товара в минорных единицах валюты после применения скидки бонусами Спасибо
                        refundedQuantity|Количество возвращённых товарных позиций данного positionId (не должен передаваться в запросе)
                    type: array
                    items:
                      type: object
                      description: Элемент массива с атрибутами дополнительного описания товарной позиции Корзины.
                      properties:
                        name:
                          description: Наименование атрибута
                          type: string
                          maxLength: 255
                          minLength: 1
                          example: "minPrice"
                        value:
                          description: Значение атрибута
                          type: string
                          maxLength: 255
                          minLength: 1
                          example: "100"
                      additinalProperties: false
              paymentMethod:
                description: |
                  __Тег ФФД 1214.__ Признак способа расчета. Может принимать следующие значения:
                    * `full_prepayment` - Полная предоплата
                    * `prepayment` - Частичная предоплата
                    * `advance` - Аванс
                    * `full_payment` - Полный расчет. В том числе и с учетом аванса или предоплаты
                    * `partial_payment` - Частичный расчет и кредит
                    * `credit` - Кредит
                    * `credit_payment` - Оплата кредита
                enum:
                  - full_prepayment
                  - prepayment
                  - advance
                  - full_payment
                  - partial_payment
                  - credit
                  - credit_payment
                type: string
                example: "prepayment"
              paymentObject:
                description: |
                  __Тег ФФД 1212.__ Признак предмета расчета. Значения в справочнике.

                  Предмет расчета                                                                                                                                        | ФФД 1.05               | ФФД 1.2
                  -------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|---------
                  Товар                                                                                                                                                  | commodity              | 1
                  Подакцизный товар без маркировки. Например, легковой автомобиль, моторное масло, сахаросодержащие напитки.                                             | excise                 | 2
                  Услуга                                                                                                                                                 | service                | 4
                  Работа                                                                                                                                                 | job                    | 3
                  Платеж. Передается, если формируется чек Аванса или Предоплаты                                                                                         | payment                | 10
                  Товар, подлежащий маркировке и имеющий код маркировки. Например, молочная продукция, товары легкой промышленности.                                     | отсутствует            | 33
                  Товар, подлежащий маркировке и не имеющий кода маркировки. Например, если код маркировки испорчен и не подлежит считыванию и восстановлению.           | отсутствует            | 32
                  Подакцизный маркированный товар, имеющий код маркировки                                                                                                | отсутствует            | 31
                  Ставка азартной игры                                                                                                                                   | gambling_bet           | 5
                  Лотерейный билет                                                                                                                                       | lottery                | 7
                  Результат интеллектуальной деятельности                                                                                                                | intellectual_activity  | 9
                  Курортный сбор                                                                                                                                         | отсутствует            | 18
                  Внереализационный доход. Может использоваться, например, в случае предъявления штрафа покупателю или невозможности вернуть остаток с подарочной карты. | non-operating_gain     | 15
                  Взнос в счет оплаты пени, штрафе, вознаграждении                                                                                                       | award                  | 12
                  Агентское вознаграждение                                                                                                                               | agent_commission       | 11
                  Имущественное право                                                                                                                                    | property_right         | 14
                  Страховые взносы                                                                                                                                       | insurance_premium      | 16
                  Торговый сбор                                                                                                                                          | sales_tax              | 17
                  Залог                                                                                                                                                  | deposit                | 19
                  О суммах произведенных расходов в соответствии со статьей 346.16                                                                                       | expense                | 20
                  Взносы на ОПС ИП                                                                                                                                       | pension_insurance_ip   | 21
                  Взносы на ОПС                                                                                                                                          | pension_insurance      | 22
                  Взносы на ОМС ИП                                                                                                                                       | medical_insurance_ip   | 23
                  Взносы на ОМС                                                                                                                                          | medical_insurance      | 24
                  Взносы на ОСС                                                                                                                                          | social_insurance       | 25
                  Платеж казино                                                                                                                                          | casino_payment         | 26
                  Выдача денежных средств банковским платежным агентом                                                                                                   | отсутствует            | 27
                  Иной предмет расчета                                                                                                                                   | another                | 13
                type: string
                maxLength: 21
                minLength: 1
                pattern: ^[A-Za-z0-9-_ ]+$
              tax:
                name: tax
                type: object
                description: Блок информации о налоге
                required:
                 - taxType
                properties:
                  taxType:
                    $ref: '#/components/schemas/taxType'
                additionalProperties: false
                example: {}
              nomenclatureCode:
                description: |
                  __Тег ФФД 1162.__ Используется только при продаже маркированных товаров.
                  Код товара в шестнадцатиричном представлении, с пробелами. Передается при реализации маркированных товаров в ФФД 1.05. Максимальная длина 32 байта.
                  Для касс АТОЛ Онлайн допускается прямая передача кода товара, считанного в формате GS1 Data Matrix. В таком случае сервис сам преобразует значение в необходимый шестнадцатиричный вид.
                type: string
                maxLength: 150
                minLength: 18
                pattern: ^[A-F0-9\-]+$
                example: "00 00 00 01 00 21 FA 41 00 23 05 41 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 00 AB 00"
              markCode:
                description: |
                  __Тег ФФД 1163.__ Используется только при продаже маркированных товаров в ФФД 1.2.
                  Блок элементов с кодом товара. Обязательна передача одного из полей. Правила формирования значений:
                  Приложение №2 к Приказу ФНС России от 14.09.2020 №ЕД-7-20/662 (Таблица 118)
                type: object
                properties:
                  gs1m:
                    description: __Тег ФФД 1305.__ Код товара в формате GS1.M. Перед отправкой необходимо кодировать строку с кодом товара в Base64.
                    type: string
                    maxLength: 200
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                  fur:
                    description: __Тег ФФД 1307.__ Контрольно-идентификационный знак мехового изделия. Должен соответствовать маске СС-ЦЦЦЦЦЦ-СССССССССС.
                    type: string
                    minLength: 20
                    maxLength: 20
                    pattern: ^[ -~А-Яа-яЁё№]*$
                  gs10:
                    description: __Тег ФФД 1304.__ Код товара в формате GS1. Не поддерживается сервисом "Цифровая касса ЭВОТОР".
                    type: string
                    maxLength: 38
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                  ean8:
                    description: __Тег ФФД 1301.__ Код товара в формате EAN-8. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
                    type: string
                    maxLength: 8
                    minLength: 8
                    pattern: ^\d+$
                  ean13:
                    description: __Тег ФФД 1302.__ Код товара в формате EAN-13. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
                    type: string
                    maxLength: 13
                    minLength: 13
                    pattern: ^\d+$
                  itf14:
                    description: __Тег ФФД 1303.__ Код товара в формате ITF-14. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
                    type: string
                    maxLength: 14
                    minLength: 14
                    pattern: ^\d+$
                  short:
                    description: __Тег ФФД 1306.__ Код товара в формате короткого кода маркировки.
                    type: string
                    maxLength: 38
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                  unknown:
                    description: __Тег ФФД 1300.__ Нераспознанный код товара. Не поддерживается сервисом "Цифровая касса ЭВОТОР"
                    type: string
                    maxLength: 32
                    minLength: 1
                    pattern: ^[ -~А-Яа-яЁё№]*$
                additionalProperties: false
                example: {}
              markQuantity:
                description: |
                  __Тег ФФД 1291.__ Используется только при продаже маркированных товаров.
                  Дробное количество маркированного товара.
                  Включается в предмет расчета только при продаже маркированного товара и единицах измерения предмета расчета "штуки" (значение "0")
                type: object
                required:
                  - markQuantityNumerator
                  - markQuantityDenominator
                properties:
                  markQuantityNumerator:
                    description: __Тег ФФД 1293.__ Числитель. Должен быть строго меньше значения "Знаменатель".
                    type: string
                    pattern: ^\d+$
                  markQuantityDenominator:
                    description: __Тег ФФД 1294.__ Знаменатель. Равен количеству товара в партии (упаковке), имеющий общий код маркировки товара.
                    type: string
                    pattern: ^\d+$
                additionalProperties: false
                example: {}
              markProcessingMode:
                description: __Тег ФФД 2102.__ Режим обработки кода маркировки. Передается значение "0" при торговле маркированными товарами. Только для ФФД 1.2.
                type: string
                pattern: ^\d+$
              excise:
                description: |
                  __Тег ФФД 1229.__ Используется при продаже подакцизных товаров.
                  Сумма акциза в минимальных единицах валюты
                type: string
                minLength: 1
                maxLength: 10
                pattern: ^\d+$
              countryCode:
                description: |
                  __Тег ФФД 1230.__ Используется при продаже подакцизных товаров.
                  Код страны происхождения товара, 3 цифры.
                type: string
                minLength: 3
                maxLength: 3
                pattern: ^\d+$
                example: "643"
              declarationNumber:
                description: |
                  __Тег ФФД 1231.__ Используется при продаже подакцизных товаров.
                  Номер таможенной декларации
                type: string
                maxLength: 32
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$
              agentInfo:
                description: |
                  Блок элементов, содержащий атрибуты агента на товарную позицию.
                  При использовании блока удостоверьтесь, что Ваша касса поддерживает возможность передачи агентских признаков.
                  Признаки обязательности атрибутов в зависимости от типа агента представлены в таблице ниже

                  |Объект                        | bank_paying_agent, bank_paying_subagent |paying_agent, paying_subagent | attorney, commission_agent, another
                  |------------------------------|-----------------------------------------|------------------------------|-----------------------------------------
                  |type                          | да                                      | да                           | да
                  |payingAgent.operation         | да                                      | нет                          | нет
                  |payingAgent.phones            | да                                      | да                           | нет
                  |receivePaymentsOperator.phones| нет                                     | да                           | нет
                  |moneyTransferOperator.phones  | да                                      | нет                          | нет
                  |moneyTransferOperator.name    | да                                      | нет                          | нет
                  |moneyTransferOperator.address | да                                      | нет                          | нет
                  |moneyTransferOperator.inn     | да                                      | нет                          | нет
                type: object
                required:
                  - type
                properties:
                  type:
                    description: |
                      __Тег ФФД 1222.__ Тип агента. Может принимать следующие значения:
                        * `bank_paying_agent` - Банковский платежный агент;
                        * `bank_paying_subagent` - Банковский платежный субагент;
                        * `paying_agent` - Платежный агент;
                        * `paying_subagent` - Платежный субагент;
                        * `attorney` - Поверенный;
                        * `commission_agent` - Комиссионер;
                        * `another` - Прочие типы агентов.
                    enum:
                      - bank_paying_agent
                      - bank_paying_subagent
                      - paying_agent
                      - paying_subagent
                      - attorney
                      - commission_agent
                      - another
                    type: string
                    example: "comission_agent"
                  payingAgent:
                    description: Данные платежного агента. Передается если тип агента - банковский платежный (суб)агент или платежный (суб)агент.
                    type: object
                    properties:
                      operation:
                        description: __Тег ФФД 1044.__ Наименование операции банковского платежного (суб)агента.
                        type: string
                        maxLength: 24
                        pattern: ^[ -~А-Яа-яЁё№]*$
                      phones:
                        description: |
                          __Тег ФФД 1073.__ Номер телефона банковского платежного (суб)агента или платежного (суб)агента. Указывается в формате +{код страны}{номер телефона}. Пример заполнения: "phones": ["+74957444401","+79998887766"]
                        type: array
                        items:
                          type: string
                          minLength: 7
                          maxLength: 16
                          pattern: ^(\+?)\d{7,15}$
                        maxItems: 5
                        example: ["+712345667889","+72343462356"]
                    additionalProperties: false
                    example: {}
                  receivePaymentsOperator:
                    description: Данные оператора по приему платежей. Обязательно для платежного (суб)агента.
                    type: object
                    properties:
                      phones:
                        description: |
                          __Тег ФФД 1074.__ Номер телефона платежного (суб)агента. Указывается в формате +{код страны}{номер телефона}. Пример заполнения: "phones": ["+74957444401","+79998887766"]
                        type: array
                        items:
                          type: string
                          minLength: 7
                          maxLength: 16
                          pattern: ^(\+?)\d{7,15}$
                        maxItems: 5
                        example: ["+712345667889","+72343462356"]
                    additionalProperties: false
                    example: {}
                  moneyTransferOperator:
                    description: Данные оператора перевода. Обязательно для банковского платежного (суб)агента.
                    type: object
                    properties:
                      phones:
                        description: |
                          __Тег ФФД 1075.__ Номер телефона оператора по переводу средств. Указывается в формате +{код страны}{номер телефона}. Пример заполнения: "phones": ["+74957444401","+79998887766"]
                        type: array
                        items:
                          type: string
                          minLength: 7
                          maxLength: 16
                          pattern: ^(\+?)\d{7,15}$
                        maxItems: 5
                        example: ["+712345667889","+72343462356"]
                      name:
                        description: __Тег ФФД 1026.__ Наименование оператора перевода.
                        type: string
                        maxLength: 64
                        pattern: ^[ -~А-Яа-яЁё№]*$
                      address:
                        description: __Тег ФФД 1005.__ Местонахождение оператора перевода.
                        type: string
                        maxLength: 256
                        pattern: ^[ -~А-Яа-яЁё№]*$
                      inn:
                        description: __Тег ФФД 1016.__ ИНН оператора перевода. Если имеет рамер менее 12 цифр - дополняется пробелами справа.
                        type: string
                        maxLength: 12
                        minLength: 12
                        pattern: ^[0-9]
                    additionalProperties: false
                    example: {}
                additionalProperties: false
                example: {}
              supplierInfo:
                description: |
                  Блок, содержащий атрибуты поставщика на товарную позицию.
                  При использовании удостоверьтесь, что Ваша касса поддерживает передачу агентских признаков.
                  Обязателен к передаче, если передан agentInfo.
                type: object
                properties:
                  phones:
                    description: |
                      __Тег ФФД 1171.__ Телефоны поставщика. Указывается в формате +{код страны}{номер телефона}. Пример заполнения: "phones": ["+74957444401","+79998887766"]
                    type: array
                    items:
                      type: string
                      minLength: 7
                      maxLength: 16
                      pattern: ^(\+?)\d{7,15}$
                    maxItems: 5
                    example: ["+79997444401","+79998887766"]
                  name:
                    description: __Тег ФФД 1225.__ Наименование поставщика
                    type: string
                    maxLength: 64
                    pattern: ^[ -~А-Яа-яЁё№]*$
                  inn:
                    description: __Тег ФФД 1226.__ ИНН поставщика. Если имеет размер менее 12 цифр - дополняется пробелами справа.
                    type: string
                    maxLength: 12
                    minLength: 12
                    pattern: ^[0-9]
                additionalProperties: false
                example: {}
              sectoralItemProps:
                description: __Тег ФФД 1260.__ Отраслевой реквизит предмета расчета. Передается, если в предмете расчета содержится маркированный товар и включение указанного реквизита предусмотрено нормативными актами для этой товарной группы. Только для ФФД 1.2.
                type: array
                items:
                  type: object
                  required:
                    federalId
                    date
                    number
                    value
                  properties:
                    federalId:
                      $ref: '#/components/schemas/federalId'
                    date:
                      description: __Тег ФФД 1263.__ Дата нормативного акта, регламентирующего заполнение реквизита. Заполняется в формате ДД.ММ.ГГГГ
                      type: string
                      maxLength: 10
                      minLength: 10
                      format: date
                    number:
                      description: __Тег ФФД 1264.__ Номер нормативного акта, регламентирующего заполнение реквизита.
                      type: string
                      maxLength: 32
                      minLength: 1
                      pattern: ^[A-Za-z0-9]*$
                    value:
                      description: __Тег ФФД 1265.__ Значение отраслевого реквизита.
                      type: string
                      maxLength: 256
                      minLength: 1
                      pattern: ^[ -~А-Яа-яЁё№]*$
                  additionalProperties: false
                  example: {}
              userData:
                description: __Тег ФФД 1191.__ Дополнительный реквизит предмета расчета. Может включатся в чек с учетом особенностей сферы деятельности.
                type: string
                maxLength: 64
                minLength: 1
                pattern: ^[ -~А-Яа-яЁё№]*$

                #depositedItemAmount:
                #  description: |
                #    <span style="color:red;">Отсутствует в запросах, может присутствовать в ответах.</span>
                #
                #    Сумма стоимости всех товарных позиций одного positionId в деньгах в минимальных единицах валюты при завершении оплаты. Сумма всех товарных позиций Корзины должна быть равна сумме завершения оплаты
                #  type: integer
                #  maximum: 999999999999999
                #  minimum: 0
                #  example: 14900
                #itemDetails:
                #  description: Блок для передачи параметров дополнительного описания товарной позиции Корзины
                #  type: object
                #  properties:
                #    itemDetailsParams:
                #      description: Элемент массива с атрибутами описывающий дополнительное описание по товарной позиции Корзины
                #      type: array
                #      items:
                #        type: object
                #        required:
                #          - value
                #          - name
                #        properties:
                #          value:
                #            description: Значение атрибута дополнительного описания по товарной позиции
                #            type: string
                #            maxLength: 255
                #            minLength: 1
                #            pattern: ^[ -~А-Яа-яЁё№]*$
                #            example: Metzeler
                #          name:
                #            description: Наименование атрибута дополнительного описания товарной позиции
                #            type: string
                #            maxLength: 255
                #            minLength: 1
                #            pattern: ^[ -~А-Яа-яЁё№]*$
                #            example: Brand
                #        additinalProperties: false
                #  example: {}
                #  additinalProperties: false
                #itemAttributes:
                #  description: |
                #    Дополнительные параметры для передачи атрибутов товарной позиции
                #    name          |Обязательность|value
                #    --------------|--------------|------------------------------------------------------------------------------------------------------
                #    paymentMethod |да            |Тип платежа, возможны следующие значения: `1` = полная предварительная оплата до момента передачи предмета расчета; `2` = частичная предварительная оплата до момента передачи предмета расчета; `3` = аванс; `4` = полная оплата в момент передачи предмета расчёта; `5` = частичная оплата предмета расчёта в момент его передачи с последующей оплатой в кредит; |`6` = передача предмета расчёта без его оплаты в момент его передачи с последующей оплатой в кредит; `7` = оплата
                #    paymentObject |да            |Объект платежа, возможны следующие значения: `1` = товар; `2` = подакцизный товар; `3` = работа; `4` = услуга; `5` = ставка азартной игры; `6` = выигрыш азартной игры; `7` = лотерейный билет; `8` = выигрыш лотереи; `9` = предоставление РИД; `10` = платёж; `11` = агентское вознаграждение; `12` = составной предмет расчёта; `13` = иной предмет расчёта. `14` = имущественное право; `15` = внереализационный доход; `16` = страховые взносы `17` = торговый сбор: о суммах уплаченного торгового сбора; `18` = курортный сбор.
                #    nomenclature  |нет           |Код товарной позиции в текстовом представлении
                #    userData      |нет           |Значение реквизита Клиента для ФНС
                #  type: array
                #  example: []
                #  items:
                #    type: object
                #    properties:
                #      name:
                #        description: Наименование атрибута
                #        type: string
                #        maxLength: 255
                #        minLength: 1
                #        example: "paymentMethod"
                #      value:
                #        description: Значение атрибута
                #        type: string
                #        maxLength: 255
                #        minLength: 1
                #        example: "4"
                #    additinalProperties: false
            example: {}
            additinalProperties: false
    initialOrderId:
      name: initialOrderId
      description: Идентификатор заказа в ПШ сохранения реквизитов Плательщика. Передается в операциях, осуществляемых по ранее сохраненным реквизитам Плательщика
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[a-f0-9\-]+$
      example: a67b0ced-c9a4-4cfb-bce3-b9595afaafc1

    dataEntryModeAttributes:
      description: Атрибуты режима ввода карточных данных
      type: object
      properties:
        dataEntryMode:
          description: |
            Режим ввода платёжных данных в операции. В случае отсутствия воспринимается, как операция, инициированная Плательщиком без сохранения реквизитов.
              * `CAPTURED` = Операция инициирована Плательщиком; реквизиты сохраняются для последующих операций;
              * `DEFERRED` = Операция инициирована Плательщиком; реквизиты сохраняются для последующих операций, отложенная авторизация;
              * `CREDENTIAL-ON-FILE` = Операция инициирована Плательщиком с использованием ранее сохраненных реквизитов;
              * `RECURRING` = Операция инициирована Клиентом с использованием сохраненных реквизитов; периодический платёж по поручению Плательщика без графика;
              * `INSTALLMENT` = Операция инициирована Клиентом с использованием сохраненных реквизитов; периодический платёж по поручению Плательщика по графику;
              * `RESUBMISSION` = Операция инициирована Клиентом с использованием сохраненных реквизитов; повторная авторизация.
          type: string
          maxLength: 20
          minLength: 1
          pattern: ^[ -~]+$
          enum:
            - CAPTURED
            - DEFERRED
            - CREDENTIAL-ON-FILE
            - RECURRING
            - INSTALLMENT
            - RESUBMISSION
          example: CAPTURED
        initialOrderId:
          $ref: '#/components/schemas/initialOrderId'
      additionalProperties: false

    sberbankOnlineAttributes:
      description: Атрибуты для проведения платежей с использованием мобильного приложения "Сбербанк-Онлайн"
      type: object
      properties:
        app2app:
          description: |
            Признак, указывающий на способ оплаты через мобильное приложение "Сбербанк-Онлайн" в случае, если Плательщик использует мобильное приложение Клиента.
              * `true` = истина, передается в случае, если Плательщик будет перенаправлен в мобильное приложение "Сбербанк-Онлайн" из приложения Клиента;
              * `false` = ложь.
          type: boolean
        web2app:
          description: |
            Признак, указывающий на способ оплаты через мобильное приложение "Сбербанк-Онлайн" в случае, если Плательщик использует desktop версию сервиса Партнера.
              * `true` = истина, передается в случае:
                * Необходимости создания виджета Умных советов в МП СБОЛ;
                * Завершения сценария оплаты в МП СБОЛ.
              * `false` = ложь.
          type: boolean
        app.deepLink:
          description: Ссылка на мобильное приложение Клиента для возврата после оплаты в приложении "Сбербанк-Онлайн", обязательно если параметр app2app принимает значение "Истина"
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[ -~]*$
          example: sampleapp://samplepayment?orderId=orderIdValue
        sberpay.backurl:
          $ref: '#/components/schemas/sberpay.backurl'

    qrAttributes:
      description: Атрибуты для проведения платежей с использованием QR-кодов (СБП и Сбера)
      type: object
      required:
        - qrType
      properties:
        qrType:
          description: |
            Тип регистрируемого QR. Допустимые значения:
            * `DYNAMIC_QR_SBP` - динамический QR СБП
            * `SUBSCRIPTION_SBP` - подписка для оплаты по СБП
            * `SBERPAY_DYNAMIC_QR` - динамический Плати QR от Сбербанка
          type: string
          enum:
            - DYNAMIC_QR_SBP
            - SUBSCRIPTION_SBP
            - SBERPAY_DYNAMIC_QR
          example: SBERPAY_DYNAMIC_QR
        sbp.scenario:
          description: |
            Сценарий СБП. Допустимые значения:
            * `C2B` – Одноразовая Платежная ссылка СБП с фиксированной суммой
            * `C2B_CASH_REGISTER` – Кассовая Платежная ссылка СБП
            * `C2B_SUBSCRIPTION` - Информационная ссылка СБП для привязки счета Плательщика
            * `C2B_SUBSCRIPTION_WITH_PAYMENT` - Одноразовая Платежная ссылка СБП с одновременной привязкой счета Плательщика
          type: string
          enum:
            - C2B
            - C2B_CASH_REGISTER
            - C2B_SUBSCRIPTION
            - C2B_SUBSCRIPTION_WITH_PAYMENT
        sbp.subscriptionPurpose:
            description: Цель привязки счета (в свободной форме). Обязателен, если  __qrType__=SUBSCRIPTION_SBP либо __qrType__=DYNAMIC_QR_SBP и __sbp.scenario__=C2B_SUBSCRIPTION_WITH_PAYMENT.
            type: string
            maxLength: 256
            pattern: ^[ -~А-Яа-яЁё№]*$
        #sberpay.sbp.dyn:
        #  description: |
        #    Признак, указывающий на способ оплаты перевод C2B через СБП с помощью Одноразовой функциональной ссылки (Динамический QR).
        #      * `true` = истина, передается в случае, если Клиент хочет дать возможность для оплаты заказа через СБП (в таком случае отмена зарегистрированного заказа до начала процесса оплаты невозможна);
        #      * `false` = ложь.
        #  type: boolean
        sberpay.qr.c2b:
          description: |
            Признак, указывающий на способ оплаты с использованием Плати QR - Кодов от Сбербанка (Динамический QR).
              * `true` = истина, передается в случае, если Клиент хочет дать дать возможность для оплаты заказа через Плати QR;
              * `false` = ложь.
          type: boolean
        sberpay.sbp.cashLink:
          description: |
            <span style="color:red;">__Зарезервировано для дальнейшего использования__</span>

            Признак, указывающий на способ оплаты переводом C2B через СБП с помощью создания Кассовой ссылки (активированной или требующей активации отдельным методом).
              * `true` = истина, передается в случае, если Клиент хочет дать возможность для оплаты заказа через СБП (в таком случае отмена зарегистрированного заказа до начала процесса оплаты невозможна);
              * `false` = ложь.
          type: boolean

    paymentPageAttributes:
      description: Атрибуты для отображения ссылки возврата Плательщика с платёжной страницы ПШ в магазин при вводе реквизитов на стороне ПШ
      type: object
      properties:
        backToShopName:
          description: Название, которое нужно отобразить на стороне ПШ
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
        backToShopUrl:
          description: URL-адрес возврата, куда нужно вернуть Плательщика
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^https?:\/\/(.*)$

    tdsDestinationNumberAttributes:
      description: Реквизиты получателя денежных средств для 3-D Secure
      type: object
      properties:
        destWalletNum:
          description: |
            Номер (идентификатор) электронного кошелька получателя электронных денежных средств.

            <span style="color:red;">Обязательно, если MCC=6050 или 6051</span>
          type: string
          maxLength: 30
          minLength: 1
          pattern: ^[ -~]*$
          example: "0123456789"
        destPhoneNum:
          description: |
            Номер телефона абонента получателя денежных средств.

            <span style="color:red;">Обязательно, если MCC=4814</span>
          type: string
          maxLength: 30
          minLength: 1
          pattern: ^(\+?)\d{7,15}$
          example: "+79011234567"
        destCardNum:
          description: |
            Номер карты получателя перевода.

            <span style="color:red;">Обязательно при проведении операции перевода денежных средств на карту, кредитование, для MCC=6538</span>
          type: string
          maxLength: 19
          minLength: 13
          pattern: ^\d+$
          example: "2201382000000013"
        destAcctNum:
          description: |
            Конкатенированное значение БИК Банка (bik) получателя (044583999) и номер счета (bankAccount) получателя 40817810570000123456 для перевода

            <span style="color:red;">Обязательно при проведении операции перевода денежных средств на счет, кредитование, для MCC=6538</span>
          type: string
          maxLength: 29
          minLength: 1
          pattern: ^\d+$
          example: "04458399940817810570000123456"

    tdsDecoupledAttributes:
      description: Дополнительные прамтеры для поддержки сценария Decoupled аутентификации в 3-D Secure
      type: object
      properties:
        threeDSRequestorDecReqInd:
          description: |
            Признак поддержки сценария отложенной аутентификации. Допустимые значения:
            * `Y` = отложенная аутентификация поддерживается и предпочтительна
          type: string
          enum:
            - Y
          example: Y
        threeDSRequestorDecMaxTime:
          description: Максимальное время ожидания завершения аутентификации в сценарии decoupled (в минутах). Должно быть в интервале от 1 до 10080.
          type: string
          maxLength: 5
          minLength: 1
          pattern: ^\d+$
          example: "5"

    tdsBrowserAttributes:
      description: Прамтеры браузера для 3-D Secure для проведения 3-D Secure аутентификации на стороне ПШ
      type: object
      required:
        - browserAcceptHeader
        - browserIP
        - browserJavascriptEnabled
        - browserUserAgent
      properties:
        challengeWindowSize:
          description: |
            Разрешение страниц ACS, в случае проведения Challenge с Плательщиком по протоколу 3-D Secure на базе EMV 2.x.x
              * `01` = 250x400
              * `02` = 390x400 (по умолчанию)
              * `03` = 500x600
              * `04` = 600x400
              * `05` = Full screen
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
          example: "02"
        browserAcceptHeader:
          description: Содержимое HTTP accept headers браузера Плательщика. Обязательно для Browser-based операций
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[ -~]*$
          example: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
        browserIP:
          description: IP адрес Плательщика, полученный из HTTP заголовков браузера. Обязательно для Browser-based операций
          type: string
          maxLength: 45
          minLength: 1
          pattern: ^[ -~]*$
          example: 127.0.0.1
        browserJavaEnabled:
          description: Возможность браузера выполнять Java, значение свойства navigator.javaEnabled. Обязательно, если browserJavascriptEnabled = true
          type: boolean
          example: true
        browserJavascriptEnabled:
          description: Возможность браузера выполнять JavaScript. Обязательно для Browser-based операций.
          type: boolean
          example: true
        browserLanguage:
          description: Язык браузера согласно ETF BCP47, значение свойства navigator.language. Обязательно, если browserJavascriptEnabled = true
          type: string
          maxLength: 8
          minLength: 1
          pattern: ^[ -~]*$
          example: ru
        browserColorDepth:
          description: |
            Битовая глубина цветовой палитры экрана, значение свойства screen.colorDepth. Обязательно, если browserJavascriptEnabled = true
              * `1` = 1 bit
              * `4` = 4 bits
              * `8` = 8 bits
              * `15` = 15 bits
              * `16` = 16 bits
              * `24` = 24 bits
              * `32` = 32 bits
              * `48` = 48 bits
          enum:
            - 1
            - 4
            - 8
            - 15
            - 16
            - 24
            - 32
            - 48
          type: string
          example: "48"
        browserScreenHeight:
          description: Высота экрана в пикселях, значение свойства screen.height. Обязательно, если browserJavascriptEnabled = true
          type: string
          maxLength: 6
          minLength: 1
          pattern: ^\d+$
          example: "1440"
        browserScreenWidth:
          description: Ширина экрана в пикселях, значение свойства screen.width. Обязательно, если browserJavascriptEnabled = true
          type: string
          maxLength: 6
          minLength: 1
          pattern: ^\d+$
          example: "2560"
        browserTZ:
          description: Смещение в минутах между часовым поясом UTC и местным временем браузера. Обязательно, если browserJavascriptEnabled = true
          type: string
          maxLength: 5
          minLength: 1
          pattern: ^[ -~]*$
          example: "300"
        browserUserAgent:
          description: Содержимое заголовка HTTP user-agent. Обязательно для Browser-based операций
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[ -~]*$
          example: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0

    tdsAdditionalAttributes:
      description: Дополнительные параметры платежа для проведения 3-D Secure аутентификации на стороне ПШ
      type: object
      properties:
        billAddrCity:
          description: Город доставки счета
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
          example: Москва
        billAddrCountry:
          description: Цифровой код страны доставки счета согласно ISO 3166-1
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
          example: "643"
        billAddrLine1:
          description: Адрес доставки счета
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
          example: ул. Вавилова, д. 19
        billAddrLine2:
          description: Адрес доставки счета
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
        billAddrLine3:
          description: Адрес доставки счета
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
        billAddrPostCode:
          description: Почтовый индекс адреса доставки счета
          type: string
          maxLength: 16
          minLength: 1
          pattern: ^[ -~]*$
        billAddrState:
          description: Штат или провинция адреса доставки счета согласно ISO 3166-2
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^[ -~]*$
        shipAddrCity:
          description: Город доставки товара
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
          example: Москва
        shipAddrCountry:
          description: Цифровой код страны доставки товара согласно ISO 3166-1
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
          example: "643"
        shipAddrLine1:
          description: Адрес доставки товара
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
          example: ул. Вавилова, д. 19
        shipAddrLine2:
          description: Адрес доставки товара
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
        shipAddrLine3:
          description: Адрес доставки товара
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[ -~А-Яа-яЁё№]*$
        shipAddrPostCode:
          description: Почтовый индекс адреса доставки товара
          type: string
          maxLength: 16
          minLength: 1
          pattern: ^[ -~]*$
        shipAddrState:
          description: Штат или провинция адреса доставки товара согласно ISO 3166-2
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^[ -~]*$
        mobilePhone:
          description: Мобильный телефон в формате "код страны"-"номер телефона" (например, 7-4951234567) согласно ITU-E.164
          type: string
          maxLength: 19
          minLength: 1
          pattern: ^[\d\-]*$
          example: 7-4951234567
        workPhone:
          description: Рабочий телефон в формате "код страны"-"номер телефона" (например, 7-4951234567) согласно ITU-E.164
          type: string
          maxLength: 19
          minLength: 1
          pattern: ^[\d\-]*$
          example: 7-4951234567
        homePhone:
          description: Домашний телефон в формате "код страны"-"номер телефона" (например, 7-4951234567) согласно ITU-E.164
          type: string
          maxLength: 19
          minLength: 1
          pattern: ^[\d\-]*$
          example: 7-4951234567
        mriDeliveryEmailAddress:
          description: Для электронной доставки, электронный адрес доставки товара
          type: string
          maxLength: 254
          minLength: 1
          pattern: ^[ -~]*$
        mriDeliveryTimeframe:
          description: |
            Срок доставки товара:
            * `01` = Electronic Delivery;
            * `02` = Same day shipping;
            * `03` = Overnight shipping;
            * `04` = Two-day or more shipping.
          type: string
          maxLength: 2
          minLength: 1
          pattern: ^\d+$
          example: "01"
        mriGiftCardAmount:
          description: При покупке предоплаченной или подарочной карты, общий номинал карт в мажорных единицах валюты
          type: string
          maxLength: 2
          minLength: 1
          pattern: ^\d+$
        mriGiftCardCount:
          description: При покупке предоплаченной или подарочной карты, общее количество карт
          type: string
          maxLength: 2
          minLength: 1
          pattern: ^\d+$
        mriGiftCardCurr:
          description: При покупке предоплаченной или подарочной карты, цифровой код валюты карты согласно ISO-4217
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
        mriPreOrderDate:
          description: Дата поставки товара под заказ в формате YYYYMMDD для предварительного заказа
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        mriPreOrderPurchaseInd:
          description: |
            Индикатор заказа товаров не в наличии (под заказ):
              * `01` = Merchandise available;
              * `02` = Future availability.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        mriReorderItemsInd:
          description: |
            Индикатор повторной покупки в ТСП:
              * `01` = First time ordered;
              * `02` = Reordered.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        mriShipIndicator:
          description: |
            Способ доставки, выбранный для операции:
              * `01` = Ship to cardholder's billing address;
              * `02` = Ship to another verified address on file with merchant;
              * `03` = Ship to address that is different than the cardholder's billing address;
              * `04` = “Ship to Store” / Pick-up at local store (Store address shall be populated in shipping address fields);
              * `05` = Digital goods (includes online services, electronic gift cards and redemption codes);
              * `06` = Travel and Event tickets, not shipped;
              * `07` = Other (for example, Gaming, digital services not shipped, emedia subscriptions, etc.).
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        threeDSReqPriorAuthData:
          description: Данные первой аутентификации в цепочке, которая произошла до текущей операции (например, первой аутентификации для recurring платежа)
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[ -~]*$
        threeDSReqPriorAuthMethod:
          description: |
            Способ аутентификации Плательщика в первой операции в цепочке:
              * `01` = Frictionless authentication occurred by ACS;
              * `02` = Cardholder challenge occurred by ACS;
              * `03` = AVS verified;
              * `04` = Other issuer methods;
              * `05`–`79` = Reserved for EMVCo future use (values invalid until defined by EMVCo);
              * `80`–`99` = Reserved for DS use.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        threeDSReqPriorAuthTimestamp:
          description: Дата и время в UTC первой аутентификации в цепочке в формате YYYYMMDDHHMM
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        threeDSReqPriorRef:
          description: ACS Transaction ID первой аутентификации в цепочке запросов (например, первой аутентификации для recurring платежа)
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[ -~]*$
        acctId:
          description: Идентификатор аккаунта Плательщика в ТСП
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[ -~]*$
        chAccAgeInd:
          description: |
            Возраст аккаунта Плательщика в ТСП:
              * `01` = No account (guest check-out);
              * `02` = Created during this transaction;
              * `03` = Less than 30 days;
              * `04` = 30-60 days;
              * `05` = More than 60 days.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        chAccChange:
          description: Дата последнего редактирования аккаунта Плательщика в ТСП в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        chAccChangeInd:
          description: |
            Период времени с последнего редактирования аккаунта Плательщика в ТСП:
              * `01` = Changed during this transaction;
              * `02` = Less than 30 days;
              * `03` = 30-60 days;
              * `04` = More than 60 days.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        chAccDate:
          description: Дата создания аккаунта Плательщика в ТСП в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        chAccPwChange:
          description: Дата последнего изменения пароля или сброса аккаунта Плательщика в ТСП в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        chAccPwChangeInd:
          description: |
            Период времени с последнего изменения пароля или сброса аккаунта Плательщика в ТСП:
              * `01` = No change;
              * `02` = Changed during this transaction;
              * `03` = Less than 30 days;
              * `04` = 30-60 days;
              * `05` = More than 60 days.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        nbPurchaseAccount:
          description: Количество покупок, совершенных с аккаунта Плательщика за последние 6 месяцев
          type: string
          maxLength: 4
          minLength: 1
          pattern: ^\d+$
        provisionAttemptsDay:
          description: Количество попыток добавления карты за последние 24 часа
          type: string
          maxLength: 4
          minLength: 1
          pattern: ^\d+$
        txnActivityDay:
          description: Количество операций (успешных и незавершенных), совершенных с аккаунта Плательщика за последние 24 часа всеми платёжными средствами
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
        txnActivityYear:
          description: Количество операций (успешных и незавершенных), совершенных с аккаунта Плательщика за последний год всеми платёжными средствами
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
        paymentAccAge:
          description: Дата добавления платёжного метода в аккаунте Плательщика в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        paymentAccInd:
          description: |
            Период времени с момента добавления платёжного метода в аккаунт Плательщика:
              * `01` = No account (guest check-out);
              * `02` = During this transaction;
              * `03` = Less than 30 days;
              * `04` = 30-60 days;
              * `05` = More than 60 days.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        shipAddressUsage:
          description: Дата первого использования адреса доставки для аккаунта Плательщика в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        shipAddressUsageInd:
          description: |
            Период времени с момента первого использования адреса доставки для аккаунта Плательщика:
              * `01` = This transaction;
              * `02` = Less than 30 days;
              * `03` = 30-60 days;
              * `04` = More than 60 days.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        shipNameIndicator:
          description: |
            Признак соответствия имени в аккаунте Плательщика и имени получателя заказа:
              * `01` = Account Name identical to shipping Name;
              * `02` = Account Name different than shipping Name.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        suspiciousAccActivity:
          description: |
            Признак наличия случаев подозрительной активности (включая предыдущие случаи мошенничества) для аккаунта Плательщика:
              * `01` = No suspicious activity has been observed;
              * `02` = Suspicious activity has been observed.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        threeDSReqAuthData:
          description: Данные аутентификации Плательщика в ТСП
          type: string
          maxLength: 20000
          minLength: 2
          pattern: ^[ -~]*$
        threeDSReqAuthMethod:
          description: |
            Способ аутентификации Плательщика в ТСП:
              * `01` = No 3DS Requestor authentication occurred (i.e. cardholder “logged in” as guest);
              * `02` = Login to the cardholder account at the 3DS Requestor system using 3DS Requestor's own credentials;
              * `03` = Login to the cardholder account at the 3DS Requestor system using federated ID;
              * `04` = Login to the cardholder account at the 3DS Requestor system using issuer credentials;
              * `05` = Login to the cardholder account at the 3DS Requestor system using third-party authentication;
              * `06` = Login to the cardholder account at the 3DS Requestor system using FIDO Authenticator;
              * `07` = Login to the cardholder account at the 3DS Requestor system using FIDO Authenticator;
              * `08` = SRC Assurance Data;
              * `09`–`79` = Reserved for EMVCo future use (values invalid until defined by EMVCo);
              * `80`–`99` = Reserved for DS use.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        threeDSReqAuthTimestamp:
          description: Дата и время в UTC аутентификации Плательщика в ТСП в формате YYYYMMDDHHMM
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        acctType:
          description: |
            Тип счета карты Плательщика:
              * `01` = Not Applicable;
              * `02` = Credit;
              * `03` = Debit;
              * `04`–`79` = Reserved for EMVCo future use (values invalid until defined by EMVCo);
              * `80`–`99` = DS or Payment System-specific.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        transType:
          description: |
            Тип операции:
              * `01` = Goods/ Service Purchase;
              * `03` = Check Acceptance;
              * `10` = Account Funding;
              * `11` = Quasi-Cash Transaction;
              * `28` = Prepaid Activation and Load.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        addrMatch:
          description: |
            Признак соответствия адреса доставки товара и адреса доставки счета:
              * `Y` = Shipping Address matches Billing Address;
              * `N` = Shipping Address does not match Billing Address.
          type: string
          maxLength: 1
          minLength: 1
          pattern: ^[A-Za-z]*$
        threeDSRequestorChallengeInd:
          description: |
            Признак необходимости проведения Challenge c Плательщиком:
              * `01` = No preference;
              * `02` = No challenge requested;
              * `03` = Challenge requested 3DS Requestor Preference;
              * `04` = Challenge requested Mandate;
              * `05`–`79` = Reserved for EMVCo future use (values invalid until defined by EMVCo);
              * `80`-`99` = Reserved for DS use.
          type: string
          maxLength: 2
          minLength: 2
          pattern: ^\d+$
        purchaseInstalData:
          description: Максимальное количество авторизаций для Installment платежей
          type: string
          maxLength: 3
          minLength: 1
          pattern: ^\d+$
        recurringExpiry:
          description: Дата последнего рекуррентного платежа в формате YYYYMMDD
          type: string
          maxLength: 8
          minLength: 8
          pattern: ^\d+$
        recurringFrequency:
          description: Минимальное количество дней между рекуррентными платежами
          type: string
          maxLength: 4
          minLength: 1
          pattern: ^\d+$

    fmConversionAttributes:
      description: Параметры для передачи во фродмониторинг для повышения конверсии и снижение фрода. Пересекаются с блоком tdsAdditionalAttributes при работе с доп. полями 3DS, заполнение параметров при работе с карточным трафиком повышает вероятность frictionless flow сценариев по картам любых Банков (если применимо).
      type: object
      properties:
        hasValuableItems:
            description: |
             Маркер наличия высоколиквидной электроники в заказе:
              * `00` = Не содержит высоколиквидной электроники;
              * `01` = Содержит высоколиквидную электронику;
            type: string
            maxLength: 2
            minLength: 2
            pattern: ^\d+$
        acctId:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/acctId'
        chAccDate:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccDate'
        chAccAgeInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccAgeInd'
        chAccChangeInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccChangeInd'
        shipAddrCity:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddrCity'
        shipDeliveryPointId:
            description: Идентификатор ПВЗ доставки товара
            type: string
            maxLength: 50
            minLength: 1
            pattern: ^[ -~А-Яа-яЁё№]*$
            example: fFHgys847-sAHm4736t
        mriReorderItemsInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/mriReorderItemsInd'
        mobilePhone:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/mobilePhone'
        shipNameIndicator:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipNameIndicator'
        suspiciousAccActivity:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/suspiciousAccActivity'
        provisionAttemptsDay:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/provisionAttemptsDay'
        shipAddrLine1:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddrLine1'
        shipAddrLine2:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddrLine2'
        shipAddrLine3:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddrLine3'
        shipAddressUsage:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddressUsage'
        shipAddressUsageInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/shipAddressUsageInd'
        mriDeliveryTimeframe:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/mriDeliveryTimeframe'
        mriShipIndicator:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/mriShipIndicator'
        chAccPwChange:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccPwChange'
        chAccPwChangeInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccPwChangeInd'
        nbPurchaseAccount:
           $ref: '#/components/schemas/tdsAdditionalAttributes/properties/nbPurchaseAccount'
        txnActivityDay:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/txnActivityDay'
        txnActivityYear:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/txnActivityYear'
        paymentAccAge:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/paymentAccAge'
        paymentAccInd:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/paymentAccInd'
        chAccChange:
          $ref: '#/components/schemas/tdsAdditionalAttributes/properties/chAccChange'

    tdsApplicationAttributes:
      description: Параметры 3DS SDK для проведения 3-D Secure аутентификации на стороне ПШ
      type: object
      required:
        - deviceCategory
        - sdkAppID
        - sdkReferenceNumber
        - sdkTransID
        - sdkEncData
        - sdkEphemPubKey
      properties:
        deviceCategory:
          type: string
          description: |
            Категория устройства, в котором инициирована аутентификация 3-D Secure. Допустимые значения:
              * `0` (BRW) = аутентификация инициирована в браузере Плательщика (по умолчанию);
              * `1` (APP) = аутентификация инициирована в мобильном приложении Плательщика;
              * `2` (3RI) = аутентификация инициирована сервером ТСТ.
          maxLength: 1
          minLength: 1
          pattern: ^[ -~]*$
          example: "1"
        sdkAppID:
          description: Идентификатор в формате uuid, создаваемый при каждой установке приложения ТСТ и хранимый в 3DS SDK. Обязательно для deviceCategory = 1
          type: string
          maxLength: 36
          minLength: 1
          pattern: ^[ -~]*$
          example: dbd64fcb-c19a-4728-8849-e3d50bfdde39
        sdkReferenceNumber:
          description: Идентификатор вендора и версии 3DS SDK, присвоенный EMVCo. Обязательно для deviceCategory = 1
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^[ -~]*$
          example: 3DS_LOA_SDK_PPFU_020100_00007
        sdkTransID:
          description: Идентификатор в формате uuid, присваиваемый 3DS SDK для каждого запроса аутентификации. Обязательно для deviceCategory = 1
          type: string
          maxLength: 36
          minLength: 1
          pattern: ^[ -~]*$
          example: b2385523-a66c-4907-ac3c-91848e8c0067
        sdkMaxTimeout:
          description: Максимальное время в минутах для проведения аутентификации (должно быть не меньше 5). По умолчанию присваивается значение 5
          type: string
          maxLength: 2
          minLength: 1
          pattern: ^[ -~]*$
          example: "5"
        sdkEncData:
          description: Информация об устройстве Плательщика. Обязательно для deviceCategory = 1
          type: string
          maxLength: 64000
          minLength: 1
          pattern: ^[ -~]*$
          example: "eyJlbmMiOiJBMT ... ZkkA.4eUVBCy-xDGm3njvQJb_Mw"
        sdkEphemPubKey:
          description: Сессионный публичный ключ, генерируемый 3DS SDK для каждого запроса аутентификации, передаваемый в кодировке base64. Обязательно для deviceCategory = 1
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ -~]*$
          example: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IldXY3BUamJPcWl1XzFhT0RsbHc1cllUcTVvTFhFX1QwaHVDUGpNSVJia0kiLCJ5IjoiV3pfN2FuSWVhZFY4U0paVWZyNGRyd2p6dVdvVWJPc0hwNUdkUlpCQUFpdyJ9"
        deviceRenderOptions:
          description: Объект с типами UI, поддерживаемыми 3DS SDK и приложением ТСТ, передаваемый в кодировке base64. По умолчанию поддерживаются все возможные типы UI
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ -~]*$
          example: "eyJkZXZpY2VSZW5kZXJPcHRpb25zIjp7InNka0ludGVyZmFjZSI6IjAzIiwic2RrVWlUeXBlIjpbIjAxIiwiMDIiLCIwMyIsIjA0IiwiMDUiXX19"

    tdsExternalAttributes:
      description: Результат внешней 3-D Secure аутентификации
      type: object
      required:
        - eci
      properties:
        eci:
          description: |
            Индикатор электронной коммерции, при проведении платежа
              VISA     | Mastercard | МИР      | Описание
              ---------|------------|----------|--------------------------
              7 или 07 | 0 или 00   | 3 или 03 | Не проводилась или ошибка
              6 или 06 | 1 или 01   | 1 или 01 | Попытка проведения
              5 или 05 | 2 или 02   | 2 или 02 | Успешно проводилась
          type: string
          maxLength: 2
          minLength: 1
          pattern: ^\d+$
          example: "03"
        xid:
          $ref: '#/components/schemas/xid'
        cavv:
          $ref: '#/components/schemas/cavv'
        idTerm:
          description: Идентификатор терминала под которым проводилась операция
          type: string
          maxLength: 8
          minLength: 1
          pattern: ^\d+$
        paymentSystem:
          description: Наименование платёжной системы, через которую проводилась аутентификация 3-D Secure
          type: string
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - JCB
            - CUP
            - MIR
          maxLength: 10
          minLength: 1
          pattern: ^[A-Za-z]*$
          example: MIR

    loyaltyAttributes:
      description: Атрибуты программы лояльности Спасибо
      type: object
      properties:
        sbrf_spasibo:amount_bonus:
          description: |
            Сумма боунсов Спасибо к списанию в минимальных единицах (бонусных копейках).

            <span style="color:red;">Заказ не может быть целиком оплачен бонусами</span>
          type: integer
          maximum: 4294967200
          minimum: 0
          example: 7700

    keyValue:
      description: Дополнительные параметры
      type: object
      properties:
        name1:
          description: Дополнительный параметр 1
          example: value1
        name2:
          description: Дополнительный параметр 2
          example: value2

    externalRefundId:
      type: object
      properties:
        externalRefundId:
          description: |
            Ключ идемпотентности возврата, присвоенный Клиентом. Учитывается в рамках одного заказа (orderId) и не имеет временных ограничений.
            При отправке повторного запроса с теми же данными и тем же ключом идемпотентности, ПШ обрабатывает запрос как повторный (с дублированием ответа на первоначальный запрос).
            Если в повторном запросе ключ идемпотентности тот же, а данные (хэш) запроса отличаются, то ПШ возвращает ошибку.
            При отправке запроса с уникальным ключом идемпотентности (либо при его отсутствии), ПШ обрабатывает запрос как новый.
          type: string
          maxLength: 36
          minLength: 1
          example: eccbf087-f159-4d69-b31d-00bec75c0474

    receiptId:
      name: receiptId
      description: Идентификатор чека, присвоенный кассовым сервисом (uuid)
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[a-f0-9\-]+$
      example: 822c6862-634c-11ee-8c99-0242ac120002

    receiptStatus:
      name: receiptStatus
      description: |
        Статус чека
        * `0` - не определен;
        * `1` - ожидается отправка или переотправка чека
        * `2` - чек отправлен, ожидание результата обработки
        * `3` - чек обработан успешно
        * `4` - ошибка обработки чека
        * `5` - ошибка отправки чека (исчерпаны попытки отправки)
        * `6` - некорректные данные для отправки чека
      type: integer
      minimum: 0
      maximum: 6
      example: 3

    message:
      name: message
      description: Расшифровка кода ответа при обращении к сервису
      type: string
      maxLength: 256
      minLength: 0
      pattern: ^[ -~А-Яа-яЁё№]*$
      example: Успешно

    operationId:
      name: operationId
      description: Идентификатор операции
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[a-f0-9\-]+$
      example: 0c971cda-6362-11ee-8c99-0242ac120002

    receiptType:
      name: receiptType
      description: 	|
        Тип чека:
        * `SELL` - Приход
        * `SELL_REFUND` - Возврат прихода
      type: string
      maxLength: 30
      pattern: ^[ -~]*$
      example: SELL

    receipts:
      name: receipts
      description: Массив объектов, содержащий информацию по чекам в рамках заказа.
      type: array
      items:
        type: object
        properties:
          receiptId:
            $ref: '#/components/schemas/receiptId'
          operationId:
            $ref: '#/components/schemas/operationId'
          operationType:
            $ref: '#/components/schemas/operationType'
          receiptType:
            $ref: '#/components/schemas/receiptType'
          receiptStatus:
            $ref: '#/components/schemas/receiptStatus'
          origReceiptId:
            description: receiptId оригинального чека. Заполняется, если регистрация чека потребовала несколько попыток переотправки или были использованы сервисы `retryReceipt` или `doReceipt` (с указанием receiptId)
            type: string
            minLength: 36
            maxLength: 36
            pattern: ^[a-f0-9\-]+$
            example: 822c6862-634c-11ee-8c99-0242ac120002
          error:
            type: object
            description: Блок информации об ошибке (если ошибки нет, то передается NULL)
            properties:
              errorId:
                description: Уникальный идентификатор ошибки
                type: string
                maxLength: 36
                pattern: ^[ -~А-Яа-яЁё№]*$
              code:
                description: Код ошибки. Отображается только при ошибке
                type: integer
                minimum: 0
                maximum: 99999
              text:
                description: Текст ошибки (кодировка utf–8)
                type: string
                maxLength: 1000
                pattern: ^[ -~А-Яа-яЁё№]*$
              type:
                description: Тип источника ошибки в кассовом сервисе
                type: string
                maxLength: 7
                pattern: ^[ -~А-Яа-яЁё№]*$
              recommendation:
                description: |
                  Рекомендация по исправлению:
                  * `1` - Попытки отправки чека исчерпаны, возможна повторная отправка через сервис retryReceipt.
                  * `2` - Повторная отправка возможна только после корректировки чека. Используйте сервис doReceipt.
                  * `3` - Повторная отправка в существующем формате возможна только после устранения проблемы в работе ККТ. После устранения проблемы используйте сервисы retryReceipt или doReceipt.
                type: number
                minimum: 1
                maximum: 3
            example: {}
          payload:
            type: object
            description: Реквизиты фискального чека
            properties:
              fiscalReceiptNumber:
                description: Номер чека в смене
                type: integer
                minimum: 0
                maximum: 250000
              shiftNumber:
                description: Номер чека в смене
                type: integer
                minimum: 0
                maximum: 9999999999
              receiptDatetime:
                description: Дата и время фискального чека в формате «dd.mm.yyyy HH:MM:SS»
                type: string
                maxLength: 30
                pattern: ^[ -~]*$
              total:
                description: Итоговая сумма документа в рублях
                type: number
              fnNumber:
                description: Номер ФН (фискального накопителя)
                type: string
                maxLength: 255
                pattern: ^[ -~]*$
              ecrRegistrationNumber:
                description: Регистрационный номер ККТ
                type: string
                maxLength: 255
                pattern: ^[ -~]*$
              fiscalDocumentNumber:
                description: Фискальный номер документа
                type: integer
                minimum: 0
                maximum: 99999999
              fiscalDocumentAttribute:
                description: Фискальный признак документа
                type: integer
                minimum: 0
                maximum: 4294967295
              fnsSite:
                description: Адрес сайта ФНС
                type: string
                maxLength: 1024
                pattern: ^[ -~]*$
              ofdInn:
                description: ИНН ОФД
                type: string
                maxLength: 20
                pattern: ^[ -~]*$
              ofdReceiptUrl:
                description: URL для просмотра чека на сайте ОФД. Отражается не для всех ОФД
                type: string
                maxLength: 2048
                pattern: ^[ -~]*$
              marksResult:
                description: Информации о проверке кодов маркировки. Объект не выводится, если в чек не передавался код маркировки. Только для сервиса АТОЛ Онлайн и ФФД 1.2.
                type: array
                items:
                  type: object
                  properties:
                    position:
                      description: Номер позиции в исходном чеке, для которого был указан код маркировки, начиная с 0.
                      type: integer
                      minimum: 0
                      maximum: 200
                    markCode:
                      description: Код маркировки, переданный в чеке.
                      type: string
                      minLength: 0
                      maxLength: 200
                      pattern: ^[ -~А-Яа-яЁё№]*$
                    result:
                      description: |
                        Значение результата проверки сведений о коде маркировки в данной позиции в Честном Знаке. Проверка пройдена при значении “15”

                        result | Статус КМ | Значение тега 2106 по ФФД 1.2 | Описание результата проверки КМ                                                                                                  | В каком случае получается
                        -------|-----------|-------------------------------|----------------------------------------------------------------------------------------------------------------------------------|------------------------------------------
                        0      | M         |0                              | Проверка КП КМ не выполнена, статус товара оператором информационных систем маркировки (далее – ОИСМ) не проверен                | Если передан ismOptional и Честный Знак недоступен 
                        16     | M         |10000                          | Проверка КП КМ не выполнена, статус товара ОИСМ не проверен (ККТ функционирует в автономном режиме)                              | Вероятно, касса зарегистрирована в автономном режиме. 
                        19     | M         |10011                          | Проверка КП КМ выполнена в ФН с положительным результатом, статус товара ОИСМ не проверен (ККТ функционирует в автономном режиме)| Вероятно, касса зарегистрирована в автономном режиме. 
                        17     | M-        |10001                          | Проверка КП КМ выполнена в ФН с отрицательным результатом, статус товара ОИСМ не проверен (ККТ функционирует в автономном режиме)| Вероятно, касса зарегистрирована в автономном режиме. 
                        5      | M-        |101                            | Проверка КП КМ выполнена с отрицательным результатом, статус товара у ОИСМ некорректен                                           | В ФН код проверки КМ оказался некорректным и затем в Честном Знаке КМ тоже оказался некорректным.
                        7      | M-        |111                            | Проверка КП КМ выполнена с положительным результатом, статус товара у ОИСМ некорректен                                           | В ФН код проверки КМ оказался корректным, а в Честном Знаке КМ оказался некорректным.
                        15     | M+        |1111                           | Проверка КП КМ выполнена с положительным результатом, статус товара у ОИСМ корректен                                             | Все проверки КМ прошли успешно
                      type: string
                      pattern: ^\d+$
                      minLength: 0
                      maxLength: 19
                  additinalProperties: false
          timestamp:
            description: Дата и время получения ответа от кассового сервиса в формате «dd.mm.yyyy HH:MM:SS»
            type: string
          groupCode:
            description: Идентификатор группы ККТ
            type: string
            maxLength: 64
            pattern: ^[ -~]*$
          daemonCode:
            description: Наименование сервера кассового сервиса
            type: string
            maxLength: 255
            pattern: ^[ -~]*$
          deviceCode:
            description: Код ККТ в кассовом сервисе
            type: string
            maxLength: 255
            pattern: ^[ -~]*$
        additinalProperties: false
      example: []

    result:
      type: string
      description: |
        Результат обработки чека:
        * `Успешно`
        * `Чек не найден`
        * `Чек уже изменен ранее`
        * `Чек уже зарегистрирован ранее`
        * `Ожидается статус регистрации в кассовом сервисе. Чек не может быть отправлен.`
      maxLength: 128
      pattern: ^[ -~]*$
      example: Успешно

    loyaltyName:
      description: Код бонусной программы внутри системы
      type: string
      maxLength: 64
      pattern: ^[ -~]*$
      example: sbrf_spasibo

    loyaltyOperations:
      name: loyaltyOperations
      description: Массив объектов с информацией о доступных программах лояльности и возможного количества бонусных баллов к списанию
      type: array
      items:
        type: object
        properties:
          bonusBalance:
            description: Бонусный баланс Плательщика в минимальных единицах (в бонусных копейках)
            type: integer
            maximum: 999999999999
            minimum: 0
            example: 77700
          serviceName:
            $ref: '#/components/schemas/loyaltyName'
        additinalProperties: false

    registerRequest:
      type: object
      required:
        - userName
        - password
        - orderNumber
        - amount
        - returnUrl
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        returnUrl:
          $ref: '#/components/schemas/returnUrl'
        failUrl:
          $ref: '#/components/schemas/failUrl'
        description:
          $ref: '#/components/schemas/description'
        language:
          $ref: '#/components/schemas/language'
        clientId:
          $ref: '#/components/schemas/clientId'
        merchantLogin:
          $ref: '#/components/schemas/merchantLogin'
        jsonParams:
          name: jsonParams
          description: |
            Блок для передачи дополнительных параметров Клиентом.
            В случае, если значения параметров предполагают содержание персональных данных физического лица, необходимо получение согласия на обработку персональных данных. Уведомление Платежного шлюза о наличии такого согласия осуществляется передачей параметра pdAgreement со значением true в блоке jsonParams
          type: object
          maxProperties: 99
          additinalProperties: false
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/sberbankOnlineAttributes'
            - $ref: '#/components/schemas/qrAttributes'
            - $ref: '#/components/schemas/paymentPageAttributes'
            - $ref: '#/components/schemas/tdsDestinationNumberAttributes'
            - $ref: '#/components/schemas/tdsAdditionalAttributes'
            - $ref: '#/components/schemas/keyValue'
        sessionTimeoutSecs:
          $ref: '#/components/schemas/sessionTimeoutSecs'
        expirationDate:
          $ref: '#/components/schemas/expirationDate'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        features:
          $ref: '#/components/schemas/features'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
        #taxSystem:
        #  $ref: '#/components/schemas/taxSystem'
        #additionalOfdParams:
        #  $ref: '#/components/schemas/additionalOfdParams'
      additionalProperties: false


    registerPreAuthRequest:
      type: object
      required:
        - userName
        - password
        - orderNumber
        - amount
        - returnUrl
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        returnUrl:
          $ref: '#/components/schemas/returnUrl'
        failUrl:
          $ref: '#/components/schemas/failUrl'
        description:
          $ref: '#/components/schemas/description'
        language:
          $ref: '#/components/schemas/language'
        clientId:
          $ref: '#/components/schemas/clientId'
        merchantLogin:
          $ref: '#/components/schemas/merchantLogin'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом
          type: object
          maxProperties: 99
          additinalProperties: false
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/sberbankOnlineAttributes'
            - $ref: '#/components/schemas/qrAttributes'
            - $ref: '#/components/schemas/paymentPageAttributes'
            - $ref: '#/components/schemas/tdsDestinationNumberAttributes'
            - $ref: '#/components/schemas/tdsAdditionalAttributes'
            - $ref: '#/components/schemas/keyValue'
        sessionTimeoutSecs:
          $ref: '#/components/schemas/sessionTimeoutSecs'
        expirationDate:
          $ref: '#/components/schemas/expirationDate'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        features:
          $ref: '#/components/schemas/features'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
        autocompletionDate:
          $ref: '#/components/schemas/autocompletionDate'
      additionalProperties: false

    registerResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        orderId:
          $ref: '#/components/schemas/orderId'
        formUrl:
          $ref: '#/components/schemas/formUrl'
        externalParams:
          $ref: '#/components/schemas/externalParams'
      additionalProperties: false

    depositRequest:
      type: object
      required:
        - userName
        - password
        - orderId
        - amount
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/amount'
        language:
          $ref: '#/components/schemas/language'
        #depositItems:
        #  $ref: '#/components/schemas/cartItems'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    depositResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    generateApikeyRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        description:
          name: description
          description: Краткое обоснование создания api-key
          type: string
          minLength: 0
          maxLength: 1000
          pattern: ^[ -~А-Яа-яЁёA-Za-z0-9-_]*$
          example: ''
        merchantLogin:
          $ref: '#/components/schemas/merchantLogin'
      additionalProperties: false

    generateApikeyResponse:
      type: object
      properties:
        id:
          name: id
          description: Идентификатор клиента, зарегистрированный в ПШ
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^[a-f0-9\-]+$
          example: 2f852119-0rhfdd-сe7a-b421-22be01a44311
        apiKey:
          name: apiKey
          description: Ключ клиента для работы с сервисами платежного шлюза через SDK
          type: string
          maxLength: 512
          minLength: 512
          pattern: ^[ -~]*$
          example: AC+FIRkBJk56sCFSvgGkQzMAAAAAAbqrr3ybcZc/7i33plZ0IWbgQ/MaADTsnGBy+TsRUImIs0EaJyQe1ObbTLgsbOQ63TWysFwWduamtmO
        message:
          name: message
          description: Расшифровка ответа
          type: string
          minLength: 3
          maxLength: 256
          pattern: ^[ -~А-Яа-яЁёA-Za-z0-9-_]*$
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    setPermanentPasswordRequest:
      type: object
      required:
        - login
        - tmpPassword
      properties:
        login:
          name: login
          description: Логин Клиента, полученный при подключении к ПШ
          type: string
          maxLength: 30
          minLength: 1
          pattern: ^[A-Za-z0-9-_ ]+$
          example: testUserName
        tmpPassword:
          name: tmpPassword
          description: Пароль Клиента, полученный при подключении к ПШ
          type: string
          maxLength: 30
          minLength: 1
          pattern: ^[ -~]+$
          example: testPassword
        password:
          name: password
          description: |
            Постоянный пароль для Клиента.
            Если не передавать, то пароль будет сгенерирован автоматически.
            Требования к паролю:
            1 цифра, 1 заглавная латинская буква, минимальная длина 18 символов
          type: string
          minLength: 18
          maxLength: 30
          pattern: ^[ -~]+$
          example: 1QehGauqqdh6eGO0t3
         # $ref: '#/components/schemas/password'
      additionalProperties: false

    setPermanentPasswordResponse:
      type: object
      properties:
        login:
          name: login
          description: Логин клиента, полученный при подключении к ПШ
          type: string
          minLength: 1
          maxLength: 30
          pattern: ^[A-Za-z0-9-_]+$
          example: testUserName
        password:
          $ref: '#/components/schemas/password'
        errorCode:
          $ref: '#/components/schemas/errorCode'
        description:
          name: description
          description: Описание ошибки
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[ -~А-Яа-яЁёA-Za-z0-9-_]*$
      additionalProperties: false

    reverseRequest:
      type: object
      required:
        - userName
        - password
        - orderId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/amount'
        language:
          $ref: '#/components/schemas/language'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/keyValue'
        #reverseItems:
        #  $ref: '#/components/schemas/cartItems'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    reverseResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    refundRequest:
      type: object
      required:
        - userName
        - password
        - orderId
        - amount
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/amount'
        language:
          $ref: '#/components/schemas/language'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/externalRefundId'
            - $ref: '#/components/schemas/keyValue'
        #refundItems:
        #  $ref: '#/components/schemas/cartItems'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    refundResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    getOrderStatusExtendedRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        language:
          $ref: '#/components/schemas/language'
      oneOf:
        - properties:
            orderId:
              $ref: '#/components/schemas/orderId'
          required: [orderId]
          additionalProperties: false
        - properties:
            orderNumber:
              $ref: '#/components/schemas/orderNumber'
          required: [orderNumber]
          additionalProperties: false

    getOrderStatusExtendedResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        merchantOrderParams:
          $ref: '#/components/schemas/merchantOrderParams'
        cardAuthInfo:
          $ref: '#/components/schemas/cardAuthInfo'
        bindingInfo:
          $ref: '#/components/schemas/bindingInfo'
        paymentAmountInfo:
          $ref: '#/components/schemas/paymentAmountInfo'
        bankInfo:
          $ref: '#/components/schemas/bankInfo'
        payerData:
          $ref: '#/components/schemas/payerData'
        transactionAttributes:
          $ref: '#/components/schemas/transactionAttributes'
        attributes:
          anyOf:
            - $ref: '#/components/schemas/attributes'
            - $ref: '#/components/schemas/SBPSubscriptionResponse'
        operations:
          $ref: '#/components/schemas/operations'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        orderStatus:
          $ref: '#/components/schemas/orderStatus'
        actionCode:
          $ref: '#/components/schemas/actionCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        actionCodeDescription:
          $ref: '#/components/schemas/actionCodeDescription'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        date:
          $ref: '#/components/schemas/date'
        depositedDate:
           $ref: '#/components/schemas/depositedDate'
        orderDescription:
          $ref: '#/components/schemas/description'
        ip:
          $ref: '#/components/schemas/ip'
        authRefNum:
          $ref: '#/components/schemas/authRefNum'
        refundedDate:
          $ref: '#/components/schemas/refundedDate'
        authDateTime:
          $ref: '#/components/schemas/authDateTime'
        terminalId:
          $ref: '#/components/schemas/terminalId'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
        loyaltyInfo:
          $ref: '#/components/schemas/loyaltyInfo'
      additionalProperties: false

    declineRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        merchantLogin:
          $ref: '#/components/schemas/merchantLogin'
        orderId:
          $ref: '#/components/schemas/orderId'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        language:
          $ref: '#/components/schemas/language'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/keyValue'
      additionalProperties: false

    declineResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        info:
          $ref: '#/components/schemas/info'
      additionalProperties: false

    paymentOrderRequest:
      type: object
      required:
        - userName
        - password
        - MDORDER
        - $PAN
        - YYYY
        - MM
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        MDORDER:
          $ref: '#/components/schemas/orderId'
        $PAN:
          $ref: '#/components/schemas/pan'
        $CVC:
          $ref: '#/components/schemas/cvc'
        YYYY:
          $ref: '#/components/schemas/expiryYear'
        MM:
          $ref: '#/components/schemas/expiryMonth'
        TEXT:
          $ref: '#/components/schemas/cardholderName'
        language:
          $ref: '#/components/schemas/language'
        ip:
          $ref: '#/components/schemas/ip'
        email:
          $ref: '#/components/schemas/email'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/dataEntryModeAttributes'
            - $ref: '#/components/schemas/tdsDestinationNumberAttributes'
            - $ref: '#/components/schemas/tdsDecoupledAttributes'
            - $ref: '#/components/schemas/tdsBrowserAttributes'
            - $ref: '#/components/schemas/tdsAdditionalAttributes'
            - $ref: '#/components/schemas/tdsApplicationAttributes'
            - $ref: '#/components/schemas/tdsExternalAttributes'
            - $ref: '#/components/schemas/keyValue'
        threeDSMethodNotificationUrl:
          $ref: '#/components/schemas/threeDSMethodNotificationUrl'
        termUrl:
          $ref: '#/components/schemas/termUrl'
        bindingNotNeeded:
          $ref: '#/components/schemas/bindingNotNeeded'
      additionalProperties: false

    paymentOrderResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        error:
          $ref: '#/components/schemas/errorMessage'
        info:
          $ref: '#/components/schemas/info'
        redirect:
          $ref: '#/components/schemas/redirect'
        termUrl:
          $ref: '#/components/schemas/termUrl'
        acsUrl:
          $ref: '#/components/schemas/acsUrl'
        paReq:
          $ref: '#/components/schemas/paReq'
        cReq:
          $ref: '#/components/schemas/cReq'
        threeDSMethodUrl:
          $ref: '#/components/schemas/threeDSMethodUrl'
        threeDSMethodNotificationUrl:
          $ref: '#/components/schemas/threeDSMethodNotificationUrl'
        threeDSServerTransId:
          $ref: '#/components/schemas/threeDSServerTransId'
        threeDSMethodData:
          $ref: '#/components/schemas/threeDSMethodData'
        formUrl:
          $ref: '#/components/schemas/formUrl'
        acsRenderingType:
          $ref: '#/components/schemas/acsRenderingType'
        acsSignedContent:
          $ref: '#/components/schemas/acsSignedContent'
        acsDecoupleIndicator:
          $ref: '#/components/schemas/acsDecoupleIndicator'
      additionalProperties: false

    paymentSberPayRequest:
      type: object
      required:
        - userName
        - password
        - orderId
        - phone
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        phone:
          name: phone
          description: Номер телефона Плательщика в формате 7XXXXXXXXXX.
          type: string
          maxLength: 11
          minLength: 1
          pattern: ^\d{7,11}$
          example: "79011234567"
        merchantLogin:
          $ref: '#/components/schemas/merchantLogin'
      additionalProperties: false

    paymentSberPayResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    paymentOrderBySubscriptionRequest:
      type: object
      required:
        - userName
        - password
        - subscriptionId
        - orderId
        - memberId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        subscriptionId:
          name: subscriptionId
          description: Идентификатор сохраненной подписки.
          type: string
          maxLength: 32
          minLength: 32
          pattern: ^[a-f0-9]+$
          example: "c9403ef2f9254736a5af837238ce05b1"
        memberId:
          name: memberId
          description: Идентификатор банка отправителя
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d{12}$
      additionalProperties: false

    paymentOrderBySubscriptionResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    paymentOrderBindingRequest:
      type: object
      required:
        - userName
        - password
        - mdOrder
        - bindingId
        - ip
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        mdOrder:
          $ref: '#/components/schemas/orderId'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        cvc:
          $ref: '#/components/schemas/cvc'
        language:
          $ref: '#/components/schemas/language'
        ip:
          $ref: '#/components/schemas/ip'
        email:
          $ref: '#/components/schemas/email'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/tdsDestinationNumberAttributes'
            - $ref: '#/components/schemas/tdsDecoupledAttributes'
            - $ref: '#/components/schemas/tdsBrowserAttributes'
            - $ref: '#/components/schemas/tdsAdditionalAttributes'
            - $ref: '#/components/schemas/tdsApplicationAttributes'
            - $ref: '#/components/schemas/loyaltyAttributes'
            - $ref: '#/components/schemas/keyValue'
        threeDSMethodNotificationUrl:
          $ref: '#/components/schemas/threeDSMethodNotificationUrl'
        termUrl:
          $ref: '#/components/schemas/termUrl'
      additionalProperties: false

    paymentOrderBindingResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        info:
          $ref: '#/components/schemas/info'
        redirect:
          $ref: '#/components/schemas/redirect'
        termUrl:
          $ref: '#/components/schemas/termUrl'
        acsUrl:
          $ref: '#/components/schemas/acsUrl'
        paReq:
          $ref: '#/components/schemas/paReq'
        cReq:
          $ref: '#/components/schemas/cReq'
        threeDSMethodUrl:
          $ref: '#/components/schemas/threeDSMethodUrl'
        threeDSMethodNotificationUrl:
          $ref: '#/components/schemas/threeDSMethodNotificationUrl'
        threeDSServerTransId:
          $ref: '#/components/schemas/threeDSServerTransId'
        threeDSMethodData:
          $ref: '#/components/schemas/threeDSMethodData'
        formUrl:
          $ref: '#/components/schemas/formUrl'
        acsRenderingType:
          $ref: '#/components/schemas/acsRenderingType'
        acsSignedContent:
          $ref: '#/components/schemas/acsSignedContent'
        acsDecoupleIndicator:
          $ref: '#/components/schemas/acsDecoupleIndicator'
      additionalProperties: false

    unBindCardRequest:
      type: object
      required:
        - userName
        - password
        - bindingId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        language:
          $ref: '#/components/schemas/language'
      additionalProperties: false

    unBindCardResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    getBindingsRequest:
      type: object
      required:
        - userName
        - password
        - clientId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        clientId:
          $ref: '#/components/schemas/clientId'
        language:
          $ref: '#/components/schemas/language'
        showExpired:
          $ref: '#/components/schemas/showExpired'
        showInactive:
           $ref: '#/components/schemas/showInactive'
      additionalProperties: false

    getBindingsResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        bindings:
          $ref: '#/components/schemas/bindings'
      additionalProperties: false

    getBindingsByCardOrIdRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        language:
          $ref: '#/components/schemas/language'
        showExpired:
          $ref: '#/components/schemas/showExpired'
        showInactive:
           $ref: '#/components/schemas/showInactive'
      oneOf:
        - properties:
            pan:
              $ref: '#/components/schemas/pan'
          required: [pan]
          additionalProperties: false
        - properties:
            bindingId:
              $ref: '#/components/schemas/bindingId'
          required: [bindingId]
          additionalProperties: false

    getBindingsByCardOrIdResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        bindings:
          $ref: '#/components/schemas/bindings'
      additionalProperties: false

    bindCardRequest:
      type: object
      required:
        - userName
        - password
        - bindingId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        language:
          $ref: '#/components/schemas/language'
      additionalProperties: false

    bindCardResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    recurrentPaymentRequest:
      type: object
      required:
        - userName
        - password
        - orderNumber
        - bindingId
        - amount
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        bindingId:
          $ref: '#/components/schemas/bindingId'
        language:
          $ref: '#/components/schemas/language'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        description:
          $ref: '#/components/schemas/description'
        additionalParameters:
          name: additionalParameters
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/loyaltyAttributes'
            - $ref: '#/components/schemas/keyValue'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    recurrentPaymentResponse:
      type: object
      required:
        - success
      properties:
        success:
          $ref: '#/components/schemas/success'
        error:
          description: Блок информации об ошибках
          type: object
          required:
            - code
          properties:
            code:
              $ref: '#/components/schemas/errorCode'
            description:
              $ref: '#/components/schemas/errorMessage'
            message:
              $ref: '#/components/schemas/info'
          example: {}
          additionalProperties: false
        data:
          description: Блок информации о параметрах заказа
          type: object
          required:
            - orderId
          properties:
            orderId:
              $ref: '#/components/schemas/orderId'
            orderNumber:
              $ref: '#/components/schemas/orderNumber'
          additionalProperties: false
        orderStatus:
          description: Блок информации о статусе заказа
          type: object
          properties:
            orderStatus:
              $ref: '#/components/schemas/orderStatus'
            actionCode:
              $ref: '#/components/schemas/actionCode'
            actionCodeDescription:
              $ref: '#/components/schemas/actionCodeDescription'
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
            date:
              $ref: '#/components/schemas/date'
            attributes:
              $ref: '#/components/schemas/attributes'
            merchantOrderParams:
              $ref: '#/components/schemas/merchantOrderParams'
            cardAuthInfo:
              description: Блок информации о Токене Плательщика
              type: object
              properties:
                maskedPan:
                  $ref: '#/components/schemas/maskedPan'
                expiration:
                  $ref: '#/components/schemas/expiration'
                cardHolderName:
                  $ref: '#/components/schemas/cardholderName'
                paymentSystem:
                  $ref: '#/components/schemas/paymentSystem'
              additionalProperties: false
            approvalCode:
              $ref: '#/components/schemas/approvalCode'
            authDateTime:
              $ref: '#/components/schemas/authDateTime'
            terminalId:
              $ref: '#/components/schemas/terminalId'
            authRefNum:
              $ref: '#/components/schemas/authRefNum'
            paymentAmountInfo:
              $ref: '#/components/schemas/paymentAmountInfo'
            bankInfo:
              $ref: '#/components/schemas/bankInfo'
            bindingInfo:
              $ref: '#/components/schemas/bindingInfo'
            orderBundle:
              $ref: '#/components/schemas/orderBundle'
          additionalProperties: false
      additionalProperties: false

    paymentDirectRequest:
      type: object
      required:
        - userName
        - password
        - orderNumber
        - amount
        - paymentToken
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        amount:
          $ref: '#/components/schemas/amount'
        currencyCode:
          $ref: '#/components/schemas/currency'
        description:
          $ref: '#/components/schemas/description'
        language:
          $ref: '#/components/schemas/language'
        preAuth:
          $ref: '#/components/schemas/preAuth'
        additionalParameters:
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/fmConversionAttributes'
            - $ref: '#/components/schemas/dataEntryModeAttributes'
            - $ref: '#/components/schemas/keyValue'
        clientId:
          $ref: '#/components/schemas/clientId'
        paymentToken:
          $ref: '#/components/schemas/paymentTokenDecrypted'
        merchant:
          $ref: '#/components/schemas/merchantLogin'
        features:
          $ref: '#/components/schemas/featuresVerify'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
        #taxSystem:
        #  $ref: '#/components/schemas/taxSystem'
      additionalProperties: false

    paymentDirectResponse:
      type: object
      required:
        - success
      properties:
        success:
          $ref: '#/components/schemas/success'
        error:
          description: Блок информации об ошибках
          type: object
          required:
            - code
          properties:
            code:
              $ref: '#/components/schemas/errorCode'
            description:
              $ref: '#/components/schemas/errorMessage'
            message:
              $ref: '#/components/schemas/info'
          example: {}
          additionalProperties: false
        data:
          description: Блок информации о параметрах заказа
          type: object
          required:
            - orderId
          properties:
            orderId:
              $ref: '#/components/schemas/orderId'
            orderNumber:
              $ref: '#/components/schemas/orderNumber'
          additionalProperties: false
        orderStatus:
          description: Блок информации о статусе заказа
          type: object
          properties:
            orderStatus:
              $ref: '#/components/schemas/orderStatus'
            actionCode:
              $ref: '#/components/schemas/actionCode'
            actionCodeDescription:
              $ref: '#/components/schemas/actionCodeDescription'
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
            date:
              $ref: '#/components/schemas/date'
            attributes:
              $ref: '#/components/schemas/attributes'
            merchantOrderParams:
              $ref: '#/components/schemas/merchantOrderParams'
            cardAuthInfo:
              description: Блок информации о Токене Плательщика
              type: object
              properties:
                pan:
                  $ref: '#/components/schemas/maskedPan'
                expiration:
                  $ref: '#/components/schemas/expiration'
                cardHolderName:
                  $ref: '#/components/schemas/cardholderName'
                paymentSystem:
                  $ref: '#/components/schemas/paymentSystem'
              additionalProperties: false
            approvalCode:
              $ref: '#/components/schemas/approvalCode'
            authDateTime:
              $ref: '#/components/schemas/authDateTime'
            terminalId:
              $ref: '#/components/schemas/terminalId'
            authRefNum:
              $ref: '#/components/schemas/authRefNum'
            paymentAmountInfo:
              $ref: '#/components/schemas/paymentAmountInfo'
            bankInfo:
              $ref: '#/components/schemas/bankInfo'
            bindingInfo:
              $ref: '#/components/schemas/bindingInfo'
            orderBundle:
              $ref: '#/components/schemas/orderBundle'
          additionalProperties: false
      additionalProperties: false

    finish3dsMethodRequest:
      type: object
      required:
        - userName
        - password
        - mdOrder
        - threeDSServerTransId
        - threeDSCompInd
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        mdOrder:
          $ref: '#/components/schemas/orderId'
        threeDSServerTransId:
          $ref: '#/components/schemas/threeDSServerTransId'
        threeDSCompInd:
          $ref: '#/components/schemas/threeDSCompInd'
      additionalProperties: false

    finish3dsMethodResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        info:
          $ref: '#/components/schemas/info'
        redirect:
          $ref: '#/components/schemas/redirect'
        termUrl:
          $ref: '#/components/schemas/termUrl'
        acsUrl:
          $ref: '#/components/schemas/acsUrl'
        cReq:
          $ref: '#/components/schemas/cReq'
        acsDecoupleIndicator:
          $ref: '#/components/schemas/acsDecoupleIndicator'
      additionalProperties: false

    finish3dsPaymentRequest:
      type: object
      required:
        - userName
        - password
        - mdOrder
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        mdOrder:
          $ref: '#/components/schemas/orderId'
        paRes:
          $ref: '#/components/schemas/paRes'
        cRes:
          $ref: '#/components/schemas/cRes'
      additionalProperties: false

    finish3dsPaymentResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        info:
          $ref: '#/components/schemas/info'
        redirect:
          $ref: '#/components/schemas/redirect'
      additionalProperties: false

    callbackRequest:
      type: object
      required:
        - mdOrder
        - orderNumber
        - operation
        - status
      properties:
        mdOrder:
          $ref: '#/components/schemas/orderId'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        operation:
          $ref: '#/components/schemas/orderOperation'
        status:
          $ref: '#/components/schemas/status'
        #checksum:
          #$ref: '#/components/schemas/checksum'
        additionalParams:
          $ref: '#/components/schemas/additionalParams'
      additionalProperties: false

    bindingCallbackRequest:
      type: object
      required:
        - bindingId
        - clientId
        - operation
      properties:
        bindingId:
          $ref: '#/components/schemas/bindingId'
        clientId:
          $ref: '#/components/schemas/clientId'
        operation:
          $ref: '#/components/schemas/bindingOperation'
        #checksum:
          #$ref: '#/components/schemas/checksum'
      additionalProperties: false

    getReceiptStatusRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        receiptStatus:
          $ref: '#/components/schemas/receiptStatus'
      oneOf:
        - properties:
            receiptId:
              $ref: '#/components/schemas/receiptId'
          required: [receiptId]
          additionalProperties: false
        - properties:
            orderId:
              $ref: '#/components/schemas/orderId'
          required: [orderId]
          additionalProperties: false
        - properties:
            orderNumber:
              $ref: '#/components/schemas/orderNumber'
          required: [orderNumber]
          additionalProperties: false

    getReceiptStatusResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/message'
        orderId:
          $ref: '#/components/schemas/orderId'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        receipts:
          $ref: '#/components/schemas/receipts'
      additionalProperties: false

    retryReceiptRequest:
      type: object
      required:
        - userName
        - password
        - receiptIds
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        receiptIds:
          type: array
          items:
            $ref: '#/components/schemas/receiptId'
          maxItems: 100
      additionalProperties: false

    retryReceiptResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/message'
        retryResult:
          type: array
          description: Массив ответов с результатом переотправки по каждому чеку
          items:
            type: object
            properties:
              receiptId:
                $ref: '#/components/schemas/receiptId'
              result:
                $ref: '#/components/schemas/result'
            additionalProperties: false
      additionalProperties: false

    doReceiptRequest:
      type: object
      required:
        - userName
        - password
        - orderBundle
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
        receiptId:
          $ref: '#/components/schemas/receiptId'
        #receiptType:
        #  $ref: '#/components/schemas/receiptType'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/email'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    doReceiptResponse:
      type: object
      required:
        - orderId
      properties:
        message:
          $ref: '#/components/schemas/message'
        receiptId:
          $ref: '#/components/schemas/receiptId'
        orderId:
          $ref: '#/components/schemas/orderId'
        orderNumber:
          $ref: '#/components/schemas/orderNumber'
      additionalProperties: false

    getLoyaltyBalanceRequest:
      type: object
      required:
        - userName
        - password
        - bindingId
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        bindingId:
          $ref: '#/components/schemas/bindingId'
      additionalProperties: false

    getLoyaltyBalanceResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
        loyaltyOperations:
          $ref: '#/components/schemas/loyaltyOperations'
      additionalProperties: false

    autoCompletionRequest:
      type: object
      required:
        - userName
        - password
        - orderId
        - amount
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        compositeAmount:
          $ref: '#/components/schemas/compositeAmount'
        language:
          $ref: '#/components/schemas/language'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    autoCompletionResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false

    autoRefundRequest:
      type: object
      required:
        - userName
        - password
        - orderId
        - amount
      properties:
        userName:
          $ref: '#/components/schemas/userName'
        password:
          $ref: '#/components/schemas/password'
        orderId:
          $ref: '#/components/schemas/orderId'
        compositeAmount:
          $ref: '#/components/schemas/compositeAmount'
        language:
          $ref: '#/components/schemas/language'
        jsonParams:
          name: jsonParams
          description: Блок для передачи дополнительных параметров Клиентом.
          type: object
          additionalProperties: false
          maxProperties: 99
          anyOf:
            - $ref: '#/components/schemas/externalRefundId'
            - $ref: '#/components/schemas/keyValue'
        orderBundle:
          $ref: '#/components/schemas/orderBundle'
      additionalProperties: false

    autoRefundResponse:
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        errorMessage:
          $ref: '#/components/schemas/errorMessage'
      additionalProperties: false